%%% This file is generated; DO NOT EDIT MANUALLY.

-module(<%= @basename %>_SUITE).
-compile(export_all).
-include("ct.hrl").

-define(test(Name, Key, Expval),
        Name(Config) ->
               {value, {_, Pid}} = lists:keysearch(?MODULE, 1, Config),
               Pid ! {msg, self(), ?MODULE, Key},
               receive
                   Msg -> 
                    test_util:expected(Msg, Expval)
               after 500 -> 
                    exit(io_lib:format("timeout in ~s~n", [Name]))
               end).

init_per_suite(Config) ->
    File = "../../tests/excel_files/Win_Excel07_As_97/<%= @basename + ".xls"%>",
    {Cells, _Names, _Formats, _CSS, _Warnings, _Sheets} = filefilters:read(excel, File),
    hn_db_api:wait_for_dirty("http://127.0.0.1:9000"),
    Pid = spawn(test_util, test_state, [Cells]),
    [{?MODULE, Pid} | Config].

end_per_suite(_Config) ->
    ok.

init_per_testcase(_TestCase, Config) ->
    Config.

end_per_testcase(_TestCase, _Config) ->
    ok.

read_from_excel_data(Config, {Sheet, Row, Col}) ->
    test_util:read_from_excel_data(Config, <%= @basename + "_SUITE" %>, {Sheet, Row, Col}).

%%% TESTS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<%= @testcasedata.map { |rec| "?test(#{rec[0]}, #{rec[1]}, #{rec[2]}).\n" } %>
%%% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

all() ->
    [
        <%= @testcasedata.map { |rec| rec[0] }.join(",\n        ") %>
    ].
