%%% This file is generated; DO NOT EDIT MANUALLY.

-module(<%= @basename %>_SUITE).
-compile(export_all).
-include("ct.hrl").

-define(print_error_or_return(Res, Testcase),
        case Res of
            true ->
                {test, ok};
            false ->
                io:format("EXPECTED:~n    ~p~nGOT:~n    ~p~nCONV:~n    ~p~n~n",
                          [E, G, test_util:conv_from_get(G)]),
                exit("FAIL: Mismatch in " ++ atom_to_list(Testcase) ++
	             " <%= @basename %>_SUITE"	)
        end).

-define(test(Func, Path, Ref, Expected),
        Func(_Config) ->
                E = Expected,
                G = test_util:hnget("/" ++ "<%= @basename %>" ++ Path, Ref),
               Res = test_util:cmp(G, E),
               ?print_error_or_return(Res, Func)).

%%% TESTS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<%= @testcasedata.map { |rec| "?test(#{rec[0]}, \"#{rec[1]}\", \"#{rec[2]}\", #{rec[3]}).\n" } %>
%%% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

init_per_suite(Config) ->
    hypernumbers_app:clean_start(),     
    reset_perms(),                  
    %% TODO : should be configurable
    %Ref = #refX{site="http://127.0.0.1:9000", path=[]},
    %% TODO : ugh
    Ref = {refX,"http://127.0.0.1:9000", [], undefined, []},
    hn_file_upload:test_import("<%= @basename %>", Ref),
    hn_db_api:wait_for_dirty("http://127.0.0.1:9000"),
    Config.

reset_perms() ->
    auth_srv:clear_all_perms_DEBUG("http://127.0.0.1:9000"),

    % the home page
    auth_srv:add_controls("http://127.0.0.1:9000", [{user, "*"}, {group, "*"}],
                      ["[**]"],[read, write],
                      "_global/spreadsheet", ["_global/spreadsheet", "_global/pagebuilder"]),

    auth_srv:add_controls("http://127.0.0.1:9000", [{user, "*"}, {group, "*"}],
                      [],[read, write],
                      "_global/spreadsheet", ["_global/spreadsheet", "_global/pagebuilder"]).


end_per_suite(_Config) ->
    ok.

init_per_testcase(_TestCase, Config) ->
    Config.

end_per_testcase(_TestCase, _Config) ->
    ok.

test(_Config) ->
    ok.

all() ->
    [
      <%= @testcasedata.map { |rec| rec[0] }.join(",\n        ") %>
    ].
