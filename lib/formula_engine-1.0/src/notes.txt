These are general notes on how Muin works // is implemented.
(The information here might be out of date!)
<hasan@hypernumbers.com>

muin
----

Muin's a pretty straightforward interpreter. A formula is lexed 
first, then parsed by the parser which constructs a sexp-based AST, 
which is then walked by the interpreter and executed.

The simple version is that each list (= node) represents a function
call, head is the function name, and tail is the arguments. 
Arguments are evaluated left-to-right first, and then the head 
function is called with the resulting values.

TODO: Add notes on how preproc works and why it's needed.

stdfuns
-------

The set of functions used to be Excel 97 originally, then Excel 2004
because that's what I had, and now a few functions from Excel 2008
crept in too (as well as ones from Analysis ToolPak). I guess it's a
good thing -- Excel 97 is certainly covered, and all extras can be 
viewed as bonuses.

The general pattern for each function is that the exported version
does type and error checks, and then calls the helper function if all
arguments are ok. E.g. floor/1 is the exported function that does the
checking, floor1/2 is the helper function that does the actual
calculations. Helper functions are assumed to ALWAYS get correct args.

All exported functions have the arity of 1, because many functions can
take a variable number of arguments, and hard-coding the arity of each
of the standard ~250 functions is not worth it.

Excel is the spec for how the functions should behave. Only 
differences and incompatibilites are documented.
