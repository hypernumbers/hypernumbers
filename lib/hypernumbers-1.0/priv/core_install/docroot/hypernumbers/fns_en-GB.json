[
    {
        "fn": "dget",
        "category": "Database",
        "desc": "Extracts a single record from a list or database than meets the criteria.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "daverage",
        "category": "Database",
        "desc": "Averages the values in a field (column) of records in a list or database that match conditions you specify.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "dsum",
        "category": "Database",
        "desc": "Calculates the sum of values for a field in a database.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "dmin",
        "category": "Database",
        "desc": "Returns the minimum value in a field (column) of records in a list or database that match conditions you specify.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "dcounta",
        "category": "Database",
        "desc": "Counts the number of non-blank records in a list or database that match conditions you specify.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "dvar",
        "category": "Database",
        "desc": "Estimates the variance for a field in a sample from a database.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "dproduct",
        "category": "Database",
        "desc": "Multiplies the values in a field that meets certain criteria.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "dvarp",
        "category": "Database",
        "desc": "Estimates the variance for a field in a database.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "dstdevp",
        "category": "Database",
        "desc": "Calculates the standard deviation for a field in a sample from a database.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "dstdev",
        "category": "Database",
        "desc": "Calculates the standard deviation for a field in a database.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "dmax",
        "category": "Database",
        "desc": "Returns the maximum value in a field (column) of records in a list or database that match conditions you specify.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "dcount",
        "category": "Database",
        "desc": "Counts the number of values in a list or database that match conditions you specify.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "weekday",
        "category": "Date And Time",
        "desc": "Returns the day of the week from a date as an integer (with Sunday=1).",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Serial Number",
                "desc": "a string representation of a date or a serial number",
                "type": "finite"
            },
            {
                "name": "Return Type",
                "desc": "If Return Type = 1 Sunday is 1 and Saturday is 7, if Return Type = 2 Monday is 1 and Sunday is 7, if Return Type = 3, Monday = 0 and Sunday = 6",
                "type": "optional"
            }
        ]
    },
    {
        "fn": "second",
        "category": "Date And Time",
        "desc": "Returns the seconds value from a time value.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Serial Number",
                "desc": "a string representation of a date or a serial number",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "minute",
        "category": "Date And Time",
        "desc": "Returns the minute value from a time value.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Serial Number",
                "desc": "a string representation of a date or a serial number",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "date",
        "category": "Date And Time",
        "desc": "Returns the internal software serial number of a date.&nbsp;",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "today",
        "category": "Date And Time",
        "desc": "Todays date.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "month",
        "category": "Date And Time",
        "desc": "Returns the month value from a date value.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Serial Number",
                "desc": "a string representation of a date or a serial number",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "day",
        "category": "Date And Time",
        "desc": "Returns the day of the month from a date.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "now",
        "category": "Date And Time",
        "desc": "Returns the current time",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
        ]
    },
    {
        "fn": "hour",
        "category": "Date And Time",
        "desc": "Returns the hour of a time value.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Serial Number",
                "desc": "a string representation of a date or a serial number",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "year",
        "category": "Date And Time",
        "desc": "Returns the year value for a given date.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Serial Number",
                "desc": "a string representation of a date or a serial number",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "time",
        "category": "Date And Time",
        "desc": "Returns the decimal fraction of days time in terms of 24 hours.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "syd",
        "category": "Financial",
        "desc": "Returns the sum-of-years' digits depreciation of an asset for a specified period.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "pv",
        "category": "Financial",
        "desc": "Returns the present value of an investment.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "rate",
        "category": "Financial",
        "desc": "Caculates the interest rate per period for an annuity.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "nper",
        "category": "Financial",
        "desc": "Returns the number of periods for an investment based on periodic constant payments and interest rate.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "ddb",
        "category": "Financial",
        "desc": "Returns the depreceiation of an asset.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "sln",
        "category": "Financial",
        "desc": "Returns the straight-line depreciation of an asset for one period.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "pmt",
        "category": "Financial",
        "desc": "Calculates the payment amount for a loan over a number of periods at a fixed interest rate.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "npv",
        "category": "Financial",
        "desc": "Calculates the net present value of an investment by using a discount rate and a series of future payments (negative values) and income (positive values).",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "fv",
        "category": "Financial",
        "desc": "Returns the future value of an investment.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "irr",
        "category": "Financial",
        "desc": "returns tyhe internal rate of return for a series of cash flows.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "textarea",
        "category": "HN Forms",
        "desc": "Create a textarea",
        "experimental": false,
        "includable": true,
        "inexcel": false,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "include",
        "category": "HN Layout",
        "desc": "Includes the range as rendered html",
        "experimental": false,
        "includable": false,
        "inexcel": false,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "select",
        "category": "HN Forms",
        "desc": "Create a drop down select box",
        "experimental": false,
        "includable": true,
        "inexcel": false,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "input",
        "category": "HN Forms",
        "desc": "Create a single line text input",
        "experimental": false,
        "includable": true,
        "inexcel": false,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "twitter.button",
        "category": "HN Web",
        "desc": "Embed a twitter \"follow me\" button onto your page - name is your username is optional and a number from 0-5 which changes the style of the button",
        "experimental": false,
        "includable": true,
        "inexcel": false,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "radio",
        "category": "HN Forms",
        "desc": "Create a set of radio buttons",
        "experimental": false,
        "includable": true,
        "inexcel": false,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "button",
        "category": "HN Forms",
        "desc": "Create a button with its value set to text",
        "experimental": false,
        "includable": true,
        "inexcel": false,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "google.map",
        "category": "HN Web",
        "desc": "Embed a google map that centers at Latitude, Longitude, the zoom level is a number between 1 and 20. (the map will preview as an image inside the spreadsheet)",
        "experimental": true,
        "includable": true,
        "inexcel": false,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "iserror",
        "category": "Information",
        "desc": "Checks whether a cell value is an error and returns TRUE or FALSE",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "istext",
        "category": "Information",
        "desc": "Checks whether a cell value is text and returns TRUE or FALSE",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "n",
        "category": "Information",
        "desc": "Converts non-number values to numbers",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "isnontext",
        "category": "Information",
        "desc": "Checks whether a value is not text and returns TRUE or FALSE",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "isna",
        "category": "Information",
        "desc": "Checks whether a value is #N/A and returns TRUE or FALSE",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "iserr",
        "category": "Information",
        "desc": "Checks whether a cell value is an error and returns TRUE or FALSE",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "na",
        "category": "Information",
        "desc": "Returns (value not available) #N/A",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "isnumber",
        "category": "Information",
        "desc": "Checks whether a cell value is a number and returns TRUE or FALSE",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "islogical",
        "category": "Information",
        "desc": "Checks whether a cell has a logical value of (TRUE or FALSE) and returns TRUE or FALSE",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "isblank",
        "category": "Information",
        "desc": "Checks whether a cell is empty and returns TRUE or FALSE",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "not",
        "category": "Logical",
        "desc": "Changes logical value e.g. From FALSE to TRUE",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "and",
        "category": "Logical",
        "desc": "Returns true if all the logic arguments supplied evaluate to TRUE. ",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "true",
        "category": "Logical",
        "desc": "Returns the logical value of TRUE.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "or",
        "category": "Logical",
        "desc": "Returns TRUE if any of the logic arguments supplied evaluate to TRUE. Otherwise FALSE.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "false",
        "category": "Logical",
        "desc": "Retuns a logical value of FALSE.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "if",
        "category": "Logical",
        "desc": "Use conditional logic in calculations.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "rows",
        "category": "Lookup And Reference",
        "desc": "Returns the number of rows in an array/range.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "match",
        "category": "Lookup And Reference",
        "desc": "Returns the relative position of an itm in an array that matches a specified value in a specified order",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "hlookup",
        "category": "Lookup And Reference",
        "desc": "Searches for a value in the top row of an array and returns the value in the row specified to get the value from.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "vlookup",
        "category": "Lookup And Reference",
        "desc": "Searches for a value in the leftmost column of an array and returns the value in the column specified to get the value from.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "index",
        "category": "Lookup And Reference",
        "desc": "Returns a value from within an array at the position specified by a row and column number.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "choose",
        "category": "Lookup And Reference",
        "desc": "Uses an index number to select from a list of values.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "columns",
        "category": "Lookup And Reference",
        "desc": "Ruturns the number of columns in an array/range.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "sin",
        "category": "Maths And Trigonometry",
        "desc": "Returns the sine of an angle expressed as radians.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Angle",
                "desc": "An angle (in radians)",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "power",
        "category": "Maths And Trigonometry",
        "desc": "Returns the result of a number raised by a specified power.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "mod",
        "category": "Maths And Trigonometry",
        "desc": "Returns the remainder of a number divided by another number.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "acos",
        "category": "Maths And Trigonometry",
        "desc": "Returns the arccosine of a number between -1 and 1. The arccosine is the angle whose cosine is the number. The angle is given in radians from 0 to pi. ",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Angle",
                "desc": "An angle (in radians)",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "ln",
        "category": "Maths And Trigonometry",
        "desc": "Returns the natural (base e) logarithm of a number.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "degrees",
        "category": "Maths And Trigonometry",
        "desc": "Converts radians to degrees.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Angle",
                "desc": "An angle (in radians)",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "sum",
        "category": "Maths And Trigonometry",
        "desc": "calculates the sum of all the numbers specified.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "atan",
        "category": "Maths And Trigonometry",
        "desc": "Returns the arctangent of a number. The arctangent is the angle whose tangent is the number. The angle is given in radians from -pi/2 to pi/2. ",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Angle",
                "desc": "An angle (in radians)",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "radians",
        "category": "Maths And Trigonometry",
        "desc": "Converts degrees to radians.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Angle",
                "desc": "An angle (in degrees)",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "pi",
        "category": "Maths And Trigonometry",
        "desc": "Returns the constant PI.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
        ]
    },
    {
        "fn": "log",
        "category": "Maths And Trigonometry",
        "desc": "Returns the logarithm of a number for any specified base.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "exp",
        "category": "Maths And Trigonometry",
        "desc": "Exponetial of a number is e (=2.71828182845905) raised to the power of the input number. ",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "tan",
        "category": "Maths And Trigonometry",
        "desc": "Returns the tangent of an angle - entered as radians.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Angle",
                "desc": "An angle (in radians)",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "sumif",
        "category": "Maths And Trigonometry",
        "desc": "Returns the sum of numbers in a range of cells that satisfy a specified criteria. For example =SUMIF(a1:a4, \\\">2\\\") will sum up the values in a1:a4 only where the cell is >2. The cells to be summed can be from a different range.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "atan2",
        "category": "Maths And Trigonometry",
        "desc": "Returns the arctangent or angle between the x-axis and a line extending from the origin to some (x,y) coordinates. The angle is given in radians from -pi to pi. ",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Angle",
                "desc": "An angle (in radians)",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "abs",
        "category": "Maths And Trigonometry",
        "desc": "Returns the absolute value of a number.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "log10",
        "category": "Maths And Trigonometry",
        "desc": "Returns the logarithm to base 10 of a number.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "fact",
        "category": "Maths And Trigonometry",
        "desc": "Returns factorial of a number. E.g. Fact(4)=4*3*2*1=24.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "cos",
        "category": "Maths And Trigonometry",
        "desc": "Returns the cosine of an angle - supplied as radians.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Angle",
                "desc": "An angle (in radians)",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "sqrt",
        "category": "Maths And Trigonometry",
        "desc": "Returns the square root of a number. For info =SQRT(4) is equivalent to using =4^0.5 or power(4,0.5).",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "asin",
        "category": "Maths And Trigonometry",
        "desc": "Returns the arcsine of a number between -1 and 1. The arcsine is the angle whose sine is the number. The angle is given in radians from -pi/2 to pi/2. ",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Angle",
                "desc": "An angle (in radians)",
                "type": "finite"
            }
        ]
    },
    {
        "fn": "product",
        "category": "Maths And Trigonometry",
        "desc": "Returns the product of multiplying numbers e.g. =PRODUCT(1, 2, 3) is the same as =1x2x3.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "odd",
        "category": "Maths And Trigonometry",
        "desc": "Returns a number rounded up to the nearest odd integer.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "min",
        "category": "Statistical",
        "desc": "Returns the smallest value in a range of values.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "countblank",
        "category": "Statistical",
        "desc": "Counts the number of empty cells.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "average",
        "category": "Statistical",
        "desc": "Returns the average of a range of numbers",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Variable",
                "desc": "Variables can refer to anything, but only numbers will be counted",
                "type": "infinite"
            }
        ]
    },
    {
        "fn": "countif",
        "category": "Statistical",
        "desc": "Counts the number of cells in a range that meet a given condition.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "count",
        "category": "Statistical",
        "desc": "Counts the number of cells with numbers.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": true,
        "args": [
            {
                "name": "Number",
                "desc": "Can be a number or range of numbers",
                "type": "infinite"
            }
        ]
    },
    {
        "fn": "var",
        "category": "Statistical",
        "desc": "Calculates the variance of a sample of numbers around the mean. Uses n-1 as the divisor.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "stdevp",
        "category": "Statistical",
        "desc": "Calculates the standard deviation or dispersion measure of a set of values around the mean. Uses n as the divisor.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "max",
        "category": "Statistical",
        "desc": "Returns the largest value in a range of values.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "counta",
        "category": "Statistical",
        "desc": "Counts the number of cells that are not empty.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "varp",
        "category": "Statistical",
        "desc": "Calculates the variance of a sample of numbers around the mean. Uses n as the divisor.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "stdev",
        "category": "Statistical",
        "desc": "Calculates the standard deviation or dispersion measure of a set of values around the mean. Uses n-1 as the divisor.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "proper",
        "category": "Text",
        "desc": "Capitalises the first letter in a text string.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "upper",
        "category": "Text",
        "desc": "Converts text to uppercase.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "len",
        "category": "Text",
        "desc": "Returns the length (number of characters) in a string.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "substitute",
        "category": "Text",
        "desc": "Substitutes new for old text in a text string.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "exact",
        "category": "Text",
        "desc": "Compares two text strings and returns TRUE if they are an exact match or FALSE otherwise.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "replace",
        "category": "Text",
        "desc": "Replaces part of a text string with the specified characters.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "value",
        "category": "Text",
        "desc": "Converts a text string that represents a number to a number.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "lower",
        "category": "Text",
        "desc": "Converts all characters in a string to lower case.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "t",
        "category": "Text",
        "desc": "Returns the value of the referenced cell.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "find",
        "category": "Text",
        "desc": "Returns the position of a character in a string.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "rept",
        "category": "Text",
        "desc": "Repeat text a specified number of times.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "mid",
        "category": "Text",
        "desc": "Extracts a substring from a larger string.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "trim",
        "category": "Text",
        "desc": "Removes spaces from text except for single spacing between words.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "left",
        "category": "Text",
        "desc": "Extracts the left most characters in a string specified by num_chars. The default is the leftmost character if num_chars is omitted.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "right",
        "category": "Text",
        "desc": "Returns the rightmost non-missing characters from a text string given the number of characters required.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "int",
        "category": "Truncation",
        "desc": "Rounds a number down to the nearest integer value.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "trunc",
        "category": "Truncation",
        "desc": "Truncates a number to a specified number of decimal places.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "round",
        "category": "Truncation",
        "desc": "Rounds a number to the specified round-off unit.",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "even",
        "category": "Truncation",
        "desc": "Returns number up to the nearest even integer. ",
        "experimental": false,
        "includable": true,
        "inexcel": true,
        "resize": false,
        "wizardready": false,
        "args": [
        ]
    },
    {
        "fn": "piechart",
        "category": "HN Graphs",
        "desc": "Creates a piechart.",
        "experimental": false,
        "includable": true,
        "inexcel": false,
        "resize": "range",
        "resize_rows_default": 4,
        "resize_cols_default": 8,
        "wizardready": true,
        "args": [
            {
                "name": "No. of Series",
                "desc": "The number of data series there are",
                "type": "variable",
                "attr": {
                    "name": "Data series",
                    "desc": "Must be 2 wide or 2 high",
                    "type": "infinite"
                }
            },
            {
                "name": "Title",
                "desc": "Title of the piechart",
                "optional": true
            }
        ]
    }
]
