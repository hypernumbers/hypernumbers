% This module has been generated by generatetest.rb
% DO NOT EDIT MANUALLY.
%
% Source file: gnumeric_text.xls
% Generated on: Wed Jan 23 21:10:01 +0000 2008

-module(gnumeric_text_SUITE).
-compile(export_all).
-include("test_server.hrl").


init_per_suite(Config) ->
    code:add_patha("../../ebin"),
    production_boot:setup_paths(),
    Data = test_util:read_excel_file("/Win Excel 2007 (as 97)/gnumeric_text.xls"),
    %%io:format("in init_per_suite Data is ~p~n",[Data]),
    lists:merge([Config, [{gnumeric_text_SUITE, Data}]]).
  
end_per_suite(_Config) ->
    ok.
  
init_per_testcase(_TestCase, Config) -> Config.

end_per_testcase(_TestCase, _Config) -> ok.

read_from_excel_data(Config, {Row,Col}) ->
    {value, Result} = lists:keysearch(gnumeric_text_SUITE, 1, Config),
    Data = element(2, Result),
    Key={{row_index,Row},{col_index,Col}},
    {value, Result2} = lists:keysearch(Key, 1, Data),
    El=element(2, Result2),
    %%io:format("El is ~p~n",[El]),
    case El of
        {value, number, Number} -> {number,Number};
        {string,String}         -> {string,String};
        {formula,Formula}       -> {formula,Formula};
        {value,boolean,Boolean} -> {boolean,Boolean};
        {value,error,Error}     -> {error, Error};
        Other                   -> io:format("(in generatetest.rb - fix me Other is ~p~n",[Other])
    end.

a16_test(doc) -> [""];
a16_test(suite) -> [];
a16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["DOLLAR",read_from_excel_data(Config,{15,0})]),
  test_util:expected(true, test_util:excel_equal({string,"DOLLAR"}, read_from_excel_data(Config,{15,0}))).
  
a27_test(doc) -> [""];
a27_test(suite) -> [];
a27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["RIGHT",read_from_excel_data(Config,{26,0})]),
  test_util:expected(true, test_util:excel_equal({string,"RIGHT"}, read_from_excel_data(Config,{26,0}))).
  
a11_test(doc) -> [""];
a11_test(suite) -> [];
a11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Function",read_from_excel_data(Config,{10,0})]),
  test_util:expected(true, test_util:excel_equal({string,"Function"}, read_from_excel_data(Config,{10,0}))).
  
a22_test(doc) -> [""];
a22_test(suite) -> [];
a22_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["LOWER",read_from_excel_data(Config,{21,0})]),
  test_util:expected(true, test_util:excel_equal({string,"LOWER"}, read_from_excel_data(Config,{21,0}))).
  
a33_test(doc) -> [""];
a33_test(suite) -> [];
a33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["UPPER",read_from_excel_data(Config,{32,0})]),
  test_util:expected(true, test_util:excel_equal({string,"UPPER"}, read_from_excel_data(Config,{32,0}))).
  
a17_test(doc) -> [""];
a17_test(suite) -> [];
a17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["EXACT",read_from_excel_data(Config,{16,0})]),
  test_util:expected(true, test_util:excel_equal({string,"EXACT"}, read_from_excel_data(Config,{16,0}))).
  
a28_test(doc) -> [""];
a28_test(suite) -> [];
a28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["SEARCH",read_from_excel_data(Config,{27,0})]),
  test_util:expected(true, test_util:excel_equal({string,"SEARCH"}, read_from_excel_data(Config,{27,0}))).
  
a1_test(doc) -> [""];
a1_test(suite) -> [];
a1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["TEXT FUNCTIONS",read_from_excel_data(Config,{0,0})]),
  test_util:expected(true, test_util:excel_equal({string,"TEXT FUNCTIONS"}, read_from_excel_data(Config,{0,0}))).
  
a12_test(doc) -> [""];
a12_test(suite) -> [];
a12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["CHAR",read_from_excel_data(Config,{11,0})]),
  test_util:expected(true, test_util:excel_equal({string,"CHAR"}, read_from_excel_data(Config,{11,0}))).
  
a23_test(doc) -> [""];
a23_test(suite) -> [];
a23_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["MID",read_from_excel_data(Config,{22,0})]),
  test_util:expected(true, test_util:excel_equal({string,"MID"}, read_from_excel_data(Config,{22,0}))).
  
a34_test(doc) -> [""];
a34_test(suite) -> [];
a34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["VALUE",read_from_excel_data(Config,{33,0})]),
  test_util:expected(true, test_util:excel_equal({string,"VALUE"}, read_from_excel_data(Config,{33,0}))).
  
a7_test(doc) -> [""];
a7_test(suite) -> [];
a7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["#Succeded",read_from_excel_data(Config,{6,0})]),
  test_util:expected(true, test_util:excel_equal({string,"#Succeded"}, read_from_excel_data(Config,{6,0}))).
  
a18_test(doc) -> [""];
a18_test(suite) -> [];
a18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["FIND",read_from_excel_data(Config,{17,0})]),
  test_util:expected(true, test_util:excel_equal({string,"FIND"}, read_from_excel_data(Config,{17,0}))).
  
a29_test(doc) -> [""];
a29_test(suite) -> [];
a29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["SUBSTITUTE",read_from_excel_data(Config,{28,0})]),
  test_util:expected(true, test_util:excel_equal({string,"SUBSTITUTE"}, read_from_excel_data(Config,{28,0}))).
  
a13_test(doc) -> [""];
a13_test(suite) -> [];
a13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["CLEAN",read_from_excel_data(Config,{12,0})]),
  test_util:expected(true, test_util:excel_equal({string,"CLEAN"}, read_from_excel_data(Config,{12,0}))).
  
a24_test(doc) -> [""];
a24_test(suite) -> [];
a24_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["PROPER",read_from_excel_data(Config,{23,0})]),
  test_util:expected(true, test_util:excel_equal({string,"PROPER"}, read_from_excel_data(Config,{23,0}))).
  
a35_test(doc) -> [""];
a35_test(suite) -> [];
a35_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Total",read_from_excel_data(Config,{34,0})]),
  test_util:expected(true, test_util:excel_equal({string,"Total"}, read_from_excel_data(Config,{34,0}))).
  
a8_test(doc) -> [""];
a8_test(suite) -> [];
a8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=SUM(H12:H34)",read_from_excel_data(Config,{7,0})]),
  test_util:expected(true, test_util:excel_equal({formula,"=SUM(H12:H34)"}, read_from_excel_data(Config,{7,0}))).
  
a19_test(doc) -> [""];
a19_test(suite) -> [];
a19_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["FIXED",read_from_excel_data(Config,{18,0})]),
  test_util:expected(true, test_util:excel_equal({string,"FIXED"}, read_from_excel_data(Config,{18,0}))).
  
a30_test(doc) -> [""];
a30_test(suite) -> [];
a30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["T",read_from_excel_data(Config,{29,0})]),
  test_util:expected(true, test_util:excel_equal({string,"T"}, read_from_excel_data(Config,{29,0}))).
  
a3_test(doc) -> [""];
a3_test(suite) -> [];
a3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Test Status",read_from_excel_data(Config,{2,0})]),
  test_util:expected(true, test_util:excel_equal({string,"Test Status"}, read_from_excel_data(Config,{2,0}))).
  
a14_test(doc) -> [""];
a14_test(suite) -> [];
a14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["CODE",read_from_excel_data(Config,{13,0})]),
  test_util:expected(true, test_util:excel_equal({string,"CODE"}, read_from_excel_data(Config,{13,0}))).
  
a25_test(doc) -> [""];
a25_test(suite) -> [];
a25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["REPLACE",read_from_excel_data(Config,{24,0})]),
  test_util:expected(true, test_util:excel_equal({string,"REPLACE"}, read_from_excel_data(Config,{24,0}))).
  
a20_test(doc) -> [""];
a20_test(suite) -> [];
a20_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["LEFT",read_from_excel_data(Config,{19,0})]),
  test_util:expected(true, test_util:excel_equal({string,"LEFT"}, read_from_excel_data(Config,{19,0}))).
  
a31_test(doc) -> [""];
a31_test(suite) -> [];
a31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["TEXT",read_from_excel_data(Config,{30,0})]),
  test_util:expected(true, test_util:excel_equal({string,"TEXT"}, read_from_excel_data(Config,{30,0}))).
  
a4_test(doc) -> [""];
a4_test(suite) -> [];
a4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(A8=B8,\"All ok.\",\"FAILED!!\")",read_from_excel_data(Config,{3,0})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(A8=B8,\"All ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{3,0}))).
  
a15_test(doc) -> [""];
a15_test(suite) -> [];
a15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["CONCATENATE",read_from_excel_data(Config,{14,0})]),
  test_util:expected(true, test_util:excel_equal({string,"CONCATENATE"}, read_from_excel_data(Config,{14,0}))).
  
a26_test(doc) -> [""];
a26_test(suite) -> [];
a26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["REPT",read_from_excel_data(Config,{25,0})]),
  test_util:expected(true, test_util:excel_equal({string,"REPT"}, read_from_excel_data(Config,{25,0}))).
  
a21_test(doc) -> [""];
a21_test(suite) -> [];
a21_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["LEN",read_from_excel_data(Config,{20,0})]),
  test_util:expected(true, test_util:excel_equal({string,"LEN"}, read_from_excel_data(Config,{20,0}))).
  
a32_test(doc) -> [""];
a32_test(suite) -> [];
a32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["TRIM",read_from_excel_data(Config,{31,0})]),
  test_util:expected(true, test_util:excel_equal({string,"TRIM"}, read_from_excel_data(Config,{31,0}))).
  
b16_test(doc) -> [""];
b16_test(suite) -> [];
b16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=DOLLAR(12345)",read_from_excel_data(Config,{15,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=DOLLAR(12345)"}, read_from_excel_data(Config,{15,1}))).
  
b27_test(doc) -> [""];
b27_test(suite) -> [];
b27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=RIGHT(\"testing\")",read_from_excel_data(Config,{26,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=RIGHT(\"testing\")"}, read_from_excel_data(Config,{26,1}))).
  
b11_test(doc) -> [""];
b11_test(suite) -> [];
b11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["1st test",read_from_excel_data(Config,{10,1})]),
  test_util:expected(true, test_util:excel_equal({string,"1st test"}, read_from_excel_data(Config,{10,1}))).
  
b22_test(doc) -> [""];
b22_test(suite) -> [];
b22_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=LOWER(\"J. F. Kennedy\")",read_from_excel_data(Config,{21,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=LOWER(\"J. F. Kennedy\")"}, read_from_excel_data(Config,{21,1}))).
  
b33_test(doc) -> [""];
b33_test(suite) -> [];
b33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=UPPER(\"canCel\")",read_from_excel_data(Config,{32,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=UPPER(\"canCel\")"}, read_from_excel_data(Config,{32,1}))).
  
b17_test(doc) -> [""];
b17_test(suite) -> [];
b17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=EXACT(\"key\",\"key\")",read_from_excel_data(Config,{16,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=EXACT(\"key\",\"key\")"}, read_from_excel_data(Config,{16,1}))).
  
b28_test(doc) -> [""];
b28_test(suite) -> [];
b28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=SEARCH(\"c\",\"Cancel\")",read_from_excel_data(Config,{27,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=SEARCH(\"c\",\"Cancel\")"}, read_from_excel_data(Config,{27,1}))).
  
b12_test(doc) -> [""];
b12_test(suite) -> [];
b12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CHAR(65)",read_from_excel_data(Config,{11,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CHAR(65)"}, read_from_excel_data(Config,{11,1}))).
  
b23_test(doc) -> [""];
b23_test(suite) -> [];
b23_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=MID(\"testing\",2,3)",read_from_excel_data(Config,{22,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=MID(\"testing\",2,3)"}, read_from_excel_data(Config,{22,1}))).
  
b34_test(doc) -> [""];
b34_test(suite) -> [];
b34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=VALUE(\"$1,000\")",read_from_excel_data(Config,{33,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=VALUE(\"$1,000\")"}, read_from_excel_data(Config,{33,1}))).
  
b7_test(doc) -> [""];
b7_test(suite) -> [];
b7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["#Total",read_from_excel_data(Config,{6,1})]),
  test_util:expected(true, test_util:excel_equal({string,"#Total"}, read_from_excel_data(Config,{6,1}))).
  
b18_test(doc) -> [""];
b18_test(suite) -> [];
b18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=FIND(\"J\",\"John\")",read_from_excel_data(Config,{17,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=FIND(\"J\",\"John\")"}, read_from_excel_data(Config,{17,1}))).
  
b29_test(doc) -> [""];
b29_test(suite) -> [];
b29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=SUBSTITUTE(\"testing\",\"test\",\"wait\")",read_from_excel_data(Config,{28,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=SUBSTITUTE(\"testing\",\"test\",\"wait\")"}, read_from_excel_data(Config,{28,1}))).
  
b13_test(doc) -> [""];
b13_test(suite) -> [];
b13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CLEAN(\"No cleaning..\")",read_from_excel_data(Config,{12,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CLEAN(\"No cleaning..\")"}, read_from_excel_data(Config,{12,1}))).
  
b24_test(doc) -> [""];
b24_test(suite) -> [];
b24_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=PROPER(\"j. f. kennedy\")",read_from_excel_data(Config,{23,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=PROPER(\"j. f. kennedy\")"}, read_from_excel_data(Config,{23,1}))).
  
b8_test(doc) -> [""];
b8_test(suite) -> [];
b8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[23.0,read_from_excel_data(Config,{7,1})]),
  test_util:expected(true, test_util:excel_equal({number,23.0}, read_from_excel_data(Config,{7,1}))).
  
b19_test(doc) -> [""];
b19_test(suite) -> [];
b19_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=FIXED(1234.567,2)",read_from_excel_data(Config,{18,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=FIXED(1234.567,2)"}, read_from_excel_data(Config,{18,1}))).
  
b30_test(doc) -> [""];
b30_test(suite) -> [];
b30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=T(\"xx\")",read_from_excel_data(Config,{29,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=T(\"xx\")"}, read_from_excel_data(Config,{29,1}))).
  
b14_test(doc) -> [""];
b14_test(suite) -> [];
b14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CODE(\"A\")",read_from_excel_data(Config,{13,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CODE(\"A\")"}, read_from_excel_data(Config,{13,1}))).
  
b25_test(doc) -> [""];
b25_test(suite) -> [];
b25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=REPLACE(\"testing\",2,3,\"*****\")",read_from_excel_data(Config,{24,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=REPLACE(\"testing\",2,3,\"*****\")"}, read_from_excel_data(Config,{24,1}))).
  
b20_test(doc) -> [""];
b20_test(suite) -> [];
b20_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=LEFT(\"Directory\",3)",read_from_excel_data(Config,{19,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=LEFT(\"Directory\",3)"}, read_from_excel_data(Config,{19,1}))).
  
b31_test(doc) -> [""];
b31_test(suite) -> [];
b31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=TEXT(3.223,\"$0.00\")",read_from_excel_data(Config,{30,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=TEXT(3.223,\"$0.00\")"}, read_from_excel_data(Config,{30,1}))).
  
b15_test(doc) -> [""];
b15_test(suite) -> [];
b15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CONCATENATE(\"aa\",\"bb\")",read_from_excel_data(Config,{14,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CONCATENATE(\"aa\",\"bb\")"}, read_from_excel_data(Config,{14,1}))).
  
b26_test(doc) -> [""];
b26_test(suite) -> [];
b26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=REPT(\".\",3)",read_from_excel_data(Config,{25,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=REPT(\".\",3)"}, read_from_excel_data(Config,{25,1}))).
  
b21_test(doc) -> [""];
b21_test(suite) -> [];
b21_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=LEN(\"Montreal\")",read_from_excel_data(Config,{20,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=LEN(\"Montreal\")"}, read_from_excel_data(Config,{20,1}))).
  
b32_test(doc) -> [""];
b32_test(suite) -> [];
b32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=TRIM(\" a ddd   cc\")",read_from_excel_data(Config,{31,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=TRIM(\" a ddd   cc\")"}, read_from_excel_data(Config,{31,1}))).
  
c16_test(doc) -> [""];
c16_test(suite) -> [];
c16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["$12,345.00",read_from_excel_data(Config,{15,2})]),
  test_util:expected(true, test_util:excel_equal({string,"$12,345.00"}, read_from_excel_data(Config,{15,2}))).
  
c27_test(doc) -> [""];
c27_test(suite) -> [];
c27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["g",read_from_excel_data(Config,{26,2})]),
  test_util:expected(true, test_util:excel_equal({string,"g"}, read_from_excel_data(Config,{26,2}))).
  
c11_test(doc) -> [""];
c11_test(suite) -> [];
c11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Correct",read_from_excel_data(Config,{10,2})]),
  test_util:expected(true, test_util:excel_equal({string,"Correct"}, read_from_excel_data(Config,{10,2}))).
  
c22_test(doc) -> [""];
c22_test(suite) -> [];
c22_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["j. f. kennedy",read_from_excel_data(Config,{21,2})]),
  test_util:expected(true, test_util:excel_equal({string,"j. f. kennedy"}, read_from_excel_data(Config,{21,2}))).
  
c33_test(doc) -> [""];
c33_test(suite) -> [];
c33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["CANCEL",read_from_excel_data(Config,{32,2})]),
  test_util:expected(true, test_util:excel_equal({string,"CANCEL"}, read_from_excel_data(Config,{32,2}))).
  
c17_test(doc) -> [""];
c17_test(suite) -> [];
c17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{16,2})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{16,2}))).
  
c28_test(doc) -> [""];
c28_test(suite) -> [];
c28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[1.0,read_from_excel_data(Config,{27,2})]),
  test_util:expected(true, test_util:excel_equal({number,1.0}, read_from_excel_data(Config,{27,2}))).
  
c12_test(doc) -> [""];
c12_test(suite) -> [];
c12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["A",read_from_excel_data(Config,{11,2})]),
  test_util:expected(true, test_util:excel_equal({string,"A"}, read_from_excel_data(Config,{11,2}))).
  
c23_test(doc) -> [""];
c23_test(suite) -> [];
c23_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["est",read_from_excel_data(Config,{22,2})]),
  test_util:expected(true, test_util:excel_equal({string,"est"}, read_from_excel_data(Config,{22,2}))).
  
c34_test(doc) -> [""];
c34_test(suite) -> [];
c34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[1000.0,read_from_excel_data(Config,{33,2})]),
  test_util:expected(true, test_util:excel_equal({number,1000.0}, read_from_excel_data(Config,{33,2}))).
  
c18_test(doc) -> [""];
c18_test(suite) -> [];
c18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[1.0,read_from_excel_data(Config,{17,2})]),
  test_util:expected(true, test_util:excel_equal({number,1.0}, read_from_excel_data(Config,{17,2}))).
  
c29_test(doc) -> [""];
c29_test(suite) -> [];
c29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["waiting",read_from_excel_data(Config,{28,2})]),
  test_util:expected(true, test_util:excel_equal({string,"waiting"}, read_from_excel_data(Config,{28,2}))).
  
c13_test(doc) -> [""];
c13_test(suite) -> [];
c13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["No cleaning..",read_from_excel_data(Config,{12,2})]),
  test_util:expected(true, test_util:excel_equal({string,"No cleaning.."}, read_from_excel_data(Config,{12,2}))).
  
c24_test(doc) -> [""];
c24_test(suite) -> [];
c24_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["J. F. Kennedy",read_from_excel_data(Config,{23,2})]),
  test_util:expected(true, test_util:excel_equal({string,"J. F. Kennedy"}, read_from_excel_data(Config,{23,2}))).
  
c19_test(doc) -> [""];
c19_test(suite) -> [];
c19_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["1,234.57",read_from_excel_data(Config,{18,2})]),
  test_util:expected(true, test_util:excel_equal({string,"1,234.57"}, read_from_excel_data(Config,{18,2}))).
  
c30_test(doc) -> [""];
c30_test(suite) -> [];
c30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["xx",read_from_excel_data(Config,{29,2})]),
  test_util:expected(true, test_util:excel_equal({string,"xx"}, read_from_excel_data(Config,{29,2}))).
  
c14_test(doc) -> [""];
c14_test(suite) -> [];
c14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[65.0,read_from_excel_data(Config,{13,2})]),
  test_util:expected(true, test_util:excel_equal({number,65.0}, read_from_excel_data(Config,{13,2}))).
  
c25_test(doc) -> [""];
c25_test(suite) -> [];
c25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["t*****ing",read_from_excel_data(Config,{24,2})]),
  test_util:expected(true, test_util:excel_equal({string,"t*****ing"}, read_from_excel_data(Config,{24,2}))).
  
c20_test(doc) -> [""];
c20_test(suite) -> [];
c20_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Dir",read_from_excel_data(Config,{19,2})]),
  test_util:expected(true, test_util:excel_equal({string,"Dir"}, read_from_excel_data(Config,{19,2}))).
  
c31_test(doc) -> [""];
c31_test(suite) -> [];
c31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["$3.22",read_from_excel_data(Config,{30,2})]),
  test_util:expected(true, test_util:excel_equal({string,"$3.22"}, read_from_excel_data(Config,{30,2}))).
  
c15_test(doc) -> [""];
c15_test(suite) -> [];
c15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["aabb",read_from_excel_data(Config,{14,2})]),
  test_util:expected(true, test_util:excel_equal({string,"aabb"}, read_from_excel_data(Config,{14,2}))).
  
c26_test(doc) -> [""];
c26_test(suite) -> [];
c26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["...",read_from_excel_data(Config,{25,2})]),
  test_util:expected(true, test_util:excel_equal({string,"..."}, read_from_excel_data(Config,{25,2}))).
  
c21_test(doc) -> [""];
c21_test(suite) -> [];
c21_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[8.0,read_from_excel_data(Config,{20,2})]),
  test_util:expected(true, test_util:excel_equal({number,8.0}, read_from_excel_data(Config,{20,2}))).
  
c32_test(doc) -> [""];
c32_test(suite) -> [];
c32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["a ddd cc",read_from_excel_data(Config,{31,2})]),
  test_util:expected(true, test_util:excel_equal({string,"a ddd cc"}, read_from_excel_data(Config,{31,2}))).
  
d16_test(doc) -> [""];
d16_test(suite) -> [];
d16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=DOLLAR(23.25,1)",read_from_excel_data(Config,{15,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=DOLLAR(23.25,1)"}, read_from_excel_data(Config,{15,3}))).
  
d27_test(doc) -> [""];
d27_test(suite) -> [];
d27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=RIGHT(\"testing\",3)",read_from_excel_data(Config,{26,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=RIGHT(\"testing\",3)"}, read_from_excel_data(Config,{26,3}))).
  
d11_test(doc) -> [""];
d11_test(suite) -> [];
d11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["2nd test",read_from_excel_data(Config,{10,3})]),
  test_util:expected(true, test_util:excel_equal({string,"2nd test"}, read_from_excel_data(Config,{10,3}))).
  
d22_test(doc) -> [""];
d22_test(suite) -> [];
d22_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=LOWER(\"aaBBaa\")",read_from_excel_data(Config,{21,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=LOWER(\"aaBBaa\")"}, read_from_excel_data(Config,{21,3}))).
  
d33_test(doc) -> [""];
d33_test(suite) -> [];
d33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=UPPER(\"jjd22JJjj\")",read_from_excel_data(Config,{32,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=UPPER(\"jjd22JJjj\")"}, read_from_excel_data(Config,{32,3}))).
  
d17_test(doc) -> [""];
d17_test(suite) -> [];
d17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=EXACT(\"key\",\"Key\")",read_from_excel_data(Config,{16,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=EXACT(\"key\",\"Key\")"}, read_from_excel_data(Config,{16,3}))).
  
d28_test(doc) -> [""];
d28_test(suite) -> [];
d28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=SEARCH(\"c\",\"Cancel\",2)",read_from_excel_data(Config,{27,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=SEARCH(\"c\",\"Cancel\",2)"}, read_from_excel_data(Config,{27,3}))).
  
d12_test(doc) -> [""];
d12_test(suite) -> [];
d12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CHAR(97)",read_from_excel_data(Config,{11,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CHAR(97)"}, read_from_excel_data(Config,{11,3}))).
  
d23_test(doc) -> [""];
d23_test(suite) -> [];
d23_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=MID(\"testing again\",4,1)",read_from_excel_data(Config,{22,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=MID(\"testing again\",4,1)"}, read_from_excel_data(Config,{22,3}))).
  
d34_test(doc) -> [""];
d34_test(suite) -> [];
d34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=VALUE(\"  $223.234\")",read_from_excel_data(Config,{33,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=VALUE(\"  $223.234\")"}, read_from_excel_data(Config,{33,3}))).
  
d18_test(doc) -> [""];
d18_test(suite) -> [];
d18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=FIND(\"ac\",\"Jack\")",read_from_excel_data(Config,{17,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=FIND(\"ac\",\"Jack\")"}, read_from_excel_data(Config,{17,3}))).
  
d29_test(doc) -> [""];
d29_test(suite) -> [];
d29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=SUBSTITUTE(\"Sales Total\",\"Sales\",\"Revenue\")",read_from_excel_data(Config,{28,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=SUBSTITUTE(\"Sales Total\",\"Sales\",\"Revenue\")"}, read_from_excel_data(Config,{28,3}))).
  
d13_test(doc) -> [""];
d13_test(suite) -> [];
d13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CLEAN(\"one\"&CHAR(7))",read_from_excel_data(Config,{12,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CLEAN(\"one\"&CHAR(7))"}, read_from_excel_data(Config,{12,3}))).
  
d24_test(doc) -> [""];
d24_test(suite) -> [];
d24_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=PROPER(\"aajj-djaf dkfj\")",read_from_excel_data(Config,{23,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=PROPER(\"aajj-djaf dkfj\")"}, read_from_excel_data(Config,{23,3}))).
  
d19_test(doc) -> [""];
d19_test(suite) -> [];
d19_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=FIXED(1234567.8901,-1)",read_from_excel_data(Config,{18,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=FIXED(1234567.8901,-1)"}, read_from_excel_data(Config,{18,3}))).
  
d30_test(doc) -> [""];
d30_test(suite) -> [];
d30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=T(64)",read_from_excel_data(Config,{29,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=T(64)"}, read_from_excel_data(Config,{29,3}))).
  
d14_test(doc) -> [""];
d14_test(suite) -> [];
d14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CODE(\"AB\")",read_from_excel_data(Config,{13,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CODE(\"AB\")"}, read_from_excel_data(Config,{13,3}))).
  
d25_test(doc) -> [""];
d25_test(suite) -> [];
d25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=REPLACE(\"testing\",1,2,\"bb\")",read_from_excel_data(Config,{24,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=REPLACE(\"testing\",1,2,\"bb\")"}, read_from_excel_data(Config,{24,3}))).
  
d20_test(doc) -> [""];
d20_test(suite) -> [];
d20_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=LEFT(\"abcdef\",2)",read_from_excel_data(Config,{19,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=LEFT(\"abcdef\",2)"}, read_from_excel_data(Config,{19,3}))).
  
d31_test(doc) -> [""];
d31_test(suite) -> [];
d31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=TEXT(\"4/15/1999\",\"mmmm, dd, yy\")",read_from_excel_data(Config,{30,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=TEXT(\"4/15/1999\",\"mmmm, dd, yy\")"}, read_from_excel_data(Config,{30,3}))).
  
d15_test(doc) -> [""];
d15_test(suite) -> [];
d15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CONCATENATE(\"a\",\"b\",\"c\")",read_from_excel_data(Config,{14,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CONCATENATE(\"a\",\"b\",\"c\")"}, read_from_excel_data(Config,{14,3}))).
  
d26_test(doc) -> [""];
d26_test(suite) -> [];
d26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=REPT(\"rwx\",3)",read_from_excel_data(Config,{25,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=REPT(\"rwx\",3)"}, read_from_excel_data(Config,{25,3}))).
  
d21_test(doc) -> [""];
d21_test(suite) -> [];
d21_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=LEN(\"\")",read_from_excel_data(Config,{20,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=LEN(\"\")"}, read_from_excel_data(Config,{20,3}))).
  
d32_test(doc) -> [""];
d32_test(suite) -> [];
d32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=TRIM(\"aaa\")",read_from_excel_data(Config,{31,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=TRIM(\"aaa\")"}, read_from_excel_data(Config,{31,3}))).
  
e16_test(doc) -> [""];
e16_test(suite) -> [];
e16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["$23.3",read_from_excel_data(Config,{15,4})]),
  test_util:expected(true, test_util:excel_equal({string,"$23.3"}, read_from_excel_data(Config,{15,4}))).
  
e27_test(doc) -> [""];
e27_test(suite) -> [];
e27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ing",read_from_excel_data(Config,{26,4})]),
  test_util:expected(true, test_util:excel_equal({string,"ing"}, read_from_excel_data(Config,{26,4}))).
  
e11_test(doc) -> [""];
e11_test(suite) -> [];
e11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Correct",read_from_excel_data(Config,{10,4})]),
  test_util:expected(true, test_util:excel_equal({string,"Correct"}, read_from_excel_data(Config,{10,4}))).
  
e22_test(doc) -> [""];
e22_test(suite) -> [];
e22_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["aabbaa",read_from_excel_data(Config,{21,4})]),
  test_util:expected(true, test_util:excel_equal({string,"aabbaa"}, read_from_excel_data(Config,{21,4}))).
  
e33_test(doc) -> [""];
e33_test(suite) -> [];
e33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["JJD22JJJJ",read_from_excel_data(Config,{32,4})]),
  test_util:expected(true, test_util:excel_equal({string,"JJD22JJJJ"}, read_from_excel_data(Config,{32,4}))).
  
e17_test(doc) -> [""];
e17_test(suite) -> [];
e17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{16,4})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{16,4}))).
  
e28_test(doc) -> [""];
e28_test(suite) -> [];
e28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[4.0,read_from_excel_data(Config,{27,4})]),
  test_util:expected(true, test_util:excel_equal({number,4.0}, read_from_excel_data(Config,{27,4}))).
  
e12_test(doc) -> [""];
e12_test(suite) -> [];
e12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["a",read_from_excel_data(Config,{11,4})]),
  test_util:expected(true, test_util:excel_equal({string,"a"}, read_from_excel_data(Config,{11,4}))).
  
e23_test(doc) -> [""];
e23_test(suite) -> [];
e23_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["t",read_from_excel_data(Config,{22,4})]),
  test_util:expected(true, test_util:excel_equal({string,"t"}, read_from_excel_data(Config,{22,4}))).
  
e34_test(doc) -> [""];
e34_test(suite) -> [];
e34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[223.234,read_from_excel_data(Config,{33,4})]),
  test_util:expected(true, test_util:excel_equal({number,223.234}, read_from_excel_data(Config,{33,4}))).
  
e18_test(doc) -> [""];
e18_test(suite) -> [];
e18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[2.0,read_from_excel_data(Config,{17,4})]),
  test_util:expected(true, test_util:excel_equal({number,2.0}, read_from_excel_data(Config,{17,4}))).
  
e29_test(doc) -> [""];
e29_test(suite) -> [];
e29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Revenue Total",read_from_excel_data(Config,{28,4})]),
  test_util:expected(true, test_util:excel_equal({string,"Revenue Total"}, read_from_excel_data(Config,{28,4}))).
  
e13_test(doc) -> [""];
e13_test(suite) -> [];
e13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["one",read_from_excel_data(Config,{12,4})]),
  test_util:expected(true, test_util:excel_equal({string,"one"}, read_from_excel_data(Config,{12,4}))).
  
e24_test(doc) -> [""];
e24_test(suite) -> [];
e24_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Aajj-Djaf Dkfj",read_from_excel_data(Config,{23,4})]),
  test_util:expected(true, test_util:excel_equal({string,"Aajj-Djaf Dkfj"}, read_from_excel_data(Config,{23,4}))).
  
e19_test(doc) -> [""];
e19_test(suite) -> [];
e19_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["1,234,570",read_from_excel_data(Config,{18,4})]),
  test_util:expected(true, test_util:excel_equal({string,"1,234,570"}, read_from_excel_data(Config,{18,4}))).
  
e30_test(doc) -> [""];
e30_test(suite) -> [];
e30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["",read_from_excel_data(Config,{29,4})]),
  test_util:expected(true, test_util:excel_equal({string,""}, read_from_excel_data(Config,{29,4}))).
  
e14_test(doc) -> [""];
e14_test(suite) -> [];
e14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[65.0,read_from_excel_data(Config,{13,4})]),
  test_util:expected(true, test_util:excel_equal({number,65.0}, read_from_excel_data(Config,{13,4}))).
  
e25_test(doc) -> [""];
e25_test(suite) -> [];
e25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["bbsting",read_from_excel_data(Config,{24,4})]),
  test_util:expected(true, test_util:excel_equal({string,"bbsting"}, read_from_excel_data(Config,{24,4}))).
  
e20_test(doc) -> [""];
e20_test(suite) -> [];
e20_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ab",read_from_excel_data(Config,{19,4})]),
  test_util:expected(true, test_util:excel_equal({string,"ab"}, read_from_excel_data(Config,{19,4}))).
  
e31_test(doc) -> [""];
e31_test(suite) -> [];
e31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["April, 15, 99",read_from_excel_data(Config,{30,4})]),
  test_util:expected(true, test_util:excel_equal({string,"April, 15, 99"}, read_from_excel_data(Config,{30,4}))).
  
e15_test(doc) -> [""];
e15_test(suite) -> [];
e15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["abc",read_from_excel_data(Config,{14,4})]),
  test_util:expected(true, test_util:excel_equal({string,"abc"}, read_from_excel_data(Config,{14,4}))).
  
e26_test(doc) -> [""];
e26_test(suite) -> [];
e26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["rwxrwxrwx",read_from_excel_data(Config,{25,4})]),
  test_util:expected(true, test_util:excel_equal({string,"rwxrwxrwx"}, read_from_excel_data(Config,{25,4}))).
  
e21_test(doc) -> [""];
e21_test(suite) -> [];
e21_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[0.0,read_from_excel_data(Config,{20,4})]),
  test_util:expected(true, test_util:excel_equal({number,0.0}, read_from_excel_data(Config,{20,4}))).
  
e32_test(doc) -> [""];
e32_test(suite) -> [];
e32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["aaa",read_from_excel_data(Config,{31,4})]),
  test_util:expected(true, test_util:excel_equal({string,"aaa"}, read_from_excel_data(Config,{31,4}))).
  
f16_test(doc) -> [""];
f16_test(suite) -> [];
f16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=DOLLAR(-34.342,-1)",read_from_excel_data(Config,{15,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=DOLLAR(-34.342,-1)"}, read_from_excel_data(Config,{15,5}))).
  
f27_test(doc) -> [""];
f27_test(suite) -> [];
f27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=RIGHT(\"testing\",4)",read_from_excel_data(Config,{26,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=RIGHT(\"testing\",4)"}, read_from_excel_data(Config,{26,5}))).
  
f11_test(doc) -> [""];
f11_test(suite) -> [];
f11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["3rd test",read_from_excel_data(Config,{10,5})]),
  test_util:expected(true, test_util:excel_equal({string,"3rd test"}, read_from_excel_data(Config,{10,5}))).
  
f22_test(doc) -> [""];
f22_test(suite) -> [];
f22_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=LOWER(\"aa211AA\")",read_from_excel_data(Config,{21,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=LOWER(\"aa211AA\")"}, read_from_excel_data(Config,{21,5}))).
  
f33_test(doc) -> [""];
f33_test(suite) -> [];
f33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=UPPER(\"j\")",read_from_excel_data(Config,{32,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=UPPER(\"j\")"}, read_from_excel_data(Config,{32,5}))).
  
f17_test(doc) -> [""];
f17_test(suite) -> [];
f17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=EXACT(\"key\",\"k ey\")",read_from_excel_data(Config,{16,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=EXACT(\"key\",\"k ey\")"}, read_from_excel_data(Config,{16,5}))).
  
f28_test(doc) -> [""];
f28_test(suite) -> [];
f28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=SEARCH(\"efGh\",\"abcdefghi\",2)",read_from_excel_data(Config,{27,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=SEARCH(\"efGh\",\"abcdefghi\",2)"}, read_from_excel_data(Config,{27,5}))).
  
f12_test(doc) -> [""];
f12_test(suite) -> [];
f12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CHAR(38)",read_from_excel_data(Config,{11,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CHAR(38)"}, read_from_excel_data(Config,{11,5}))).
  
f23_test(doc) -> [""];
f23_test(suite) -> [];
f23_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=MID(\"testing again\",5,9)",read_from_excel_data(Config,{22,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=MID(\"testing again\",5,9)"}, read_from_excel_data(Config,{22,5}))).
  
f34_test(doc) -> [""];
f34_test(suite) -> [];
f34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=VALUE(\" -324.324\")",read_from_excel_data(Config,{33,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=VALUE(\" -324.324\")"}, read_from_excel_data(Config,{33,5}))).
  
f18_test(doc) -> [""];
f18_test(suite) -> [];
f18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=FIND(\"c\",\"Cancel\")",read_from_excel_data(Config,{17,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=FIND(\"c\",\"Cancel\")"}, read_from_excel_data(Config,{17,5}))).
  
f29_test(doc) -> [""];
f29_test(suite) -> [];
f29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=SUBSTITUTE(\"Sales Total 1999\",\"Sales Total\",\"Revenue\")",read_from_excel_data(Config,{28,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=SUBSTITUTE(\"Sales Total 1999\",\"Sales Total\",\"Revenue\")"}, read_from_excel_data(Config,{28,5}))).
  
f13_test(doc) -> [""];
f13_test(suite) -> [];
f13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CLEAN(\"a\"&CHAR(8)&\"aa\")",read_from_excel_data(Config,{12,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CLEAN(\"a\"&CHAR(8)&\"aa\")"}, read_from_excel_data(Config,{12,5}))).
  
f24_test(doc) -> [""];
f24_test(suite) -> [];
f24_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=PROPER(\"a\")",read_from_excel_data(Config,{23,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=PROPER(\"a\")"}, read_from_excel_data(Config,{23,5}))).
  
f19_test(doc) -> [""];
f19_test(suite) -> [];
f19_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=FIXED(-12345.2445,3)",read_from_excel_data(Config,{18,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=FIXED(-12345.2445,3)"}, read_from_excel_data(Config,{18,5}))).
  
f30_test(doc) -> [""];
f30_test(suite) -> [];
f30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=T(TRUE)",read_from_excel_data(Config,{29,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=T(TRUE)"}, read_from_excel_data(Config,{29,5}))).
  
f14_test(doc) -> [""];
f14_test(suite) -> [];
f14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CODE(\"a\")",read_from_excel_data(Config,{13,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CODE(\"a\")"}, read_from_excel_data(Config,{13,5}))).
  
f25_test(doc) -> [""];
f25_test(suite) -> [];
f25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=REPLACE(\"testing\",4,9,\"aa\")",read_from_excel_data(Config,{24,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=REPLACE(\"testing\",4,9,\"aa\")"}, read_from_excel_data(Config,{24,5}))).
  
f20_test(doc) -> [""];
f20_test(suite) -> [];
f20_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=LEFT(\"testing\")",read_from_excel_data(Config,{19,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=LEFT(\"testing\")"}, read_from_excel_data(Config,{19,5}))).
  
f31_test(doc) -> [""];
f31_test(suite) -> [];
f31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=TEXT(23123.21523,\"$000\")",read_from_excel_data(Config,{30,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=TEXT(23123.21523,\"$000\")"}, read_from_excel_data(Config,{30,5}))).
  
f15_test(doc) -> [""];
f15_test(suite) -> [];
f15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CONCATENATE(\"a\",\"2\",\"j\")",read_from_excel_data(Config,{14,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CONCATENATE(\"a\",\"2\",\"j\")"}, read_from_excel_data(Config,{14,5}))).
  
f26_test(doc) -> [""];
f26_test(suite) -> [];
f26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=REPT(\"a\",22)",read_from_excel_data(Config,{25,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=REPT(\"a\",22)"}, read_from_excel_data(Config,{25,5}))).
  
f21_test(doc) -> [""];
f21_test(suite) -> [];
f21_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=LEN(\"a\")",read_from_excel_data(Config,{20,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=LEN(\"a\")"}, read_from_excel_data(Config,{20,5}))).
  
f32_test(doc) -> [""];
f32_test(suite) -> [];
f32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=TRIM(\"   add cd e   d\")",read_from_excel_data(Config,{31,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=TRIM(\"   add cd e   d\")"}, read_from_excel_data(Config,{31,5}))).
  
g16_test(doc) -> [""];
g16_test(suite) -> [];
g16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["($30)",read_from_excel_data(Config,{15,6})]),
  test_util:expected(true, test_util:excel_equal({string,"($30)"}, read_from_excel_data(Config,{15,6}))).
  
g27_test(doc) -> [""];
g27_test(suite) -> [];
g27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ting",read_from_excel_data(Config,{26,6})]),
  test_util:expected(true, test_util:excel_equal({string,"ting"}, read_from_excel_data(Config,{26,6}))).
  
g11_test(doc) -> [""];
g11_test(suite) -> [];
g11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Correct",read_from_excel_data(Config,{10,6})]),
  test_util:expected(true, test_util:excel_equal({string,"Correct"}, read_from_excel_data(Config,{10,6}))).
  
g22_test(doc) -> [""];
g22_test(suite) -> [];
g22_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["aa211aa",read_from_excel_data(Config,{21,6})]),
  test_util:expected(true, test_util:excel_equal({string,"aa211aa"}, read_from_excel_data(Config,{21,6}))).
  
g33_test(doc) -> [""];
g33_test(suite) -> [];
g33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["J",read_from_excel_data(Config,{32,6})]),
  test_util:expected(true, test_util:excel_equal({string,"J"}, read_from_excel_data(Config,{32,6}))).
  
g17_test(doc) -> [""];
g17_test(suite) -> [];
g17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{16,6})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{16,6}))).
  
g28_test(doc) -> [""];
g28_test(suite) -> [];
g28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[5.0,read_from_excel_data(Config,{27,6})]),
  test_util:expected(true, test_util:excel_equal({number,5.0}, read_from_excel_data(Config,{27,6}))).
  
g12_test(doc) -> [""];
g12_test(suite) -> [];
g12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["&",read_from_excel_data(Config,{11,6})]),
  test_util:expected(true, test_util:excel_equal({string,"&"}, read_from_excel_data(Config,{11,6}))).
  
g23_test(doc) -> [""];
g23_test(suite) -> [];
g23_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ing again",read_from_excel_data(Config,{22,6})]),
  test_util:expected(true, test_util:excel_equal({string,"ing again"}, read_from_excel_data(Config,{22,6}))).
  
g34_test(doc) -> [""];
g34_test(suite) -> [];
g34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[-324.324,read_from_excel_data(Config,{33,6})]),
  test_util:expected(true, test_util:excel_equal({number,-324.324}, read_from_excel_data(Config,{33,6}))).
  
g18_test(doc) -> [""];
g18_test(suite) -> [];
g18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[4.0,read_from_excel_data(Config,{17,6})]),
  test_util:expected(true, test_util:excel_equal({number,4.0}, read_from_excel_data(Config,{17,6}))).
  
g29_test(doc) -> [""];
g29_test(suite) -> [];
g29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Revenue 1999",read_from_excel_data(Config,{28,6})]),
  test_util:expected(true, test_util:excel_equal({string,"Revenue 1999"}, read_from_excel_data(Config,{28,6}))).
  
g13_test(doc) -> [""];
g13_test(suite) -> [];
g13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["aaa",read_from_excel_data(Config,{12,6})]),
  test_util:expected(true, test_util:excel_equal({string,"aaa"}, read_from_excel_data(Config,{12,6}))).
  
g24_test(doc) -> [""];
g24_test(suite) -> [];
g24_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["A",read_from_excel_data(Config,{23,6})]),
  test_util:expected(true, test_util:excel_equal({string,"A"}, read_from_excel_data(Config,{23,6}))).
  
g19_test(doc) -> [""];
g19_test(suite) -> [];
g19_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["-12,345.245",read_from_excel_data(Config,{18,6})]),
  test_util:expected(true, test_util:excel_equal({string,"-12,345.245"}, read_from_excel_data(Config,{18,6}))).
  
g14_test(doc) -> [""];
g14_test(suite) -> [];
g14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[97.0,read_from_excel_data(Config,{13,6})]),
  test_util:expected(true, test_util:excel_equal({number,97.0}, read_from_excel_data(Config,{13,6}))).
  
g25_test(doc) -> [""];
g25_test(suite) -> [];
g25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["tesaa",read_from_excel_data(Config,{24,6})]),
  test_util:expected(true, test_util:excel_equal({string,"tesaa"}, read_from_excel_data(Config,{24,6}))).
  
g20_test(doc) -> [""];
g20_test(suite) -> [];
g20_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["t",read_from_excel_data(Config,{19,6})]),
  test_util:expected(true, test_util:excel_equal({string,"t"}, read_from_excel_data(Config,{19,6}))).
  
g31_test(doc) -> [""];
g31_test(suite) -> [];
g31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["$23123",read_from_excel_data(Config,{30,6})]),
  test_util:expected(true, test_util:excel_equal({string,"$23123"}, read_from_excel_data(Config,{30,6}))).
  
g15_test(doc) -> [""];
g15_test(suite) -> [];
g15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["a2j",read_from_excel_data(Config,{14,6})]),
  test_util:expected(true, test_util:excel_equal({string,"a2j"}, read_from_excel_data(Config,{14,6}))).
  
g26_test(doc) -> [""];
g26_test(suite) -> [];
g26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["aaaaaaaaaaaaaaaaaaaaaa",read_from_excel_data(Config,{25,6})]),
  test_util:expected(true, test_util:excel_equal({string,"aaaaaaaaaaaaaaaaaaaaaa"}, read_from_excel_data(Config,{25,6}))).
  
g21_test(doc) -> [""];
g21_test(suite) -> [];
g21_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[1.0,read_from_excel_data(Config,{20,6})]),
  test_util:expected(true, test_util:excel_equal({number,1.0}, read_from_excel_data(Config,{20,6}))).
  
g32_test(doc) -> [""];
g32_test(suite) -> [];
g32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["add cd e d",read_from_excel_data(Config,{31,6})]),
  test_util:expected(true, test_util:excel_equal({string,"add cd e d"}, read_from_excel_data(Config,{31,6}))).
  
h16_test(doc) -> [""];
h16_test(suite) -> [];
h16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B16=C16,D16=E16,F16=G16),1,0)",read_from_excel_data(Config,{15,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B16=C16,D16=E16,F16=G16),1,0)"}, read_from_excel_data(Config,{15,7}))).
  
h27_test(doc) -> [""];
h27_test(suite) -> [];
h27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B27=C27,D27=E27,F27=G27),1,0)",read_from_excel_data(Config,{26,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B27=C27,D27=E27,F27=G27),1,0)"}, read_from_excel_data(Config,{26,7}))).
  
h11_test(doc) -> [""];
h11_test(suite) -> [];
h11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Status",read_from_excel_data(Config,{10,7})]),
  test_util:expected(true, test_util:excel_equal({string,"Status"}, read_from_excel_data(Config,{10,7}))).
  
h22_test(doc) -> [""];
h22_test(suite) -> [];
h22_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B22=C22,D22=E22,F22=G22),1,0)",read_from_excel_data(Config,{21,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B22=C22,D22=E22,F22=G22),1,0)"}, read_from_excel_data(Config,{21,7}))).
  
h33_test(doc) -> [""];
h33_test(suite) -> [];
h33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B33=C33,D33=E33,F33=G33),1,0)",read_from_excel_data(Config,{32,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B33=C33,D33=E33,F33=G33),1,0)"}, read_from_excel_data(Config,{32,7}))).
  
h17_test(doc) -> [""];
h17_test(suite) -> [];
h17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B17=C17,D17=E17,F17=G17),1,0)",read_from_excel_data(Config,{16,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B17=C17,D17=E17,F17=G17),1,0)"}, read_from_excel_data(Config,{16,7}))).
  
h28_test(doc) -> [""];
h28_test(suite) -> [];
h28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B28=C28,D28=E28,F28=G28),1,0)",read_from_excel_data(Config,{27,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B28=C28,D28=E28,F28=G28),1,0)"}, read_from_excel_data(Config,{27,7}))).
  
h12_test(doc) -> [""];
h12_test(suite) -> [];
h12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B12=C12,D12=E12,F12=G12),1,0)",read_from_excel_data(Config,{11,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B12=C12,D12=E12,F12=G12),1,0)"}, read_from_excel_data(Config,{11,7}))).
  
h23_test(doc) -> [""];
h23_test(suite) -> [];
h23_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B23=C23,D23=E23,F23=G23),1,0)",read_from_excel_data(Config,{22,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B23=C23,D23=E23,F23=G23),1,0)"}, read_from_excel_data(Config,{22,7}))).
  
h34_test(doc) -> [""];
h34_test(suite) -> [];
h34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B34=C34,D34=E34,F34=G34),1,0)",read_from_excel_data(Config,{33,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B34=C34,D34=E34,F34=G34),1,0)"}, read_from_excel_data(Config,{33,7}))).
  
h18_test(doc) -> [""];
h18_test(suite) -> [];
h18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B18=C18,D18=E18,F18=G18),1,0)",read_from_excel_data(Config,{17,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B18=C18,D18=E18,F18=G18),1,0)"}, read_from_excel_data(Config,{17,7}))).
  
h29_test(doc) -> [""];
h29_test(suite) -> [];
h29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B29=C29,D29=E29,F29=G29),1,0)",read_from_excel_data(Config,{28,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B29=C29,D29=E29,F29=G29),1,0)"}, read_from_excel_data(Config,{28,7}))).
  
h13_test(doc) -> [""];
h13_test(suite) -> [];
h13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B13=C13,D13=E13,F13=G13),1,0)",read_from_excel_data(Config,{12,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B13=C13,D13=E13,F13=G13),1,0)"}, read_from_excel_data(Config,{12,7}))).
  
h24_test(doc) -> [""];
h24_test(suite) -> [];
h24_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B24=C24,D24=E24,F24=G24),1,0)",read_from_excel_data(Config,{23,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B24=C24,D24=E24,F24=G24),1,0)"}, read_from_excel_data(Config,{23,7}))).
  
h19_test(doc) -> [""];
h19_test(suite) -> [];
h19_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B19=C19,D19=E19,F19=G19),1,0)",read_from_excel_data(Config,{18,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B19=C19,D19=E19,F19=G19),1,0)"}, read_from_excel_data(Config,{18,7}))).
  
h30_test(doc) -> [""];
h30_test(suite) -> [];
h30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B30=C30,D30=E30,F30=G30),1,0)",read_from_excel_data(Config,{29,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B30=C30,D30=E30,F30=G30),1,0)"}, read_from_excel_data(Config,{29,7}))).
  
h14_test(doc) -> [""];
h14_test(suite) -> [];
h14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B14=C14,D14=E14,F14=G14),1,0)",read_from_excel_data(Config,{13,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B14=C14,D14=E14,F14=G14),1,0)"}, read_from_excel_data(Config,{13,7}))).
  
h25_test(doc) -> [""];
h25_test(suite) -> [];
h25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B25=C25,D25=E25,F25=G25),1,0)",read_from_excel_data(Config,{24,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B25=C25,D25=E25,F25=G25),1,0)"}, read_from_excel_data(Config,{24,7}))).
  
h20_test(doc) -> [""];
h20_test(suite) -> [];
h20_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B20=C20,D20=E20,F20=G20),1,0)",read_from_excel_data(Config,{19,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B20=C20,D20=E20,F20=G20),1,0)"}, read_from_excel_data(Config,{19,7}))).
  
h31_test(doc) -> [""];
h31_test(suite) -> [];
h31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B31=C31,D31=E31,F31=G31),1,0)",read_from_excel_data(Config,{30,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B31=C31,D31=E31,F31=G31),1,0)"}, read_from_excel_data(Config,{30,7}))).
  
h15_test(doc) -> [""];
h15_test(suite) -> [];
h15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B15=C15,D15=E15,F15=G15),1,0)",read_from_excel_data(Config,{14,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B15=C15,D15=E15,F15=G15),1,0)"}, read_from_excel_data(Config,{14,7}))).
  
h26_test(doc) -> [""];
h26_test(suite) -> [];
h26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B26=C26,D26=E26,F26=G26),1,0)",read_from_excel_data(Config,{25,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B26=C26,D26=E26,F26=G26),1,0)"}, read_from_excel_data(Config,{25,7}))).
  
h21_test(doc) -> [""];
h21_test(suite) -> [];
h21_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B21=C21,D21=E21,F21=G21),1,0)",read_from_excel_data(Config,{20,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B21=C21,D21=E21,F21=G21),1,0)"}, read_from_excel_data(Config,{20,7}))).
  
h32_test(doc) -> [""];
h32_test(suite) -> [];
h32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B32=C32,D32=E32,F32=G32),1,0)",read_from_excel_data(Config,{31,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B32=C32,D32=E32,F32=G32),1,0)"}, read_from_excel_data(Config,{31,7}))).
  
i16_test(doc) -> [""];
i16_test(suite) -> [];
i16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H16,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{15,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H16,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{15,8}))).
  
i27_test(doc) -> [""];
i27_test(suite) -> [];
i27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H27,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{26,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H27,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{26,8}))).
  
i11_test(doc) -> [""];
i11_test(suite) -> [];
i11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Status message",read_from_excel_data(Config,{10,8})]),
  test_util:expected(true, test_util:excel_equal({string,"Status message"}, read_from_excel_data(Config,{10,8}))).
  
i22_test(doc) -> [""];
i22_test(suite) -> [];
i22_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H22,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{21,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H22,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{21,8}))).
  
i33_test(doc) -> [""];
i33_test(suite) -> [];
i33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H33,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{32,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H33,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{32,8}))).
  
i17_test(doc) -> [""];
i17_test(suite) -> [];
i17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H17,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{16,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H17,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{16,8}))).
  
i28_test(doc) -> [""];
i28_test(suite) -> [];
i28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H28,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{27,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H28,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{27,8}))).
  
i12_test(doc) -> [""];
i12_test(suite) -> [];
i12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H12,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{11,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H12,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{11,8}))).
  
i23_test(doc) -> [""];
i23_test(suite) -> [];
i23_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H23,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{22,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H23,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{22,8}))).
  
i34_test(doc) -> [""];
i34_test(suite) -> [];
i34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H34,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{33,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H34,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{33,8}))).
  
i18_test(doc) -> [""];
i18_test(suite) -> [];
i18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H18,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{17,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H18,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{17,8}))).
  
i29_test(doc) -> [""];
i29_test(suite) -> [];
i29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H29,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{28,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H29,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{28,8}))).
  
i13_test(doc) -> [""];
i13_test(suite) -> [];
i13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H13,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{12,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H13,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{12,8}))).
  
i24_test(doc) -> [""];
i24_test(suite) -> [];
i24_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H24,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{23,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H24,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{23,8}))).
  
i19_test(doc) -> [""];
i19_test(suite) -> [];
i19_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H19,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{18,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H19,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{18,8}))).
  
i30_test(doc) -> [""];
i30_test(suite) -> [];
i30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H30,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{29,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H30,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{29,8}))).
  
i14_test(doc) -> [""];
i14_test(suite) -> [];
i14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H14,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{13,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H14,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{13,8}))).
  
i25_test(doc) -> [""];
i25_test(suite) -> [];
i25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H25,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{24,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H25,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{24,8}))).
  
i20_test(doc) -> [""];
i20_test(suite) -> [];
i20_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H20,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{19,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H20,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{19,8}))).
  
i31_test(doc) -> [""];
i31_test(suite) -> [];
i31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H31,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{30,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H31,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{30,8}))).
  
i15_test(doc) -> [""];
i15_test(suite) -> [];
i15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H15,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{14,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H15,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{14,8}))).
  
i26_test(doc) -> [""];
i26_test(suite) -> [];
i26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H26,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{25,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H26,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{25,8}))).
  
i21_test(doc) -> [""];
i21_test(suite) -> [];
i21_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H21,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{20,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H21,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{20,8}))).
  
i32_test(doc) -> [""];
i32_test(suite) -> [];
i32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H32,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{31,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H32,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{31,8}))).
  
all(doc) -> [""];
all(suite) -> 
    [a16_test,
   a27_test,
   a11_test,
   a22_test,
   a33_test,
   a17_test,
   a28_test,
   a1_test,
   a12_test,
   a23_test,
   a34_test,
   a7_test,
   a18_test,
   a29_test,
   a13_test,
   a24_test,
   a35_test,
   a8_test,
   a19_test,
   a30_test,
   a3_test,
   a14_test,
   a25_test,
   a20_test,
   a31_test,
   a4_test,
   a15_test,
   a26_test,
   a21_test,
   a32_test,
   b16_test,
   b27_test,
   b11_test,
   b22_test,
   b33_test,
   b17_test,
   b28_test,
   b12_test,
   b23_test,
   b34_test,
   b7_test,
   b18_test,
   b29_test,
   b13_test,
   b24_test,
   b8_test,
   b19_test,
   b30_test,
   b14_test,
   b25_test,
   b20_test,
   b31_test,
   b15_test,
   b26_test,
   b21_test,
   b32_test,
   c16_test,
   c27_test,
   c11_test,
   c22_test,
   c33_test,
   c17_test,
   c28_test,
   c12_test,
   c23_test,
   c34_test,
   c18_test,
   c29_test,
   c13_test,
   c24_test,
   c19_test,
   c30_test,
   c14_test,
   c25_test,
   c20_test,
   c31_test,
   c15_test,
   c26_test,
   c21_test,
   c32_test,
   d16_test,
   d27_test,
   d11_test,
   d22_test,
   d33_test,
   d17_test,
   d28_test,
   d12_test,
   d23_test,
   d34_test,
   d18_test,
   d29_test,
   d13_test,
   d24_test,
   d19_test,
   d30_test,
   d14_test,
   d25_test,
   d20_test,
   d31_test,
   d15_test,
   d26_test,
   d21_test,
   d32_test,
   e16_test,
   e27_test,
   e11_test,
   e22_test,
   e33_test,
   e17_test,
   e28_test,
   e12_test,
   e23_test,
   e34_test,
   e18_test,
   e29_test,
   e13_test,
   e24_test,
   e19_test,
   e30_test,
   e14_test,
   e25_test,
   e20_test,
   e31_test,
   e15_test,
   e26_test,
   e21_test,
   e32_test,
   f16_test,
   f27_test,
   f11_test,
   f22_test,
   f33_test,
   f17_test,
   f28_test,
   f12_test,
   f23_test,
   f34_test,
   f18_test,
   f29_test,
   f13_test,
   f24_test,
   f19_test,
   f30_test,
   f14_test,
   f25_test,
   f20_test,
   f31_test,
   f15_test,
   f26_test,
   f21_test,
   f32_test,
   g16_test,
   g27_test,
   g11_test,
   g22_test,
   g33_test,
   g17_test,
   g28_test,
   g12_test,
   g23_test,
   g34_test,
   g18_test,
   g29_test,
   g13_test,
   g24_test,
   g19_test,
   g14_test,
   g25_test,
   g20_test,
   g31_test,
   g15_test,
   g26_test,
   g21_test,
   g32_test,
   h16_test,
   h27_test,
   h11_test,
   h22_test,
   h33_test,
   h17_test,
   h28_test,
   h12_test,
   h23_test,
   h34_test,
   h18_test,
   h29_test,
   h13_test,
   h24_test,
   h19_test,
   h30_test,
   h14_test,
   h25_test,
   h20_test,
   h31_test,
   h15_test,
   h26_test,
   h21_test,
   h32_test,
   i16_test,
   i27_test,
   i11_test,
   i22_test,
   i33_test,
   i17_test,
   i28_test,
   i12_test,
   i23_test,
   i34_test,
   i18_test,
   i29_test,
   i13_test,
   i24_test,
   i19_test,
   i30_test,
   i14_test,
   i25_test,
   i20_test,
   i31_test,
   i15_test,
   i26_test,
   i21_test,
   i32_test
    ].
  
