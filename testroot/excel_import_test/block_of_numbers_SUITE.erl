% This module has been generated by generatetest.rb
% DO NOT EDIT MANUALLY.
%
% Source file: block_of_numbers.xls
% Generated on: Wed Jan 23 09:59:04 +0000 2008

-module(block_of_numbers_SUITE).
-compile(export_all).
-include("test_server.hrl").


init_per_suite(Config) ->
    code:add_patha("../../ebin"),
    production_boot:setup_paths(),
    Data = test_util:read_excel_file("/Win Excel 2007 (as 97)/block_of_numbers.xls"),
    io:format("in init_per_suite Data is ~p~n",[Data]),
    lists:merge([Config, [{block_of_numbers_SUITE, Data}]]).
  
end_per_suite(_Config) ->
    ok.
  
init_per_testcase(_TestCase, Config) -> Config.

end_per_testcase(_TestCase, _Config) -> ok.

read_from_excel_data(Config, {Row,Col}) ->
    {value, Result} = lists:keysearch(block_of_numbers_SUITE, 1, Config),
    Data = element(2, Result),
    Key={{row_index,Row},{col_index,Col}},
    {value, Result2} = lists:keysearch(Key, 1, Data),
    El=element(2, Result2),
    io:format("El is ~p~n",[El]),
    case El of
        {value, number, Number} -> {number,Number};
        {string,String}         -> {string,String};
        {formula,Formula}       -> {formula,Formula};
        {value,boolean,Boolean} -> {boolean,Boolean};
        {value,error,Error}     -> {error, Error};
        Other                   -> io:format("(in generatetest.rb - fix me Other is ~p~n",[Other])
    end.

a5_test(doc) -> [""];
a5_test(suite) -> [];
a5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[123456789.0,read_from_excel_data(Config,{4,0})]),
  test_util:expected(true, test_util:excel_equal({number,123456789.0}, read_from_excel_data(Config,{4,0}))).
  
a1_test(doc) -> [""];
a1_test(suite) -> [];
a1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[1.0,read_from_excel_data(Config,{0,0})]),
  test_util:expected(true, test_util:excel_equal({number,1.0}, read_from_excel_data(Config,{0,0}))).
  
a2_test(doc) -> [""];
a2_test(suite) -> [];
a2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[11.0,read_from_excel_data(Config,{1,0})]),
  test_util:expected(true, test_util:excel_equal({number,11.0}, read_from_excel_data(Config,{1,0}))).
  
a3_test(doc) -> [""];
a3_test(suite) -> [];
a3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[111.0,read_from_excel_data(Config,{2,0})]),
  test_util:expected(true, test_util:excel_equal({number,111.0}, read_from_excel_data(Config,{2,0}))).
  
a4_test(doc) -> [""];
a4_test(suite) -> [];
a4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[1111.0,read_from_excel_data(Config,{3,0})]),
  test_util:expected(true, test_util:excel_equal({number,1111.0}, read_from_excel_data(Config,{3,0}))).
  
b1_test(doc) -> [""];
b1_test(suite) -> [];
b1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[2.0,read_from_excel_data(Config,{0,1})]),
  test_util:expected(true, test_util:excel_equal({number,2.0}, read_from_excel_data(Config,{0,1}))).
  
b2_test(doc) -> [""];
b2_test(suite) -> [];
b2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[22.0,read_from_excel_data(Config,{1,1})]),
  test_util:expected(true, test_util:excel_equal({number,22.0}, read_from_excel_data(Config,{1,1}))).
  
b3_test(doc) -> [""];
b3_test(suite) -> [];
b3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[222.0,read_from_excel_data(Config,{2,1})]),
  test_util:expected(true, test_util:excel_equal({number,222.0}, read_from_excel_data(Config,{2,1}))).
  
b4_test(doc) -> [""];
b4_test(suite) -> [];
b4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[2222.0,read_from_excel_data(Config,{3,1})]),
  test_util:expected(true, test_util:excel_equal({number,2222.0}, read_from_excel_data(Config,{3,1}))).
  
c1_test(doc) -> [""];
c1_test(suite) -> [];
c1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[3.0,read_from_excel_data(Config,{0,2})]),
  test_util:expected(true, test_util:excel_equal({number,3.0}, read_from_excel_data(Config,{0,2}))).
  
c2_test(doc) -> [""];
c2_test(suite) -> [];
c2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[33.0,read_from_excel_data(Config,{1,2})]),
  test_util:expected(true, test_util:excel_equal({number,33.0}, read_from_excel_data(Config,{1,2}))).
  
c3_test(doc) -> [""];
c3_test(suite) -> [];
c3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[333.0,read_from_excel_data(Config,{2,2})]),
  test_util:expected(true, test_util:excel_equal({number,333.0}, read_from_excel_data(Config,{2,2}))).
  
c4_test(doc) -> [""];
c4_test(suite) -> [];
c4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[3333.0,read_from_excel_data(Config,{3,2})]),
  test_util:expected(true, test_util:excel_equal({number,3333.0}, read_from_excel_data(Config,{3,2}))).
  
d1_test(doc) -> [""];
d1_test(suite) -> [];
d1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[4.0,read_from_excel_data(Config,{0,3})]),
  test_util:expected(true, test_util:excel_equal({number,4.0}, read_from_excel_data(Config,{0,3}))).
  
d2_test(doc) -> [""];
d2_test(suite) -> [];
d2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[44.0,read_from_excel_data(Config,{1,3})]),
  test_util:expected(true, test_util:excel_equal({number,44.0}, read_from_excel_data(Config,{1,3}))).
  
d3_test(doc) -> [""];
d3_test(suite) -> [];
d3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[444.0,read_from_excel_data(Config,{2,3})]),
  test_util:expected(true, test_util:excel_equal({number,444.0}, read_from_excel_data(Config,{2,3}))).
  
d4_test(doc) -> [""];
d4_test(suite) -> [];
d4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[4444.0,read_from_excel_data(Config,{3,3})]),
  test_util:expected(true, test_util:excel_equal({number,4444.0}, read_from_excel_data(Config,{3,3}))).
  
e1_test(doc) -> [""];
e1_test(suite) -> [];
e1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[5.0,read_from_excel_data(Config,{0,4})]),
  test_util:expected(true, test_util:excel_equal({number,5.0}, read_from_excel_data(Config,{0,4}))).
  
e2_test(doc) -> [""];
e2_test(suite) -> [];
e2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[55.0,read_from_excel_data(Config,{1,4})]),
  test_util:expected(true, test_util:excel_equal({number,55.0}, read_from_excel_data(Config,{1,4}))).
  
e3_test(doc) -> [""];
e3_test(suite) -> [];
e3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[555.0,read_from_excel_data(Config,{2,4})]),
  test_util:expected(true, test_util:excel_equal({number,555.0}, read_from_excel_data(Config,{2,4}))).
  
e4_test(doc) -> [""];
e4_test(suite) -> [];
e4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[5555.0,read_from_excel_data(Config,{3,4})]),
  test_util:expected(true, test_util:excel_equal({number,5555.0}, read_from_excel_data(Config,{3,4}))).
  
f1_test(doc) -> [""];
f1_test(suite) -> [];
f1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[6.0,read_from_excel_data(Config,{0,5})]),
  test_util:expected(true, test_util:excel_equal({number,6.0}, read_from_excel_data(Config,{0,5}))).
  
f2_test(doc) -> [""];
f2_test(suite) -> [];
f2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[66.0,read_from_excel_data(Config,{1,5})]),
  test_util:expected(true, test_util:excel_equal({number,66.0}, read_from_excel_data(Config,{1,5}))).
  
f3_test(doc) -> [""];
f3_test(suite) -> [];
f3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[666.0,read_from_excel_data(Config,{2,5})]),
  test_util:expected(true, test_util:excel_equal({number,666.0}, read_from_excel_data(Config,{2,5}))).
  
f4_test(doc) -> [""];
f4_test(suite) -> [];
f4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[6666.0,read_from_excel_data(Config,{3,5})]),
  test_util:expected(true, test_util:excel_equal({number,6666.0}, read_from_excel_data(Config,{3,5}))).
  
g1_test(doc) -> [""];
g1_test(suite) -> [];
g1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[7.0,read_from_excel_data(Config,{0,6})]),
  test_util:expected(true, test_util:excel_equal({number,7.0}, read_from_excel_data(Config,{0,6}))).
  
g2_test(doc) -> [""];
g2_test(suite) -> [];
g2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[77.0,read_from_excel_data(Config,{1,6})]),
  test_util:expected(true, test_util:excel_equal({number,77.0}, read_from_excel_data(Config,{1,6}))).
  
g3_test(doc) -> [""];
g3_test(suite) -> [];
g3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[777.0,read_from_excel_data(Config,{2,6})]),
  test_util:expected(true, test_util:excel_equal({number,777.0}, read_from_excel_data(Config,{2,6}))).
  
g4_test(doc) -> [""];
g4_test(suite) -> [];
g4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[7777.0,read_from_excel_data(Config,{3,6})]),
  test_util:expected(true, test_util:excel_equal({number,7777.0}, read_from_excel_data(Config,{3,6}))).
  
h1_test(doc) -> [""];
h1_test(suite) -> [];
h1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[8.0,read_from_excel_data(Config,{0,7})]),
  test_util:expected(true, test_util:excel_equal({number,8.0}, read_from_excel_data(Config,{0,7}))).
  
h2_test(doc) -> [""];
h2_test(suite) -> [];
h2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[88.0,read_from_excel_data(Config,{1,7})]),
  test_util:expected(true, test_util:excel_equal({number,88.0}, read_from_excel_data(Config,{1,7}))).
  
h3_test(doc) -> [""];
h3_test(suite) -> [];
h3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[888.0,read_from_excel_data(Config,{2,7})]),
  test_util:expected(true, test_util:excel_equal({number,888.0}, read_from_excel_data(Config,{2,7}))).
  
h4_test(doc) -> [""];
h4_test(suite) -> [];
h4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[8888.0,read_from_excel_data(Config,{3,7})]),
  test_util:expected(true, test_util:excel_equal({number,8888.0}, read_from_excel_data(Config,{3,7}))).
  
i1_test(doc) -> [""];
i1_test(suite) -> [];
i1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[9.0,read_from_excel_data(Config,{0,8})]),
  test_util:expected(true, test_util:excel_equal({number,9.0}, read_from_excel_data(Config,{0,8}))).
  
i2_test(doc) -> [""];
i2_test(suite) -> [];
i2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[99.0,read_from_excel_data(Config,{1,8})]),
  test_util:expected(true, test_util:excel_equal({number,99.0}, read_from_excel_data(Config,{1,8}))).
  
i3_test(doc) -> [""];
i3_test(suite) -> [];
i3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[999.0,read_from_excel_data(Config,{2,8})]),
  test_util:expected(true, test_util:excel_equal({number,999.0}, read_from_excel_data(Config,{2,8}))).
  
i4_test(doc) -> [""];
i4_test(suite) -> [];
i4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[9999.0,read_from_excel_data(Config,{3,8})]),
  test_util:expected(true, test_util:excel_equal({number,9999.0}, read_from_excel_data(Config,{3,8}))).
  
all(doc) -> [""];
all(suite) -> 
    [a5_test,
   a1_test,
   a2_test,
   a3_test,
   a4_test,
   b1_test,
   b2_test,
   b3_test,
   b4_test,
   c1_test,
   c2_test,
   c3_test,
   c4_test,
   d1_test,
   d2_test,
   d3_test,
   d4_test,
   e1_test,
   e2_test,
   e3_test,
   e4_test,
   f1_test,
   f2_test,
   f3_test,
   f4_test,
   g1_test,
   g2_test,
   g3_test,
   g4_test,
   h1_test,
   h2_test,
   h3_test,
   h4_test,
   i1_test,
   i2_test,
   i3_test,
   i4_test
    ].
  
