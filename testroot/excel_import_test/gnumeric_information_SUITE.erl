% This module has been generated by generatetest.rb
% DO NOT EDIT MANUALLY.
%
% Source file: gnumeric_information.xls
% Generated on: Thu Jan 17 19:35:03 +0000 2008

-module(gnumeric_information_SUITE).
-compile(export_all).
-include("test_server.hrl").


init_per_suite(Config) ->
    code:add_patha("../../ebin"),
    production_boot:setup_paths(),
    Data = test_util:read_excel_file("/Win Excel 2007 (as 97)/gnumeric_information.xls"),
    io:format("in init_per_suite Data is ~p~n",[Data]),
    lists:merge([Config, [{gnumeric_information_SUITE, Data}]]).
  
end_per_suite(_Config) ->
    ok.
  
init_per_testcase(_TestCase, Config) -> Config.

end_per_testcase(_TestCase, _Config) -> ok.

read_from_excel_data(Config, {Row,Col}) ->
    {value, Result} = lists:keysearch(gnumeric_information_SUITE, 1, Config),
    Data = element(2, Result),
    Key={{row_index,Row},{col_index,Col}},
    {value, Result2} = lists:keysearch(Key, 1, Data),
    El=element(2, Result2),
    io:format("El is ~p~n",[El]),
    case El of
        {value, number, Number} -> {number,Number};
        {string,String}         -> {string,String};
        {formula,Formula}       -> {formula,Formula};
        {value,boolean,Boolean} -> {boolean,Boolean};
        {value,error,Error}     -> {error, Error};
        Other                   -> io:format("(in generatetest.rb - fix me Other is ~p~n",[Other])
    end.

a16_test(doc) -> [""];
a16_test(suite) -> [];
a16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[22.0,read_from_excel_data(Config,{15,0})]),
  test_util:expected(true, test_util:excel_equal({number,22.0}, read_from_excel_data(Config,{15,0}))).
  
a27_test(doc) -> [""];
a27_test(suite) -> [];
a27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["COUNTBLANK",read_from_excel_data(Config,{26,0})]),
  test_util:expected(true, test_util:excel_equal({string,"COUNTBLANK"}, read_from_excel_data(Config,{26,0}))).
  
a38_test(doc) -> [""];
a38_test(suite) -> [];
a38_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ISODD",read_from_excel_data(Config,{37,0})]),
  test_util:expected(true, test_util:excel_equal({string,"ISODD"}, read_from_excel_data(Config,{37,0}))).
  
a22_test(doc) -> [""];
a22_test(suite) -> [];
a22_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[-2146826246,read_from_excel_data(Config,{21,0})]),
  test_util:expected(true, test_util:excel_equal({number,-2146826246}, read_from_excel_data(Config,{21,0}))).
  
a33_test(doc) -> [""];
a33_test(suite) -> [];
a33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ISEVEN",read_from_excel_data(Config,{32,0})]),
  test_util:expected(true, test_util:excel_equal({string,"ISEVEN"}, read_from_excel_data(Config,{32,0}))).
  
a44_test(doc) -> [""];
a44_test(suite) -> [];
a44_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Total",read_from_excel_data(Config,{43,0})]),
  test_util:expected(true, test_util:excel_equal({string,"Total"}, read_from_excel_data(Config,{43,0}))).
  
a28_test(doc) -> [""];
a28_test(suite) -> [];
a28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ERROR.TYPE",read_from_excel_data(Config,{27,0})]),
  test_util:expected(true, test_util:excel_equal({string,"ERROR.TYPE"}, read_from_excel_data(Config,{27,0}))).
  
a39_test(doc) -> [""];
a39_test(suite) -> [];
a39_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ISREF",read_from_excel_data(Config,{38,0})]),
  test_util:expected(true, test_util:excel_equal({string,"ISREF"}, read_from_excel_data(Config,{38,0}))).
  
a1_test(doc) -> [""];
a1_test(suite) -> [];
a1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["INFORMATION FUNCTIONS",read_from_excel_data(Config,{0,0})]),
  test_util:expected(true, test_util:excel_equal({string,"INFORMATION FUNCTIONS"}, read_from_excel_data(Config,{0,0}))).
  
a12_test(doc) -> [""];
a12_test(suite) -> [];
a12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[0.0225,read_from_excel_data(Config,{11,0})]),
  test_util:expected(true, test_util:excel_equal({number,0.0225}, read_from_excel_data(Config,{11,0}))).
  
a34_test(doc) -> [""];
a34_test(suite) -> [];
a34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ISLOGICAL",read_from_excel_data(Config,{33,0})]),
  test_util:expected(true, test_util:excel_equal({string,"ISLOGICAL"}, read_from_excel_data(Config,{33,0}))).
  
a7_test(doc) -> [""];
a7_test(suite) -> [];
a7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["#Succeded",read_from_excel_data(Config,{6,0})]),
  test_util:expected(true, test_util:excel_equal({string,"#Succeded"}, read_from_excel_data(Config,{6,0}))).
  
a18_test(doc) -> [""];
a18_test(suite) -> [];
a18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[12.8,read_from_excel_data(Config,{17,0})]),
  test_util:expected(true, test_util:excel_equal({number,12.8}, read_from_excel_data(Config,{17,0}))).
  
a29_test(doc) -> [""];
a29_test(suite) -> [];
a29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["INFO",read_from_excel_data(Config,{28,0})]),
  test_util:expected(true, test_util:excel_equal({string,"INFO"}, read_from_excel_data(Config,{28,0}))).
  
a40_test(doc) -> [""];
a40_test(suite) -> [];
a40_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ISTEXT",read_from_excel_data(Config,{39,0})]),
  test_util:expected(true, test_util:excel_equal({string,"ISTEXT"}, read_from_excel_data(Config,{39,0}))).
  
a13_test(doc) -> [""];
a13_test(suite) -> [];
a13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["1999/11/11 00:00:00",read_from_excel_data(Config,{12,0})]),
  test_util:expected(true, test_util:excel_equal({string,"1999/11/11 00:00:00"}, read_from_excel_data(Config,{12,0}))).
  
a35_test(doc) -> [""];
a35_test(suite) -> [];
a35_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ISNA",read_from_excel_data(Config,{34,0})]),
  test_util:expected(true, test_util:excel_equal({string,"ISNA"}, read_from_excel_data(Config,{34,0}))).
  
a8_test(doc) -> [""];
a8_test(suite) -> [];
a8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=SUM(H26:H43)",read_from_excel_data(Config,{7,0})]),
  test_util:expected(true, test_util:excel_equal({formula,"=SUM(H26:H43)"}, read_from_excel_data(Config,{7,0}))).
  
a19_test(doc) -> [""];
a19_test(suite) -> [];
a19_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=233/0",read_from_excel_data(Config,{18,0})]),
  test_util:expected(true, test_util:excel_equal({formula,"=233/0"}, read_from_excel_data(Config,{18,0}))).
  
a30_test(doc) -> [""];
a30_test(suite) -> [];
a30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ISBLANK",read_from_excel_data(Config,{29,0})]),
  test_util:expected(true, test_util:excel_equal({string,"ISBLANK"}, read_from_excel_data(Config,{29,0}))).
  
a41_test(doc) -> [""];
a41_test(suite) -> [];
a41_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["N",read_from_excel_data(Config,{40,0})]),
  test_util:expected(true, test_util:excel_equal({string,"N"}, read_from_excel_data(Config,{40,0}))).
  
a3_test(doc) -> [""];
a3_test(suite) -> [];
a3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Test Status",read_from_excel_data(Config,{2,0})]),
  test_util:expected(true, test_util:excel_equal({string,"Test Status"}, read_from_excel_data(Config,{2,0}))).
  
a14_test(doc) -> [""];
a14_test(suite) -> [];
a14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[232323.0,read_from_excel_data(Config,{13,0})]),
  test_util:expected(true, test_util:excel_equal({number,232323.0}, read_from_excel_data(Config,{13,0}))).
  
a25_test(doc) -> [""];
a25_test(suite) -> [];
a25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Function",read_from_excel_data(Config,{24,0})]),
  test_util:expected(true, test_util:excel_equal({string,"Function"}, read_from_excel_data(Config,{24,0}))).
  
a36_test(doc) -> [""];
a36_test(suite) -> [];
a36_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ISNONTEXT",read_from_excel_data(Config,{35,0})]),
  test_util:expected(true, test_util:excel_equal({string,"ISNONTEXT"}, read_from_excel_data(Config,{35,0}))).
  
a20_test(doc) -> [""];
a20_test(suite) -> [];
a20_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=NORMSINV(1.2)",read_from_excel_data(Config,{19,0})]),
  test_util:expected(true, test_util:excel_equal({formula,"=NORMSINV(1.2)"}, read_from_excel_data(Config,{19,0}))).
  
a31_test(doc) -> [""];
a31_test(suite) -> [];
a31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ISERR",read_from_excel_data(Config,{30,0})]),
  test_util:expected(true, test_util:excel_equal({string,"ISERR"}, read_from_excel_data(Config,{30,0}))).
  
a42_test(doc) -> [""];
a42_test(suite) -> [];
a42_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["NA",read_from_excel_data(Config,{41,0})]),
  test_util:expected(true, test_util:excel_equal({string,"NA"}, read_from_excel_data(Config,{41,0}))).
  
a4_test(doc) -> [""];
a4_test(suite) -> [];
a4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(A8=B8,\"All ok.\",\"FAILED!!\")",read_from_excel_data(Config,{3,0})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(A8=B8,\"All ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{3,0}))).
  
a26_test(doc) -> [""];
a26_test(suite) -> [];
a26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["CELL",read_from_excel_data(Config,{25,0})]),
  test_util:expected(true, test_util:excel_equal({string,"CELL"}, read_from_excel_data(Config,{25,0}))).
  
a37_test(doc) -> [""];
a37_test(suite) -> [];
a37_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ISNUMBER",read_from_excel_data(Config,{36,0})]),
  test_util:expected(true, test_util:excel_equal({string,"ISNUMBER"}, read_from_excel_data(Config,{36,0}))).
  
a10_test(doc) -> [""];
a10_test(suite) -> [];
a10_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Test data",read_from_excel_data(Config,{9,0})]),
  test_util:expected(true, test_util:excel_equal({string,"Test data"}, read_from_excel_data(Config,{9,0}))).
  
a21_test(doc) -> [""];
a21_test(suite) -> [];
a21_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=FACT(\"jack\")",read_from_excel_data(Config,{20,0})]),
  test_util:expected(true, test_util:excel_equal({formula,"=FACT(\"jack\")"}, read_from_excel_data(Config,{20,0}))).
  
a32_test(doc) -> [""];
a32_test(suite) -> [];
a32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["ISERROR",read_from_excel_data(Config,{31,0})]),
  test_util:expected(true, test_util:excel_equal({string,"ISERROR"}, read_from_excel_data(Config,{31,0}))).
  
a43_test(doc) -> [""];
a43_test(suite) -> [];
a43_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["TYPE",read_from_excel_data(Config,{42,0})]),
  test_util:expected(true, test_util:excel_equal({string,"TYPE"}, read_from_excel_data(Config,{42,0}))).
  
b27_test(doc) -> [""];
b27_test(suite) -> [];
b27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=COUNTBLANK(A12:A18)",read_from_excel_data(Config,{26,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=COUNTBLANK(A12:A18)"}, read_from_excel_data(Config,{26,1}))).
  
b38_test(doc) -> [""];
b38_test(suite) -> [];
b38_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISODD(3)",read_from_excel_data(Config,{37,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISODD(3)"}, read_from_excel_data(Config,{37,1}))).
  
b33_test(doc) -> [""];
b33_test(suite) -> [];
b33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISEVEN(3)",read_from_excel_data(Config,{32,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISEVEN(3)"}, read_from_excel_data(Config,{32,1}))).
  
b28_test(doc) -> [""];
b28_test(suite) -> [];
b28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ERROR.TYPE(A19)",read_from_excel_data(Config,{27,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ERROR.TYPE(A19)"}, read_from_excel_data(Config,{27,1}))).
  
b39_test(doc) -> [""];
b39_test(suite) -> [];
b39_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISREF(4)",read_from_excel_data(Config,{38,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISREF(4)"}, read_from_excel_data(Config,{38,1}))).
  
b12_test(doc) -> [""];
b12_test(suite) -> [];
b12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[1.0,read_from_excel_data(Config,{11,1})]),
  test_util:expected(true, test_util:excel_equal({number,1.0}, read_from_excel_data(Config,{11,1}))).
  
b34_test(doc) -> [""];
b34_test(suite) -> [];
b34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISLOGICAL(B12)",read_from_excel_data(Config,{33,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISLOGICAL(B12)"}, read_from_excel_data(Config,{33,1}))).
  
b7_test(doc) -> [""];
b7_test(suite) -> [];
b7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["#Total",read_from_excel_data(Config,{6,1})]),
  test_util:expected(true, test_util:excel_equal({string,"#Total"}, read_from_excel_data(Config,{6,1}))).
  
b29_test(doc) -> [""];
b29_test(suite) -> [];
b29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=INFO(\"system\")",read_from_excel_data(Config,{28,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=INFO(\"system\")"}, read_from_excel_data(Config,{28,1}))).
  
b40_test(doc) -> [""];
b40_test(suite) -> [];
b40_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISTEXT(B13)",read_from_excel_data(Config,{39,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISTEXT(B13)"}, read_from_excel_data(Config,{39,1}))).
  
b13_test(doc) -> [""];
b13_test(suite) -> [];
b13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["koe",read_from_excel_data(Config,{12,1})]),
  test_util:expected(true, test_util:excel_equal({string,"koe"}, read_from_excel_data(Config,{12,1}))).
  
b35_test(doc) -> [""];
b35_test(suite) -> [];
b35_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISNA(B19)",read_from_excel_data(Config,{34,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISNA(B19)"}, read_from_excel_data(Config,{34,1}))).
  
b8_test(doc) -> [""];
b8_test(suite) -> [];
b8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[18.0,read_from_excel_data(Config,{7,1})]),
  test_util:expected(true, test_util:excel_equal({number,18.0}, read_from_excel_data(Config,{7,1}))).
  
b30_test(doc) -> [""];
b30_test(suite) -> [];
b30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISBLANK(A12)",read_from_excel_data(Config,{29,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISBLANK(A12)"}, read_from_excel_data(Config,{29,1}))).
  
b41_test(doc) -> [""];
b41_test(suite) -> [];
b41_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=N(A18)",read_from_excel_data(Config,{40,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=N(A18)"}, read_from_excel_data(Config,{40,1}))).
  
b25_test(doc) -> [""];
b25_test(suite) -> [];
b25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["1st test",read_from_excel_data(Config,{24,1})]),
  test_util:expected(true, test_util:excel_equal({string,"1st test"}, read_from_excel_data(Config,{24,1}))).
  
b36_test(doc) -> [""];
b36_test(suite) -> [];
b36_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISNONTEXT(B13)",read_from_excel_data(Config,{35,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISNONTEXT(B13)"}, read_from_excel_data(Config,{35,1}))).
  
b31_test(doc) -> [""];
b31_test(suite) -> [];
b31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISERR(A22)",read_from_excel_data(Config,{30,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISERR(A22)"}, read_from_excel_data(Config,{30,1}))).
  
b42_test(doc) -> [""];
b42_test(suite) -> [];
b42_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=NA()",read_from_excel_data(Config,{41,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=NA()"}, read_from_excel_data(Config,{41,1}))).
  
b26_test(doc) -> [""];
b26_test(suite) -> [];
b26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CELL(\"format\",A12)",read_from_excel_data(Config,{25,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CELL(\"format\",A12)"}, read_from_excel_data(Config,{25,1}))).
  
b37_test(doc) -> [""];
b37_test(suite) -> [];
b37_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISNUMBER(A16)",read_from_excel_data(Config,{36,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISNUMBER(A16)"}, read_from_excel_data(Config,{36,1}))).
  
b32_test(doc) -> [""];
b32_test(suite) -> [];
b32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISERROR(A19)",read_from_excel_data(Config,{31,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISERROR(A19)"}, read_from_excel_data(Config,{31,1}))).
  
b43_test(doc) -> [""];
b43_test(suite) -> [];
b43_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=TYPE(A22)",read_from_excel_data(Config,{42,1})]),
  test_util:expected(true, test_util:excel_equal({formula,"=TYPE(A22)"}, read_from_excel_data(Config,{42,1}))).
  
c27_test(doc) -> [""];
c27_test(suite) -> [];
c27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[2.0,read_from_excel_data(Config,{26,2})]),
  test_util:expected(true, test_util:excel_equal({number,2.0}, read_from_excel_data(Config,{26,2}))).
  
c38_test(doc) -> [""];
c38_test(suite) -> [];
c38_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{37,2})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{37,2}))).
  
c33_test(doc) -> [""];
c33_test(suite) -> [];
c33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{32,2})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{32,2}))).
  
c28_test(doc) -> [""];
c28_test(suite) -> [];
c28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[2.0,read_from_excel_data(Config,{27,2})]),
  test_util:expected(true, test_util:excel_equal({number,2.0}, read_from_excel_data(Config,{27,2}))).
  
c39_test(doc) -> [""];
c39_test(suite) -> [];
c39_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{38,2})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{38,2}))).
  
c34_test(doc) -> [""];
c34_test(suite) -> [];
c34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{33,2})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{33,2}))).
  
c29_test(doc) -> [""];
c29_test(suite) -> [];
c29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["pcdos",read_from_excel_data(Config,{28,2})]),
  test_util:expected(true, test_util:excel_equal({string,"pcdos"}, read_from_excel_data(Config,{28,2}))).
  
c40_test(doc) -> [""];
c40_test(suite) -> [];
c40_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{39,2})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{39,2}))).
  
c35_test(doc) -> [""];
c35_test(suite) -> [];
c35_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{34,2})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{34,2}))).
  
c30_test(doc) -> [""];
c30_test(suite) -> [];
c30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{29,2})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{29,2}))).
  
c41_test(doc) -> [""];
c41_test(suite) -> [];
c41_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[12.8,read_from_excel_data(Config,{40,2})]),
  test_util:expected(true, test_util:excel_equal({number,12.8}, read_from_excel_data(Config,{40,2}))).
  
c25_test(doc) -> [""];
c25_test(suite) -> [];
c25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Correct",read_from_excel_data(Config,{24,2})]),
  test_util:expected(true, test_util:excel_equal({string,"Correct"}, read_from_excel_data(Config,{24,2}))).
  
c36_test(doc) -> [""];
c36_test(suite) -> [];
c36_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{35,2})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{35,2}))).
  
c31_test(doc) -> [""];
c31_test(suite) -> [];
c31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{30,2})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{30,2}))).
  
c42_test(doc) -> [""];
c42_test(suite) -> [];
c42_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[0.0,read_from_excel_data(Config,{41,2})]),
  test_util:expected(true, test_util:excel_equal({number,0.0}, read_from_excel_data(Config,{41,2}))).
  
c26_test(doc) -> [""];
c26_test(suite) -> [];
c26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["P2",read_from_excel_data(Config,{25,2})]),
  test_util:expected(true, test_util:excel_equal({string,"P2"}, read_from_excel_data(Config,{25,2}))).
  
c37_test(doc) -> [""];
c37_test(suite) -> [];
c37_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{36,2})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{36,2}))).
  
c32_test(doc) -> [""];
c32_test(suite) -> [];
c32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{31,2})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{31,2}))).
  
c43_test(doc) -> [""];
c43_test(suite) -> [];
c43_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[16.0,read_from_excel_data(Config,{42,2})]),
  test_util:expected(true, test_util:excel_equal({number,16.0}, read_from_excel_data(Config,{42,2}))).
  
d27_test(doc) -> [""];
d27_test(suite) -> [];
d27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=COUNTBLANK(A12:A19)",read_from_excel_data(Config,{26,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=COUNTBLANK(A12:A19)"}, read_from_excel_data(Config,{26,3}))).
  
d38_test(doc) -> [""];
d38_test(suite) -> [];
d38_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISODD(-2)",read_from_excel_data(Config,{37,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISODD(-2)"}, read_from_excel_data(Config,{37,3}))).
  
d33_test(doc) -> [""];
d33_test(suite) -> [];
d33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISEVEN(2)",read_from_excel_data(Config,{32,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISEVEN(2)"}, read_from_excel_data(Config,{32,3}))).
  
d28_test(doc) -> [""];
d28_test(suite) -> [];
d28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ERROR.TYPE(A20)",read_from_excel_data(Config,{27,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ERROR.TYPE(A20)"}, read_from_excel_data(Config,{27,3}))).
  
d39_test(doc) -> [""];
d39_test(suite) -> [];
d39_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISREF(A2)",read_from_excel_data(Config,{38,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISREF(A2)"}, read_from_excel_data(Config,{38,3}))).
  
d34_test(doc) -> [""];
d34_test(suite) -> [];
d34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISLOGICAL(A19)",read_from_excel_data(Config,{33,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISLOGICAL(A19)"}, read_from_excel_data(Config,{33,3}))).
  
d29_test(doc) -> [""];
d29_test(suite) -> [];
d29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=INFO(\"release\")",read_from_excel_data(Config,{28,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=INFO(\"release\")"}, read_from_excel_data(Config,{28,3}))).
  
d40_test(doc) -> [""];
d40_test(suite) -> [];
d40_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISTEXT(A19)",read_from_excel_data(Config,{39,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISTEXT(A19)"}, read_from_excel_data(Config,{39,3}))).
  
d35_test(doc) -> [""];
d35_test(suite) -> [];
d35_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISNA(A21)",read_from_excel_data(Config,{34,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISNA(A21)"}, read_from_excel_data(Config,{34,3}))).
  
d30_test(doc) -> [""];
d30_test(suite) -> [];
d30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISBLANK(A15)",read_from_excel_data(Config,{29,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISBLANK(A15)"}, read_from_excel_data(Config,{29,3}))).
  
d41_test(doc) -> [""];
d41_test(suite) -> [];
d41_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=N(B13)",read_from_excel_data(Config,{40,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=N(B13)"}, read_from_excel_data(Config,{40,3}))).
  
d25_test(doc) -> [""];
d25_test(suite) -> [];
d25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["2nd test",read_from_excel_data(Config,{24,3})]),
  test_util:expected(true, test_util:excel_equal({string,"2nd test"}, read_from_excel_data(Config,{24,3}))).
  
d36_test(doc) -> [""];
d36_test(suite) -> [];
d36_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISNONTEXT(A14)",read_from_excel_data(Config,{35,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISNONTEXT(A14)"}, read_from_excel_data(Config,{35,3}))).
  
d31_test(doc) -> [""];
d31_test(suite) -> [];
d31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISERR(A21)",read_from_excel_data(Config,{30,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISERR(A21)"}, read_from_excel_data(Config,{30,3}))).
  
d42_test(doc) -> [""];
d42_test(suite) -> [];
d42_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[0.0,read_from_excel_data(Config,{41,3})]),
  test_util:expected(true, test_util:excel_equal({number,0.0}, read_from_excel_data(Config,{41,3}))).
  
d26_test(doc) -> [""];
d26_test(suite) -> [];
d26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CELL(\"format\",A13)",read_from_excel_data(Config,{25,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CELL(\"format\",A13)"}, read_from_excel_data(Config,{25,3}))).
  
d37_test(doc) -> [""];
d37_test(suite) -> [];
d37_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISNUMBER(A14)",read_from_excel_data(Config,{36,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISNUMBER(A14)"}, read_from_excel_data(Config,{36,3}))).
  
d32_test(doc) -> [""];
d32_test(suite) -> [];
d32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISERROR(A22)",read_from_excel_data(Config,{31,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISERROR(A22)"}, read_from_excel_data(Config,{31,3}))).
  
d43_test(doc) -> [""];
d43_test(suite) -> [];
d43_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=TYPE(B13)",read_from_excel_data(Config,{42,3})]),
  test_util:expected(true, test_util:excel_equal({formula,"=TYPE(B13)"}, read_from_excel_data(Config,{42,3}))).
  
e27_test(doc) -> [""];
e27_test(suite) -> [];
e27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[2.0,read_from_excel_data(Config,{26,4})]),
  test_util:expected(true, test_util:excel_equal({number,2.0}, read_from_excel_data(Config,{26,4}))).
  
e38_test(doc) -> [""];
e38_test(suite) -> [];
e38_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{37,4})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{37,4}))).
  
e33_test(doc) -> [""];
e33_test(suite) -> [];
e33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{32,4})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{32,4}))).
  
e28_test(doc) -> [""];
e28_test(suite) -> [];
e28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[6.0,read_from_excel_data(Config,{27,4})]),
  test_util:expected(true, test_util:excel_equal({number,6.0}, read_from_excel_data(Config,{27,4}))).
  
e39_test(doc) -> [""];
e39_test(suite) -> [];
e39_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{38,4})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{38,4}))).
  
e34_test(doc) -> [""];
e34_test(suite) -> [];
e34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{33,4})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{33,4}))).
  
e29_test(doc) -> [""];
e29_test(suite) -> [];
e29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["9.0",read_from_excel_data(Config,{28,4})]),
  test_util:expected(true, test_util:excel_equal({string,"9.0"}, read_from_excel_data(Config,{28,4}))).
  
e40_test(doc) -> [""];
e40_test(suite) -> [];
e40_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{39,4})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{39,4}))).
  
e35_test(doc) -> [""];
e35_test(suite) -> [];
e35_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{34,4})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{34,4}))).
  
e30_test(doc) -> [""];
e30_test(suite) -> [];
e30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{29,4})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{29,4}))).
  
e41_test(doc) -> [""];
e41_test(suite) -> [];
e41_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[0.0,read_from_excel_data(Config,{40,4})]),
  test_util:expected(true, test_util:excel_equal({number,0.0}, read_from_excel_data(Config,{40,4}))).
  
e25_test(doc) -> [""];
e25_test(suite) -> [];
e25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Correct",read_from_excel_data(Config,{24,4})]),
  test_util:expected(true, test_util:excel_equal({string,"Correct"}, read_from_excel_data(Config,{24,4}))).
  
e36_test(doc) -> [""];
e36_test(suite) -> [];
e36_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{35,4})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{35,4}))).
  
e31_test(doc) -> [""];
e31_test(suite) -> [];
e31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{30,4})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{30,4}))).
  
e42_test(doc) -> [""];
e42_test(suite) -> [];
e42_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[0.0,read_from_excel_data(Config,{41,4})]),
  test_util:expected(true, test_util:excel_equal({number,0.0}, read_from_excel_data(Config,{41,4}))).
  
e26_test(doc) -> [""];
e26_test(suite) -> [];
e26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["D2",read_from_excel_data(Config,{25,4})]),
  test_util:expected(true, test_util:excel_equal({string,"D2"}, read_from_excel_data(Config,{25,4}))).
  
e37_test(doc) -> [""];
e37_test(suite) -> [];
e37_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{36,4})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{36,4}))).
  
e32_test(doc) -> [""];
e32_test(suite) -> [];
e32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{31,4})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{31,4}))).
  
e43_test(doc) -> [""];
e43_test(suite) -> [];
e43_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[2.0,read_from_excel_data(Config,{42,4})]),
  test_util:expected(true, test_util:excel_equal({number,2.0}, read_from_excel_data(Config,{42,4}))).
  
f27_test(doc) -> [""];
f27_test(suite) -> [];
f27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=COUNTBLANK(A14)",read_from_excel_data(Config,{26,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=COUNTBLANK(A14)"}, read_from_excel_data(Config,{26,5}))).
  
f38_test(doc) -> [""];
f38_test(suite) -> [];
f38_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISODD(5)",read_from_excel_data(Config,{37,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISODD(5)"}, read_from_excel_data(Config,{37,5}))).
  
f33_test(doc) -> [""];
f33_test(suite) -> [];
f33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISEVEN(2.2)",read_from_excel_data(Config,{32,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISEVEN(2.2)"}, read_from_excel_data(Config,{32,5}))).
  
f28_test(doc) -> [""];
f28_test(suite) -> [];
f28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ERROR.TYPE(A21)",read_from_excel_data(Config,{27,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ERROR.TYPE(A21)"}, read_from_excel_data(Config,{27,5}))).
  
f39_test(doc) -> [""];
f39_test(suite) -> [];
f39_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISREF(A20)",read_from_excel_data(Config,{38,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISREF(A20)"}, read_from_excel_data(Config,{38,5}))).
  
f34_test(doc) -> [""];
f34_test(suite) -> [];
f34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISLOGICAL(C30)",read_from_excel_data(Config,{33,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISLOGICAL(C30)"}, read_from_excel_data(Config,{33,5}))).
  
f29_test(doc) -> [""];
f29_test(suite) -> [];
f29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=INFO(\"osversion\")",read_from_excel_data(Config,{28,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=INFO(\"osversion\")"}, read_from_excel_data(Config,{28,5}))).
  
f40_test(doc) -> [""];
f40_test(suite) -> [];
f40_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISTEXT(A18)",read_from_excel_data(Config,{39,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISTEXT(A18)"}, read_from_excel_data(Config,{39,5}))).
  
f35_test(doc) -> [""];
f35_test(suite) -> [];
f35_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISNA(A22)",read_from_excel_data(Config,{34,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISNA(A22)"}, read_from_excel_data(Config,{34,5}))).
  
f30_test(doc) -> [""];
f30_test(suite) -> [];
f30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISBLANK(A19)",read_from_excel_data(Config,{29,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISBLANK(A19)"}, read_from_excel_data(Config,{29,5}))).
  
f41_test(doc) -> [""];
f41_test(suite) -> [];
f41_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=N(B32)",read_from_excel_data(Config,{40,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=N(B32)"}, read_from_excel_data(Config,{40,5}))).
  
f25_test(doc) -> [""];
f25_test(suite) -> [];
f25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["3rd test",read_from_excel_data(Config,{24,5})]),
  test_util:expected(true, test_util:excel_equal({string,"3rd test"}, read_from_excel_data(Config,{24,5}))).
  
f36_test(doc) -> [""];
f36_test(suite) -> [];
f36_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISNONTEXT(A19)",read_from_excel_data(Config,{35,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISNONTEXT(A19)"}, read_from_excel_data(Config,{35,5}))).
  
f31_test(doc) -> [""];
f31_test(suite) -> [];
f31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISERR(A14)",read_from_excel_data(Config,{30,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISERR(A14)"}, read_from_excel_data(Config,{30,5}))).
  
f42_test(doc) -> [""];
f42_test(suite) -> [];
f42_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[0.0,read_from_excel_data(Config,{41,5})]),
  test_util:expected(true, test_util:excel_equal({number,0.0}, read_from_excel_data(Config,{41,5}))).
  
f26_test(doc) -> [""];
f26_test(suite) -> [];
f26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=CELL(\"format\",A14)",read_from_excel_data(Config,{25,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=CELL(\"format\",A14)"}, read_from_excel_data(Config,{25,5}))).
  
f37_test(doc) -> [""];
f37_test(suite) -> [];
f37_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISNUMBER(B13)",read_from_excel_data(Config,{36,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISNUMBER(B13)"}, read_from_excel_data(Config,{36,5}))).
  
f32_test(doc) -> [""];
f32_test(suite) -> [];
f32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=ISERROR(A13)",read_from_excel_data(Config,{31,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=ISERROR(A13)"}, read_from_excel_data(Config,{31,5}))).
  
f43_test(doc) -> [""];
f43_test(suite) -> [];
f43_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=TYPE(A14)",read_from_excel_data(Config,{42,5})]),
  test_util:expected(true, test_util:excel_equal({formula,"=TYPE(A14)"}, read_from_excel_data(Config,{42,5}))).
  
g27_test(doc) -> [""];
g27_test(suite) -> [];
g27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[0.0,read_from_excel_data(Config,{26,6})]),
  test_util:expected(true, test_util:excel_equal({number,0.0}, read_from_excel_data(Config,{26,6}))).
  
g38_test(doc) -> [""];
g38_test(suite) -> [];
g38_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{37,6})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{37,6}))).
  
g33_test(doc) -> [""];
g33_test(suite) -> [];
g33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{32,6})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{32,6}))).
  
g28_test(doc) -> [""];
g28_test(suite) -> [];
g28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[3.0,read_from_excel_data(Config,{27,6})]),
  test_util:expected(true, test_util:excel_equal({number,3.0}, read_from_excel_data(Config,{27,6}))).
  
g39_test(doc) -> [""];
g39_test(suite) -> [];
g39_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{38,6})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{38,6}))).
  
g34_test(doc) -> [""];
g34_test(suite) -> [];
g34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{33,6})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{33,6}))).
  
g29_test(doc) -> [""];
g29_test(suite) -> [];
g29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Windows (32-bit) 4.00",read_from_excel_data(Config,{28,6})]),
  test_util:expected(true, test_util:excel_equal({string,"Windows (32-bit) 4.00"}, read_from_excel_data(Config,{28,6}))).
  
g40_test(doc) -> [""];
g40_test(suite) -> [];
g40_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{39,6})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{39,6}))).
  
g35_test(doc) -> [""];
g35_test(suite) -> [];
g35_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{34,6})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{34,6}))).
  
g30_test(doc) -> [""];
g30_test(suite) -> [];
g30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{29,6})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{29,6}))).
  
g41_test(doc) -> [""];
g41_test(suite) -> [];
g41_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[1.0,read_from_excel_data(Config,{40,6})]),
  test_util:expected(true, test_util:excel_equal({number,1.0}, read_from_excel_data(Config,{40,6}))).
  
g25_test(doc) -> [""];
g25_test(suite) -> [];
g25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Correct",read_from_excel_data(Config,{24,6})]),
  test_util:expected(true, test_util:excel_equal({string,"Correct"}, read_from_excel_data(Config,{24,6}))).
  
g36_test(doc) -> [""];
g36_test(suite) -> [];
g36_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[true,read_from_excel_data(Config,{35,6})]),
  test_util:expected(true, test_util:excel_equal({boolean,true}, read_from_excel_data(Config,{35,6}))).
  
g31_test(doc) -> [""];
g31_test(suite) -> [];
g31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{30,6})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{30,6}))).
  
g42_test(doc) -> [""];
g42_test(suite) -> [];
g42_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[0.0,read_from_excel_data(Config,{41,6})]),
  test_util:expected(true, test_util:excel_equal({number,0.0}, read_from_excel_data(Config,{41,6}))).
  
g26_test(doc) -> [""];
g26_test(suite) -> [];
g26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["C0-",read_from_excel_data(Config,{25,6})]),
  test_util:expected(true, test_util:excel_equal({string,"C0-"}, read_from_excel_data(Config,{25,6}))).
  
g37_test(doc) -> [""];
g37_test(suite) -> [];
g37_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{36,6})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{36,6}))).
  
g32_test(doc) -> [""];
g32_test(suite) -> [];
g32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[false,read_from_excel_data(Config,{31,6})]),
  test_util:expected(true, test_util:excel_equal({boolean,false}, read_from_excel_data(Config,{31,6}))).
  
g43_test(doc) -> [""];
g43_test(suite) -> [];
g43_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[1.0,read_from_excel_data(Config,{42,6})]),
  test_util:expected(true, test_util:excel_equal({number,1.0}, read_from_excel_data(Config,{42,6}))).
  
h27_test(doc) -> [""];
h27_test(suite) -> [];
h27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B27=C27,D27=E27,F27=G27),1,0)",read_from_excel_data(Config,{26,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B27=C27,D27=E27,F27=G27),1,0)"}, read_from_excel_data(Config,{26,7}))).
  
h38_test(doc) -> [""];
h38_test(suite) -> [];
h38_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B38=C38,D38=E38,F38=G38),1,0)",read_from_excel_data(Config,{37,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B38=C38,D38=E38,F38=G38),1,0)"}, read_from_excel_data(Config,{37,7}))).
  
h33_test(doc) -> [""];
h33_test(suite) -> [];
h33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B33=C33,D33=E33,F33=G33),1,0)",read_from_excel_data(Config,{32,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B33=C33,D33=E33,F33=G33),1,0)"}, read_from_excel_data(Config,{32,7}))).
  
h28_test(doc) -> [""];
h28_test(suite) -> [];
h28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B28=C28,D28=E28,F28=G28),1,0)",read_from_excel_data(Config,{27,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B28=C28,D28=E28,F28=G28),1,0)"}, read_from_excel_data(Config,{27,7}))).
  
h39_test(doc) -> [""];
h39_test(suite) -> [];
h39_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B39=C39,D39=E39,F39=G39),1,0)",read_from_excel_data(Config,{38,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B39=C39,D39=E39,F39=G39),1,0)"}, read_from_excel_data(Config,{38,7}))).
  
h34_test(doc) -> [""];
h34_test(suite) -> [];
h34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B34=C34,D34=E34,F34=G34),1,0)",read_from_excel_data(Config,{33,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B34=C34,D34=E34,F34=G34),1,0)"}, read_from_excel_data(Config,{33,7}))).
  
h29_test(doc) -> [""];
h29_test(suite) -> [];
h29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[1.0,read_from_excel_data(Config,{28,7})]),
  test_util:expected(true, test_util:excel_equal({number,1.0}, read_from_excel_data(Config,{28,7}))).
  
h40_test(doc) -> [""];
h40_test(suite) -> [];
h40_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B40=C40,D40=E40,F40=G40),1,0)",read_from_excel_data(Config,{39,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B40=C40,D40=E40,F40=G40),1,0)"}, read_from_excel_data(Config,{39,7}))).
  
h35_test(doc) -> [""];
h35_test(suite) -> [];
h35_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B35=C35,D35=E35,F35=G35),1,0)",read_from_excel_data(Config,{34,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B35=C35,D35=E35,F35=G35),1,0)"}, read_from_excel_data(Config,{34,7}))).
  
h30_test(doc) -> [""];
h30_test(suite) -> [];
h30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B30=C30,D30=E30,F30=G30),1,0)",read_from_excel_data(Config,{29,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B30=C30,D30=E30,F30=G30),1,0)"}, read_from_excel_data(Config,{29,7}))).
  
h41_test(doc) -> [""];
h41_test(suite) -> [];
h41_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B41=C41,D41=E41,F41=G41),1,0)",read_from_excel_data(Config,{40,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B41=C41,D41=E41,F41=G41),1,0)"}, read_from_excel_data(Config,{40,7}))).
  
h25_test(doc) -> [""];
h25_test(suite) -> [];
h25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Status",read_from_excel_data(Config,{24,7})]),
  test_util:expected(true, test_util:excel_equal({string,"Status"}, read_from_excel_data(Config,{24,7}))).
  
h36_test(doc) -> [""];
h36_test(suite) -> [];
h36_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B36=C36,D36=E36,F36=G36),1,0)",read_from_excel_data(Config,{35,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B36=C36,D36=E36,F36=G36),1,0)"}, read_from_excel_data(Config,{35,7}))).
  
h31_test(doc) -> [""];
h31_test(suite) -> [];
h31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B31=C31,D31=E31,F31=G31),1,0)",read_from_excel_data(Config,{30,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B31=C31,D31=E31,F31=G31),1,0)"}, read_from_excel_data(Config,{30,7}))).
  
h42_test(doc) -> [""];
h42_test(suite) -> [];
h42_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(ERROR.TYPE(B42)=7,1,0)",read_from_excel_data(Config,{41,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(ERROR.TYPE(B42)=7,1,0)"}, read_from_excel_data(Config,{41,7}))).
  
h26_test(doc) -> [""];
h26_test(suite) -> [];
h26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B26=C26,D26=E26,F26=G26),1,0)",read_from_excel_data(Config,{25,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B26=C26,D26=E26,F26=G26),1,0)"}, read_from_excel_data(Config,{25,7}))).
  
h37_test(doc) -> [""];
h37_test(suite) -> [];
h37_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B37=C37,D37=E37,F37=G37),1,0)",read_from_excel_data(Config,{36,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B37=C37,D37=E37,F37=G37),1,0)"}, read_from_excel_data(Config,{36,7}))).
  
h32_test(doc) -> [""];
h32_test(suite) -> [];
h32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B32=C32,D32=E32,F32=G32),1,0)",read_from_excel_data(Config,{31,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B32=C32,D32=E32,F32=G32),1,0)"}, read_from_excel_data(Config,{31,7}))).
  
h43_test(doc) -> [""];
h43_test(suite) -> [];
h43_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(AND(B43=C43,D43=E43,F43=G43),1,0)",read_from_excel_data(Config,{42,7})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(AND(B43=C43,D43=E43,F43=G43),1,0)"}, read_from_excel_data(Config,{42,7}))).
  
i27_test(doc) -> [""];
i27_test(suite) -> [];
i27_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H27,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{26,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H27,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{26,8}))).
  
i38_test(doc) -> [""];
i38_test(suite) -> [];
i38_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H38,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{37,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H38,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{37,8}))).
  
i33_test(doc) -> [""];
i33_test(suite) -> [];
i33_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H33,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{32,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H33,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{32,8}))).
  
i28_test(doc) -> [""];
i28_test(suite) -> [];
i28_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H28,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{27,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H28,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{27,8}))).
  
i39_test(doc) -> [""];
i39_test(suite) -> [];
i39_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H39,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{38,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H39,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{38,8}))).
  
i34_test(doc) -> [""];
i34_test(suite) -> [];
i34_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H34,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{33,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H34,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{33,8}))).
  
i29_test(doc) -> [""];
i29_test(suite) -> [];
i29_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H29,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{28,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H29,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{28,8}))).
  
i40_test(doc) -> [""];
i40_test(suite) -> [];
i40_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H40,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{39,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H40,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{39,8}))).
  
i35_test(doc) -> [""];
i35_test(suite) -> [];
i35_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H35,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{34,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H35,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{34,8}))).
  
i30_test(doc) -> [""];
i30_test(suite) -> [];
i30_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H30,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{29,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H30,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{29,8}))).
  
i41_test(doc) -> [""];
i41_test(suite) -> [];
i41_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H41,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{40,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H41,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{40,8}))).
  
i25_test(doc) -> [""];
i25_test(suite) -> [];
i25_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["Status message",read_from_excel_data(Config,{24,8})]),
  test_util:expected(true, test_util:excel_equal({string,"Status message"}, read_from_excel_data(Config,{24,8}))).
  
i36_test(doc) -> [""];
i36_test(suite) -> [];
i36_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H36,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{35,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H36,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{35,8}))).
  
i31_test(doc) -> [""];
i31_test(suite) -> [];
i31_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H31,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{30,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H31,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{30,8}))).
  
i42_test(doc) -> [""];
i42_test(suite) -> [];
i42_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H42,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{41,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H42,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{41,8}))).
  
i26_test(doc) -> [""];
i26_test(suite) -> [];
i26_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H26,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{25,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H26,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{25,8}))).
  
i37_test(doc) -> [""];
i37_test(suite) -> [];
i37_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H37,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{36,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H37,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{36,8}))).
  
i32_test(doc) -> [""];
i32_test(suite) -> [];
i32_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H32,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{31,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H32,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{31,8}))).
  
i43_test(doc) -> [""];
i43_test(suite) -> [];
i43_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",["=IF(H43,\"Ok.\",\"FAILED!!\")",read_from_excel_data(Config,{42,8})]),
  test_util:expected(true, test_util:excel_equal({formula,"=IF(H43,\"Ok.\",\"FAILED!!\")"}, read_from_excel_data(Config,{42,8}))).
  
all(doc) -> [""];
all(suite) -> 
    [a16_test,
   a27_test,
   a38_test,
   a22_test,
   a33_test,
   a44_test,
   a28_test,
   a39_test,
   a1_test,
   a12_test,
   a34_test,
   a7_test,
   a18_test,
   a29_test,
   a40_test,
   a13_test,
   a35_test,
   a8_test,
   a19_test,
   a30_test,
   a41_test,
   a3_test,
   a14_test,
   a25_test,
   a36_test,
   a20_test,
   a31_test,
   a42_test,
   a4_test,
   a26_test,
   a37_test,
   a10_test,
   a21_test,
   a32_test,
   a43_test,
   b27_test,
   b38_test,
   b33_test,
   b28_test,
   b39_test,
   b12_test,
   b34_test,
   b7_test,
   b29_test,
   b40_test,
   b13_test,
   b35_test,
   b8_test,
   b30_test,
   b41_test,
   b25_test,
   b36_test,
   b31_test,
   b42_test,
   b26_test,
   b37_test,
   b32_test,
   b43_test,
   c27_test,
   c38_test,
   c33_test,
   c28_test,
   c39_test,
   c34_test,
   c29_test,
   c40_test,
   c35_test,
   c30_test,
   c41_test,
   c25_test,
   c36_test,
   c31_test,
   c42_test,
   c26_test,
   c37_test,
   c32_test,
   c43_test,
   d27_test,
   d38_test,
   d33_test,
   d28_test,
   d39_test,
   d34_test,
   d29_test,
   d40_test,
   d35_test,
   d30_test,
   d41_test,
   d25_test,
   d36_test,
   d31_test,
   d42_test,
   d26_test,
   d37_test,
   d32_test,
   d43_test,
   e27_test,
   e38_test,
   e33_test,
   e28_test,
   e39_test,
   e34_test,
   e29_test,
   e40_test,
   e35_test,
   e30_test,
   e41_test,
   e25_test,
   e36_test,
   e31_test,
   e42_test,
   e26_test,
   e37_test,
   e32_test,
   e43_test,
   f27_test,
   f38_test,
   f33_test,
   f28_test,
   f39_test,
   f34_test,
   f29_test,
   f40_test,
   f35_test,
   f30_test,
   f41_test,
   f25_test,
   f36_test,
   f31_test,
   f42_test,
   f26_test,
   f37_test,
   f32_test,
   f43_test,
   g27_test,
   g38_test,
   g33_test,
   g28_test,
   g39_test,
   g34_test,
   g29_test,
   g40_test,
   g35_test,
   g30_test,
   g41_test,
   g25_test,
   g36_test,
   g31_test,
   g42_test,
   g26_test,
   g37_test,
   g32_test,
   g43_test,
   h27_test,
   h38_test,
   h33_test,
   h28_test,
   h39_test,
   h34_test,
   h29_test,
   h40_test,
   h35_test,
   h30_test,
   h41_test,
   h25_test,
   h36_test,
   h31_test,
   h42_test,
   h26_test,
   h37_test,
   h32_test,
   h43_test,
   i27_test,
   i38_test,
   i33_test,
   i28_test,
   i39_test,
   i34_test,
   i29_test,
   i40_test,
   i35_test,
   i30_test,
   i41_test,
   i25_test,
   i36_test,
   i31_test,
   i42_test,
   i26_test,
   i37_test,
   i32_test,
   i43_test
    ].
  
