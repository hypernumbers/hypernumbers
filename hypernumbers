#!/bin/bash

NODE=arrian
HOST=localhost
COOKIE=abc
ETS_TABLES=18000

BOOTFILE=ebin/hypernumbers
CONFIG=conf/sys.config

HN_DIR="lib/hypernumbers-1.0"
MOCHI_DIR="lib/mochiweb"

## Create mnesia and log directories
## and config file if they dont exist
[ -f $CONFIG ] || cp conf/sys.config.default $CONFIG 

if [ conf/sys.config.default -nt $CONFIG ] 
then 
    echo -e "\n***WARNING*** Default Config File has been updated\n"
fi

function build
{
    if [ $# -lt 1 ] 
    then
        echo "==============================="
        echo "      Compiling DEPTS          "
        echo "==============================="
        mkdir -p ./lib/mochiweb/ebin
        cd ./lib/mochiweb/
        make
        cd ../../
        cd ./lib/gettext/
        make
        cd ../../
        echo "==============================="
        echo "      Compiling Starling       "
        echo "==============================="
        cd ./lib/starling/
        rake
        cd ../../
        echo "==============================="
        echo " Generating Lexers And Parsers "
        echo "==============================="
        cd ./lib/formula_engine-1.0/priv/
        ./generate.escript
        cd ../../..
    fi

    echo "==============================="
    echo "       Compiling Compiler      "
    echo "==============================="
    erlc -o ebin src/compile_code.erl
    echo "==============================="
    echo "      Generating ms_util       "
    echo "==============================="
    erlc -o $HN_DIR/ebin +debug_info -I $HN_DIR/include priv/ms_util/make_ms_util.erl
    erl -pa $HN_DIR/ebin -noshell -s make_ms_util make -s init stop
    mv ms_util2.erl $HN_DIR/src
    echo "==============================="
    echo "            Compiling          "
    echo "==============================="
    mkdir -p lib/hypernumbers-1.0/tmp/
    cd ebin
    erl -pa ebin -noshell -s compile_code -s init stop
}

function start
{
    MODE="-detached"
    RELOAD=""

    if [ $# -lt 1 ] 
    then
        MODE=""
        RELOAD="-run reloader start"
    fi

    erl $MODE \
        $RELOAD \
        -setcookie $COOKIE \
        -sname $NODE@$HOST \
        -config $CONFIG \
        -boot $BOOTFILE \
        -env ERL_MAX_ETS_TABLES $ETS_TABLES
}

function visualise
{
    cd ./priv/test_visualiser/
    ruby visualise_tests.rb
    cd ../../
}

function statsvn
{
    svn log -v --xml > ./logs/statsvn/svn.log
    cd ./logs/statsvn
    java -Xms512m -Xmx1024m -jar ../../priv/statsvn/statsvn.jar \
         ./svn.log ../../\
         -exclude tests/**:lib/eunit/**:lib/yaws-1.76/**:lib/mochi-1.0/**:**/*.java:**/*.jar:testroot/**
}

function copyfiles
{
    NAME=hypernumbers
    SRC=$NAME@$1:www/$1/priv/uploads/*
    DEST=lib/hypernumbers-1.0/log/$1/uploads/
    [ -d $DEST ] || /bin/mkdir -p $DEST
    /usr/bin/scp $SRC $DEST        
}

function copylog
{
    NAME=hypernumbers
    DEST=lib/hypernumbers-1.0/log/$1/
    SRC=$NAME@$1:www/$1/lib/hypernumbers-1.0/log/post_log.LOG.*
    [ -d $DEST ] || /bin/mkdir -p $DEST
    /usr/bin/scp $SRC $DEST
}

function debug
{
    erl -sname debug-$(date +%s)@$HOST \
        -setcookie $COOKIE \
        -remsh $NODE@$HOST
}

function stop
{
    erl -detached \
        -sname $NODE-ctrl@$HOST \
        -setcookie $COOKIE \
        -eval "rpc:call($NODE@$HOST,init,stop,[])" \
        -s init stop
}

case $1 in 
    start)          start $2;;
    run)            run $2 $3 $4;;
    debug)          debug;;
    stop)           stop;;
    copylog)        copylog $2;;
    copyfiles)      copyfiles $2;;
    build)          build $2;;
    statsvn)        statsvn;;
    visualise)      visualise;;
    *)              echo "invalid parameters passed into hypernumbers script";;
esac