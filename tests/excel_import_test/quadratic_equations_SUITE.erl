% This module has been generated by generatetest.rb
% DO NOT EDIT MANUALLY.
%
% Source file: quadratic_equations.xls
% Generated on: Sat Jan 26 01:08:38 +0000 2008

-module(quadratic_equations_SUITE).
-compile(export_all).
-include("ct.hrl").


init_per_suite(Config) ->
    code:add_patha("../../../../../ebin"),
    production_boot:setup_paths(),
    Data = test_util:read_excel_file("/Win Excel 2007 (as 97)/quadratic_equations.xls"),
    %% io:format("in init_per_suite Data is ~p~n",[Data]),
    lists:merge([Config, [{quadratic_equations_SUITE, Data}]]).
  
end_per_suite(_Config) ->
    ok.
  
init_per_testcase(_TestCase, Config) -> Config.

end_per_testcase(_TestCase, _Config) -> ok.

read_from_excel_data(Config, {Row,Col}) ->
    {value, Result} = lists:keysearch(quadratic_equations_SUITE, 1, Config),
    Data = element(2, Result),
    Key={{row_index,Row},{col_index,Col}},
    {value, Result2} = lists:keysearch(Key, 1, Data),
    El=element(2, Result2),
    %% io:format("El is ~p~n",[El]),
    case El of
        {value, number, Number} -> {number,Number};
        {string,String}         -> {string,String};
        {formula,Formula}       -> {formula,Formula};
        {value,boolean,Boolean} -> {boolean,Boolean};
        {value,error,Error}     -> {error, Error};
        Other                   -> io:format("(in generatetest.rb - fix me Other is ~p~n",[Other])
    end.

a5_test(doc) -> [{userdata,[{""}]}];
a5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"C:"},read_from_excel_data(Config,{4,0})]),
  test_util:expected2(read_from_excel_data(Config,{4,0}), {string,"C:"}).
  
a1_test(doc) -> [{userdata,[{""}]}];
a1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Quadratic Equation Solver"},read_from_excel_data(Config,{0,0})]),
  test_util:expected2(read_from_excel_data(Config,{0,0}), {string,"Quadratic Equation Solver"}).
  
a7_test(doc) -> [{userdata,[{""}]}];
a7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Answers:"},read_from_excel_data(Config,{6,0})]),
  test_util:expected2(read_from_excel_data(Config,{6,0}), {string,"Answers:"}).
  
a13_test(doc) -> [{userdata,[{""}]}];
a13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"hello"},read_from_excel_data(Config,{12,0})]),
  test_util:expected2(read_from_excel_data(Config,{12,0}), {string,"hello"}).
  
a3_test(doc) -> [{userdata,[{""}]}];
a3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"A:"},read_from_excel_data(Config,{2,0})]),
  test_util:expected2(read_from_excel_data(Config,{2,0}), {string,"A:"}).
  
a14_test(doc) -> [{userdata,[{""}]}];
a14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1.0},read_from_excel_data(Config,{13,0})]),
  test_util:expected2(read_from_excel_data(Config,{13,0}), {number,1.0}).
  
a4_test(doc) -> [{userdata,[{""}]}];
a4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"B:"},read_from_excel_data(Config,{3,0})]),
  test_util:expected2(read_from_excel_data(Config,{3,0}), {string,"B:"}).
  
a15_test(doc) -> [{userdata,[{""}]}];
a15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,true},read_from_excel_data(Config,{14,0})]),
  test_util:expected2(read_from_excel_data(Config,{14,0}), {boolean,true}).
  
b5_test(doc) -> [{userdata,[{""}]}];
b5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,4.78},read_from_excel_data(Config,{4,1})]),
  test_util:expected2(read_from_excel_data(Config,{4,1}), {number,4.78}).
  
b7_test(doc) -> [{userdata,[{""}]}];
b7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=(-B4+SQRT(POWER(B4,2)-(4*B3*B5)))/(2*B3)"},read_from_excel_data(Config,{6,1})]),
  test_util:expected2(read_from_excel_data(Config,{6,1}), {formula,"=(-B4+SQRT(POWER(B4,2)-(4*B3*B5)))/(2*B3)"}).
  
b13_test(doc) -> [{userdata,[{""}]}];
b13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=AVERAGE(1,22,3)"},read_from_excel_data(Config,{12,1})]),
  test_util:expected2(read_from_excel_data(Config,{12,1}), {formula,"=AVERAGE(1,22,3)"}).
  
b8_test(doc) -> [{userdata,[{""}]}];
b8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=(-B4-SQRT(POWER(B4,2)-(4*B3*B5)))/(2*B3)"},read_from_excel_data(Config,{7,1})]),
  test_util:expected2(read_from_excel_data(Config,{7,1}), {formula,"=(-B4-SQRT(POWER(B4,2)-(4*B3*B5)))/(2*B3)"}).
  
b3_test(doc) -> [{userdata,[{""}]}];
b3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,3.5},read_from_excel_data(Config,{2,1})]),
  test_util:expected2(read_from_excel_data(Config,{2,1}), {number,3.5}).
  
b4_test(doc) -> [{userdata,[{""}]}];
b4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,14.75},read_from_excel_data(Config,{3,1})]),
  test_util:expected2(read_from_excel_data(Config,{3,1}), {number,14.75}).
  
c5_test(doc) -> [{userdata,[{""}]}];
c5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1.0},read_from_excel_data(Config,{4,2})]),
  test_util:expected2(read_from_excel_data(Config,{4,2}), {number,1.0}).
  
c7_test(doc) -> [{userdata,[{""}]}];
c7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=(-C4+SQRT(POWER(C4,2)-(4*C3*C5)))/(2*C3)"},read_from_excel_data(Config,{6,2})]),
  test_util:expected2(read_from_excel_data(Config,{6,2}), {formula,"=(-C4+SQRT(POWER(C4,2)-(4*C3*C5)))/(2*C3)"}).
  
c8_test(doc) -> [{userdata,[{""}]}];
c8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=(-C4-SQRT(POWER(C4,2)-(4*C3*C5)))/(2*C3)"},read_from_excel_data(Config,{7,2})]),
  test_util:expected2(read_from_excel_data(Config,{7,2}), {formula,"=(-C4-SQRT(POWER(C4,2)-(4*C3*C5)))/(2*C3)"}).
  
c3_test(doc) -> [{userdata,[{""}]}];
c3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1.0},read_from_excel_data(Config,{2,2})]),
  test_util:expected2(read_from_excel_data(Config,{2,2}), {number,1.0}).
  
c4_test(doc) -> [{userdata,[{""}]}];
c4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,20.0},read_from_excel_data(Config,{3,2})]),
  test_util:expected2(read_from_excel_data(Config,{3,2}), {number,20.0}).
  
d5_test(doc) -> [{userdata,[{""}]}];
d5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,0.0},read_from_excel_data(Config,{4,3})]),
  test_util:expected2(read_from_excel_data(Config,{4,3}), {number,0.0}).
  
d1_test(doc) -> [{userdata,[{""}]}];
d1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=UPPER(\"\")"},read_from_excel_data(Config,{0,3})]),
  test_util:expected2(read_from_excel_data(Config,{0,3}), {formula,"=UPPER(\"\")"}).
  
d7_test(doc) -> [{userdata,[{""}]}];
d7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=(-D4+SQRT(POWER(D4,2)-(4*D3*D5)))/(2*D3)"},read_from_excel_data(Config,{6,3})]),
  test_util:expected2(read_from_excel_data(Config,{6,3}), {formula,"=(-D4+SQRT(POWER(D4,2)-(4*D3*D5)))/(2*D3)"}).
  
d8_test(doc) -> [{userdata,[{""}]}];
d8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=(-D4-SQRT(POWER(D4,2)-(4*D3*D5)))/(2*D3)"},read_from_excel_data(Config,{7,3})]),
  test_util:expected2(read_from_excel_data(Config,{7,3}), {formula,"=(-D4-SQRT(POWER(D4,2)-(4*D3*D5)))/(2*D3)"}).
  
d3_test(doc) -> [{userdata,[{""}]}];
d3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1.0},read_from_excel_data(Config,{2,3})]),
  test_util:expected2(read_from_excel_data(Config,{2,3}), {number,1.0}).
  
d4_test(doc) -> [{userdata,[{""}]}];
d4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,0.0},read_from_excel_data(Config,{3,3})]),
  test_util:expected2(read_from_excel_data(Config,{3,3}), {number,0.0}).
  
e5_test(doc) -> [{userdata,[{""}]}];
e5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,9.0},read_from_excel_data(Config,{4,4})]),
  test_util:expected2(read_from_excel_data(Config,{4,4}), {number,9.0}).
  
e7_test(doc) -> [{userdata,[{""}]}];
e7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=(-E4+SQRT(POWER(E4,2)-(4*E3*E5)))/(2*E3)"},read_from_excel_data(Config,{6,4})]),
  test_util:expected2(read_from_excel_data(Config,{6,4}), {formula,"=(-E4+SQRT(POWER(E4,2)-(4*E3*E5)))/(2*E3)"}).
  
e8_test(doc) -> [{userdata,[{""}]}];
e8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=(-E4-SQRT(POWER(E4,2)-(4*E3*E5)))/(2*E3)"},read_from_excel_data(Config,{7,4})]),
  test_util:expected2(read_from_excel_data(Config,{7,4}), {formula,"=(-E4-SQRT(POWER(E4,2)-(4*E3*E5)))/(2*E3)"}).
  
e3_test(doc) -> [{userdata,[{""}]}];
e3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,12.0},read_from_excel_data(Config,{2,4})]),
  test_util:expected2(read_from_excel_data(Config,{2,4}), {number,12.0}).
  
e4_test(doc) -> [{userdata,[{""}]}];
e4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,101.2},read_from_excel_data(Config,{3,4})]),
  test_util:expected2(read_from_excel_data(Config,{3,4}), {number,101.2}).
  
f5_test(doc) -> [{userdata,[{""}]}];
f5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,123.9},read_from_excel_data(Config,{4,5})]),
  test_util:expected2(read_from_excel_data(Config,{4,5}), {number,123.9}).
  
f7_test(doc) -> [{userdata,[{""}]}];
f7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=(-F4+SQRT(POWER(F4,2)-(4*F3*F5)))/(2*F3)"},read_from_excel_data(Config,{6,5})]),
  test_util:expected2(read_from_excel_data(Config,{6,5}), {formula,"=(-F4+SQRT(POWER(F4,2)-(4*F3*F5)))/(2*F3)"}).
  
f8_test(doc) -> [{userdata,[{""}]}];
f8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=(-F4-SQRT(POWER(F4,2)-(4*F3*F5)))/(2*F3)"},read_from_excel_data(Config,{7,5})]),
  test_util:expected2(read_from_excel_data(Config,{7,5}), {formula,"=(-F4-SQRT(POWER(F4,2)-(4*F3*F5)))/(2*F3)"}).
  
f3_test(doc) -> [{userdata,[{""}]}];
f3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,890.9},read_from_excel_data(Config,{2,5})]),
  test_util:expected2(read_from_excel_data(Config,{2,5}), {number,890.9}).
  
f4_test(doc) -> [{userdata,[{""}]}];
f4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1011.45},read_from_excel_data(Config,{3,5})]),
  test_util:expected2(read_from_excel_data(Config,{3,5}), {number,1011.45}).
  
all() -> 
    [a5_test,
   a1_test,
   a7_test,
   a13_test,
   a3_test,
   a14_test,
   a4_test,
   a15_test,
   b5_test,
   b7_test,
   b13_test,
   b8_test,
   b3_test,
   b4_test,
   c5_test,
   c7_test,
   c8_test,
   c3_test,
   c4_test,
   d5_test,
   d1_test,
   d7_test,
   d8_test,
   d3_test,
   d4_test,
   e5_test,
   e7_test,
   e8_test,
   e3_test,
   e4_test,
   f5_test,
   f7_test,
   f8_test,
   f3_test,
   f4_test
    ].
  
