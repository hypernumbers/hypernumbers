% This module has been generated by generatetest.rb
% DO NOT EDIT MANUALLY.
%
% Source file: block_of_numbers.xls
% Generated on: Sat Jan 26 01:08:41 +0000 2008

-module(block_of_numbers_SUITE).
-compile(export_all).
-include("ct.hrl").


init_per_suite(Config) ->
    code:add_patha("../../../../../ebin"),
    production_boot:setup_paths(),
    Data = test_util:read_excel_file("/Win Excel 2007 (as 97)/block_of_numbers.xls"),
    %% io:format("in init_per_suite Data is ~p~n",[Data]),
    lists:merge([Config, [{block_of_numbers_SUITE, Data}]]).
  
end_per_suite(_Config) ->
    ok.
  
init_per_testcase(_TestCase, Config) -> Config.

end_per_testcase(_TestCase, _Config) -> ok.

read_from_excel_data(Config, {Row,Col}) ->
    {value, Result} = lists:keysearch(block_of_numbers_SUITE, 1, Config),
    Data = element(2, Result),
    Key={{row_index,Row},{col_index,Col}},
    {value, Result2} = lists:keysearch(Key, 1, Data),
    El=element(2, Result2),
    %% io:format("El is ~p~n",[El]),
    case El of
        {value, number, Number} -> {number,Number};
        {string,String}         -> {string,String};
        {formula,Formula}       -> {formula,Formula};
        {value,boolean,Boolean} -> {boolean,Boolean};
        {value,error,Error}     -> {error, Error};
        Other                   -> io:format("(in generatetest.rb - fix me Other is ~p~n",[Other])
    end.

a5_test(doc) -> [{userdata,[{""}]}];
a5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,123456789.0},read_from_excel_data(Config,{4,0})]),
  test_util:expected2(read_from_excel_data(Config,{4,0}), {number,123456789.0}).
  
a1_test(doc) -> [{userdata,[{""}]}];
a1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1.0},read_from_excel_data(Config,{0,0})]),
  test_util:expected2(read_from_excel_data(Config,{0,0}), {number,1.0}).
  
a2_test(doc) -> [{userdata,[{""}]}];
a2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,11.0},read_from_excel_data(Config,{1,0})]),
  test_util:expected2(read_from_excel_data(Config,{1,0}), {number,11.0}).
  
a3_test(doc) -> [{userdata,[{""}]}];
a3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,111.0},read_from_excel_data(Config,{2,0})]),
  test_util:expected2(read_from_excel_data(Config,{2,0}), {number,111.0}).
  
a4_test(doc) -> [{userdata,[{""}]}];
a4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1111.0},read_from_excel_data(Config,{3,0})]),
  test_util:expected2(read_from_excel_data(Config,{3,0}), {number,1111.0}).
  
b1_test(doc) -> [{userdata,[{""}]}];
b1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,2.0},read_from_excel_data(Config,{0,1})]),
  test_util:expected2(read_from_excel_data(Config,{0,1}), {number,2.0}).
  
b2_test(doc) -> [{userdata,[{""}]}];
b2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,22.0},read_from_excel_data(Config,{1,1})]),
  test_util:expected2(read_from_excel_data(Config,{1,1}), {number,22.0}).
  
b3_test(doc) -> [{userdata,[{""}]}];
b3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,222.0},read_from_excel_data(Config,{2,1})]),
  test_util:expected2(read_from_excel_data(Config,{2,1}), {number,222.0}).
  
b4_test(doc) -> [{userdata,[{""}]}];
b4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,2222.0},read_from_excel_data(Config,{3,1})]),
  test_util:expected2(read_from_excel_data(Config,{3,1}), {number,2222.0}).
  
c1_test(doc) -> [{userdata,[{""}]}];
c1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,3.0},read_from_excel_data(Config,{0,2})]),
  test_util:expected2(read_from_excel_data(Config,{0,2}), {number,3.0}).
  
c2_test(doc) -> [{userdata,[{""}]}];
c2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,33.0},read_from_excel_data(Config,{1,2})]),
  test_util:expected2(read_from_excel_data(Config,{1,2}), {number,33.0}).
  
c3_test(doc) -> [{userdata,[{""}]}];
c3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,333.0},read_from_excel_data(Config,{2,2})]),
  test_util:expected2(read_from_excel_data(Config,{2,2}), {number,333.0}).
  
c4_test(doc) -> [{userdata,[{""}]}];
c4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,3333.0},read_from_excel_data(Config,{3,2})]),
  test_util:expected2(read_from_excel_data(Config,{3,2}), {number,3333.0}).
  
d1_test(doc) -> [{userdata,[{""}]}];
d1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,4.0},read_from_excel_data(Config,{0,3})]),
  test_util:expected2(read_from_excel_data(Config,{0,3}), {number,4.0}).
  
d2_test(doc) -> [{userdata,[{""}]}];
d2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,44.0},read_from_excel_data(Config,{1,3})]),
  test_util:expected2(read_from_excel_data(Config,{1,3}), {number,44.0}).
  
d3_test(doc) -> [{userdata,[{""}]}];
d3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,444.0},read_from_excel_data(Config,{2,3})]),
  test_util:expected2(read_from_excel_data(Config,{2,3}), {number,444.0}).
  
d4_test(doc) -> [{userdata,[{""}]}];
d4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,4444.0},read_from_excel_data(Config,{3,3})]),
  test_util:expected2(read_from_excel_data(Config,{3,3}), {number,4444.0}).
  
e1_test(doc) -> [{userdata,[{""}]}];
e1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,5.0},read_from_excel_data(Config,{0,4})]),
  test_util:expected2(read_from_excel_data(Config,{0,4}), {number,5.0}).
  
e2_test(doc) -> [{userdata,[{""}]}];
e2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,55.0},read_from_excel_data(Config,{1,4})]),
  test_util:expected2(read_from_excel_data(Config,{1,4}), {number,55.0}).
  
e3_test(doc) -> [{userdata,[{""}]}];
e3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,555.0},read_from_excel_data(Config,{2,4})]),
  test_util:expected2(read_from_excel_data(Config,{2,4}), {number,555.0}).
  
e4_test(doc) -> [{userdata,[{""}]}];
e4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,5555.0},read_from_excel_data(Config,{3,4})]),
  test_util:expected2(read_from_excel_data(Config,{3,4}), {number,5555.0}).
  
f1_test(doc) -> [{userdata,[{""}]}];
f1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,6.0},read_from_excel_data(Config,{0,5})]),
  test_util:expected2(read_from_excel_data(Config,{0,5}), {number,6.0}).
  
f2_test(doc) -> [{userdata,[{""}]}];
f2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,66.0},read_from_excel_data(Config,{1,5})]),
  test_util:expected2(read_from_excel_data(Config,{1,5}), {number,66.0}).
  
f3_test(doc) -> [{userdata,[{""}]}];
f3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,666.0},read_from_excel_data(Config,{2,5})]),
  test_util:expected2(read_from_excel_data(Config,{2,5}), {number,666.0}).
  
f4_test(doc) -> [{userdata,[{""}]}];
f4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,6666.0},read_from_excel_data(Config,{3,5})]),
  test_util:expected2(read_from_excel_data(Config,{3,5}), {number,6666.0}).
  
g1_test(doc) -> [{userdata,[{""}]}];
g1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,7.0},read_from_excel_data(Config,{0,6})]),
  test_util:expected2(read_from_excel_data(Config,{0,6}), {number,7.0}).
  
g2_test(doc) -> [{userdata,[{""}]}];
g2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,77.0},read_from_excel_data(Config,{1,6})]),
  test_util:expected2(read_from_excel_data(Config,{1,6}), {number,77.0}).
  
g3_test(doc) -> [{userdata,[{""}]}];
g3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,777.0},read_from_excel_data(Config,{2,6})]),
  test_util:expected2(read_from_excel_data(Config,{2,6}), {number,777.0}).
  
g4_test(doc) -> [{userdata,[{""}]}];
g4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,7777.0},read_from_excel_data(Config,{3,6})]),
  test_util:expected2(read_from_excel_data(Config,{3,6}), {number,7777.0}).
  
h1_test(doc) -> [{userdata,[{""}]}];
h1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,8.0},read_from_excel_data(Config,{0,7})]),
  test_util:expected2(read_from_excel_data(Config,{0,7}), {number,8.0}).
  
h2_test(doc) -> [{userdata,[{""}]}];
h2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,88.0},read_from_excel_data(Config,{1,7})]),
  test_util:expected2(read_from_excel_data(Config,{1,7}), {number,88.0}).
  
h3_test(doc) -> [{userdata,[{""}]}];
h3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,888.0},read_from_excel_data(Config,{2,7})]),
  test_util:expected2(read_from_excel_data(Config,{2,7}), {number,888.0}).
  
h4_test(doc) -> [{userdata,[{""}]}];
h4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,8888.0},read_from_excel_data(Config,{3,7})]),
  test_util:expected2(read_from_excel_data(Config,{3,7}), {number,8888.0}).
  
i1_test(doc) -> [{userdata,[{""}]}];
i1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,9.0},read_from_excel_data(Config,{0,8})]),
  test_util:expected2(read_from_excel_data(Config,{0,8}), {number,9.0}).
  
i2_test(doc) -> [{userdata,[{""}]}];
i2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,99.0},read_from_excel_data(Config,{1,8})]),
  test_util:expected2(read_from_excel_data(Config,{1,8}), {number,99.0}).
  
i3_test(doc) -> [{userdata,[{""}]}];
i3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,999.0},read_from_excel_data(Config,{2,8})]),
  test_util:expected2(read_from_excel_data(Config,{2,8}), {number,999.0}).
  
i4_test(doc) -> [{userdata,[{""}]}];
i4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,9999.0},read_from_excel_data(Config,{3,8})]),
  test_util:expected2(read_from_excel_data(Config,{3,8}), {number,9999.0}).
  
all() -> 
    [a5_test,
   a1_test,
   a2_test,
   a3_test,
   a4_test,
   b1_test,
   b2_test,
   b3_test,
   b4_test,
   c1_test,
   c2_test,
   c3_test,
   c4_test,
   d1_test,
   d2_test,
   d3_test,
   d4_test,
   e1_test,
   e2_test,
   e3_test,
   e4_test,
   f1_test,
   f2_test,
   f3_test,
   f4_test,
   g1_test,
   g2_test,
   g3_test,
   g4_test,
   h1_test,
   h2_test,
   h3_test,
   h4_test,
   i1_test,
   i2_test,
   i3_test,
   i4_test
    ].
  
