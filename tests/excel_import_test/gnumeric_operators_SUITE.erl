% This module has been generated by generatetest.rb
% DO NOT EDIT MANUALLY.
%
% Source file: gnumeric_operators.xls
% Generated on: Sat Jan 26 01:08:52 +0000 2008

-module(gnumeric_operators_SUITE).
-compile(export_all).
-include("ct.hrl").


init_per_suite(Config) ->
    code:add_patha("../../../../../ebin"),
    production_boot:setup_paths(),
    Data = test_util:read_excel_file("/Win Excel 2007 (as 97)/gnumeric_operators.xls"),
    %% io:format("in init_per_suite Data is ~p~n",[Data]),
    lists:merge([Config, [{gnumeric_operators_SUITE, Data}]]).
  
end_per_suite(_Config) ->
    ok.
  
init_per_testcase(_TestCase, Config) -> Config.

end_per_testcase(_TestCase, _Config) -> ok.

read_from_excel_data(Config, {Row,Col}) ->
    {value, Result} = lists:keysearch(gnumeric_operators_SUITE, 1, Config),
    Data = element(2, Result),
    Key={{row_index,Row},{col_index,Col}},
    {value, Result2} = lists:keysearch(Key, 1, Data),
    El=element(2, Result2),
    %% io:format("El is ~p~n",[El]),
    case El of
        {value, number, Number} -> {number,Number};
        {string,String}         -> {string,String};
        {formula,Formula}       -> {formula,Formula};
        {value,boolean,Boolean} -> {boolean,Boolean};
        {value,error,Error}     -> {error, Error};
        Other                   -> io:format("(in generatetest.rb - fix me Other is ~p~n",[Other])
    end.

a5_test(doc) -> [{userdata,[{""}]}];
a5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"LTE"},read_from_excel_data(Config,{4,0})]),
  test_util:expected2(read_from_excel_data(Config,{4,0}), {string,"LTE"}).
  
a16_test(doc) -> [{userdata,[{""}]}];
a16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Epsilon :"},read_from_excel_data(Config,{15,0})]),
  test_util:expected2(read_from_excel_data(Config,{15,0}), {string,"Epsilon :"}).
  
a11_test(doc) -> [{userdata,[{""}]}];
a11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"EXP"},read_from_excel_data(Config,{10,0})]),
  test_util:expected2(read_from_excel_data(Config,{10,0}), {string,"EXP"}).
  
a6_test(doc) -> [{userdata,[{""}]}];
a6_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"NOT_EQUAL"},read_from_excel_data(Config,{5,0})]),
  test_util:expected2(read_from_excel_data(Config,{5,0}), {string,"NOT_EQUAL"}).
  
a1_test(doc) -> [{userdata,[{""}]}];
a1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"EQUAL"},read_from_excel_data(Config,{0,0})]),
  test_util:expected2(read_from_excel_data(Config,{0,0}), {string,"EQUAL"}).
  
a12_test(doc) -> [{userdata,[{""}]}];
a12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"CONCAT"},read_from_excel_data(Config,{11,0})]),
  test_util:expected2(read_from_excel_data(Config,{11,0}), {string,"CONCAT"}).
  
a7_test(doc) -> [{userdata,[{""}]}];
a7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"ADD"},read_from_excel_data(Config,{6,0})]),
  test_util:expected2(read_from_excel_data(Config,{6,0}), {string,"ADD"}).
  
a2_test(doc) -> [{userdata,[{""}]}];
a2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"GT"},read_from_excel_data(Config,{1,0})]),
  test_util:expected2(read_from_excel_data(Config,{1,0}), {string,"GT"}).
  
a8_test(doc) -> [{userdata,[{""}]}];
a8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"SUB"},read_from_excel_data(Config,{7,0})]),
  test_util:expected2(read_from_excel_data(Config,{7,0}), {string,"SUB"}).
  
a3_test(doc) -> [{userdata,[{""}]}];
a3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"LT"},read_from_excel_data(Config,{2,0})]),
  test_util:expected2(read_from_excel_data(Config,{2,0}), {string,"LT"}).
  
a9_test(doc) -> [{userdata,[{""}]}];
a9_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"MULT"},read_from_excel_data(Config,{8,0})]),
  test_util:expected2(read_from_excel_data(Config,{8,0}), {string,"MULT"}).
  
a4_test(doc) -> [{userdata,[{""}]}];
a4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"GTE"},read_from_excel_data(Config,{3,0})]),
  test_util:expected2(read_from_excel_data(Config,{3,0}), {string,"GTE"}).
  
a10_test(doc) -> [{userdata,[{""}]}];
a10_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"DIV"},read_from_excel_data(Config,{9,0})]),
  test_util:expected2(read_from_excel_data(Config,{9,0}), {string,"DIV"}).
  
b16_test(doc) -> [{userdata,[{""}]}];
b16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1.0e-006},read_from_excel_data(Config,{15,1})]),
  test_util:expected2(read_from_excel_data(Config,{15,1}), {number,1.0e-006}).
  
c5_test(doc) -> [{userdata,[{""}]}];
c5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=LTE!A48"},read_from_excel_data(Config,{4,2})]),
  test_util:expected2(read_from_excel_data(Config,{4,2}), {formula,"=LTE!A48"}).
  
c11_test(doc) -> [{userdata,[{""}]}];
c11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=EXP!A48"},read_from_excel_data(Config,{10,2})]),
  test_util:expected2(read_from_excel_data(Config,{10,2}), {formula,"=EXP!A48"}).
  
c6_test(doc) -> [{userdata,[{""}]}];
c6_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=NOT_EQUAL!A48"},read_from_excel_data(Config,{5,2})]),
  test_util:expected2(read_from_excel_data(Config,{5,2}), {formula,"=NOT_EQUAL!A48"}).
  
c1_test(doc) -> [{userdata,[{""}]}];
c1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=EQUAL!A48"},read_from_excel_data(Config,{0,2})]),
  test_util:expected2(read_from_excel_data(Config,{0,2}), {formula,"=EQUAL!A48"}).
  
c12_test(doc) -> [{userdata,[{""}]}];
c12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=CONCAT!A48"},read_from_excel_data(Config,{11,2})]),
  test_util:expected2(read_from_excel_data(Config,{11,2}), {formula,"=CONCAT!A48"}).
  
c7_test(doc) -> [{userdata,[{""}]}];
c7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=ADD!A48"},read_from_excel_data(Config,{6,2})]),
  test_util:expected2(read_from_excel_data(Config,{6,2}), {formula,"=ADD!A48"}).
  
c2_test(doc) -> [{userdata,[{""}]}];
c2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=GT!A48"},read_from_excel_data(Config,{1,2})]),
  test_util:expected2(read_from_excel_data(Config,{1,2}), {formula,"=GT!A48"}).
  
c8_test(doc) -> [{userdata,[{""}]}];
c8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUB!A48"},read_from_excel_data(Config,{7,2})]),
  test_util:expected2(read_from_excel_data(Config,{7,2}), {formula,"=SUB!A48"}).
  
c3_test(doc) -> [{userdata,[{""}]}];
c3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=LT!A48"},read_from_excel_data(Config,{2,2})]),
  test_util:expected2(read_from_excel_data(Config,{2,2}), {formula,"=LT!A48"}).
  
c9_test(doc) -> [{userdata,[{""}]}];
c9_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=MULT!A48"},read_from_excel_data(Config,{8,2})]),
  test_util:expected2(read_from_excel_data(Config,{8,2}), {formula,"=MULT!A48"}).
  
c4_test(doc) -> [{userdata,[{""}]}];
c4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=GTE!A48"},read_from_excel_data(Config,{3,2})]),
  test_util:expected2(read_from_excel_data(Config,{3,2}), {formula,"=GTE!A48"}).
  
c10_test(doc) -> [{userdata,[{""}]}];
c10_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=DIV!A48"},read_from_excel_data(Config,{9,2})]),
  test_util:expected2(read_from_excel_data(Config,{9,2}), {formula,"=DIV!A48"}).
  
e1_test(doc) -> [{userdata,[{""}]}];
e1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"This set of results was calculated on Excel 97 SR-2"},read_from_excel_data(Config,{0,4})]),
  test_util:expected2(read_from_excel_data(Config,{0,4}), {string,"This set of results was calculated on Excel 97 SR-2"}).
  
all() -> 
    [a5_test,
   a16_test,
   a11_test,
   a6_test,
   a1_test,
   a12_test,
   a7_test,
   a2_test,
   a8_test,
   a3_test,
   a9_test,
   a4_test,
   a10_test,
   b16_test,
   c5_test,
   c11_test,
   c6_test,
   c1_test,
   c12_test,
   c7_test,
   c2_test,
   c8_test,
   c3_test,
   c9_test,
   c4_test,
   c10_test,
   e1_test
    ].
  
