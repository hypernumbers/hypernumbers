% This module has been generated by generatetest.rb
% DO NOT EDIT MANUALLY.
%
% Source file: gnumeric_logical.xls
% Generated on: Sat Jan 26 01:08:50 +0000 2008

-module(gnumeric_logical_SUITE).
-compile(export_all).
-include("ct.hrl").


init_per_suite(Config) ->
    code:add_patha("../../../../../ebin"),
    production_boot:setup_paths(),
    Data = test_util:read_excel_file("/Win Excel 2007 (as 97)/gnumeric_logical.xls"),
    %% io:format("in init_per_suite Data is ~p~n",[Data]),
    lists:merge([Config, [{gnumeric_logical_SUITE, Data}]]).
  
end_per_suite(_Config) ->
    ok.
  
init_per_testcase(_TestCase, Config) -> Config.

end_per_testcase(_TestCase, _Config) -> ok.

read_from_excel_data(Config, {Row,Col}) ->
    {value, Result} = lists:keysearch(gnumeric_logical_SUITE, 1, Config),
    Data = element(2, Result),
    Key={{row_index,Row},{col_index,Col}},
    {value, Result2} = lists:keysearch(Key, 1, Data),
    El=element(2, Result2),
    %% io:format("El is ~p~n",[El]),
    case El of
        {value, number, Number} -> {number,Number};
        {string,String}         -> {string,String};
        {formula,Formula}       -> {formula,Formula};
        {value,boolean,Boolean} -> {boolean,Boolean};
        {value,error,Error}     -> {error, Error};
        Other                   -> io:format("(in generatetest.rb - fix me Other is ~p~n",[Other])
    end.

a16_test(doc) -> [{userdata,[{""}]}];
a16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"OR"},read_from_excel_data(Config,{15,0})]),
  test_util:expected2(read_from_excel_data(Config,{15,0}), {string,"OR"}).
  
a11_test(doc) -> [{userdata,[{""}]}];
a11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Function"},read_from_excel_data(Config,{10,0})]),
  test_util:expected2(read_from_excel_data(Config,{10,0}), {string,"Function"}).
  
a17_test(doc) -> [{userdata,[{""}]}];
a17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"TRUE"},read_from_excel_data(Config,{16,0})]),
  test_util:expected2(read_from_excel_data(Config,{16,0}), {string,"TRUE"}).
  
a1_test(doc) -> [{userdata,[{""}]}];
a1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"LOGICAL FUNCTIONS"},read_from_excel_data(Config,{0,0})]),
  test_util:expected2(read_from_excel_data(Config,{0,0}), {string,"LOGICAL FUNCTIONS"}).
  
a12_test(doc) -> [{userdata,[{""}]}];
a12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"AND"},read_from_excel_data(Config,{11,0})]),
  test_util:expected2(read_from_excel_data(Config,{11,0}), {string,"AND"}).
  
a7_test(doc) -> [{userdata,[{""}]}];
a7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"#Succeded"},read_from_excel_data(Config,{6,0})]),
  test_util:expected2(read_from_excel_data(Config,{6,0}), {string,"#Succeded"}).
  
a18_test(doc) -> [{userdata,[{""}]}];
a18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Total"},read_from_excel_data(Config,{17,0})]),
  test_util:expected2(read_from_excel_data(Config,{17,0}), {string,"Total"}).
  
a13_test(doc) -> [{userdata,[{""}]}];
a13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"FALSE"},read_from_excel_data(Config,{12,0})]),
  test_util:expected2(read_from_excel_data(Config,{12,0}), {string,"FALSE"}).
  
a8_test(doc) -> [{userdata,[{""}]}];
a8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(H12:H17)"},read_from_excel_data(Config,{7,0})]),
  test_util:expected2(read_from_excel_data(Config,{7,0}), {formula,"=SUM(H12:H17)"}).
  
a3_test(doc) -> [{userdata,[{""}]}];
a3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Test Status"},read_from_excel_data(Config,{2,0})]),
  test_util:expected2(read_from_excel_data(Config,{2,0}), {string,"Test Status"}).
  
a14_test(doc) -> [{userdata,[{""}]}];
a14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"IF"},read_from_excel_data(Config,{13,0})]),
  test_util:expected2(read_from_excel_data(Config,{13,0}), {string,"IF"}).
  
a4_test(doc) -> [{userdata,[{""}]}];
a4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(A8=B8,\"All ok.\",\"FAILED!!\")"},read_from_excel_data(Config,{3,0})]),
  test_util:expected2(read_from_excel_data(Config,{3,0}), {formula,"=IF(A8=B8,\"All ok.\",\"FAILED!!\")"}).
  
a15_test(doc) -> [{userdata,[{""}]}];
a15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"NOT"},read_from_excel_data(Config,{14,0})]),
  test_util:expected2(read_from_excel_data(Config,{14,0}), {string,"NOT"}).
  
b16_test(doc) -> [{userdata,[{""}]}];
b16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=OR(1,0)"},read_from_excel_data(Config,{15,1})]),
  test_util:expected2(read_from_excel_data(Config,{15,1}), {formula,"=OR(1,0)"}).
  
b11_test(doc) -> [{userdata,[{""}]}];
b11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"1st test"},read_from_excel_data(Config,{10,1})]),
  test_util:expected2(read_from_excel_data(Config,{10,1}), {string,"1st test"}).
  
b17_test(doc) -> [{userdata,[{""}]}];
b17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=TRUE()"},read_from_excel_data(Config,{16,1})]),
  test_util:expected2(read_from_excel_data(Config,{16,1}), {formula,"=TRUE()"}).
  
b12_test(doc) -> [{userdata,[{""}]}];
b12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=AND(1,1)"},read_from_excel_data(Config,{11,1})]),
  test_util:expected2(read_from_excel_data(Config,{11,1}), {formula,"=AND(1,1)"}).
  
b7_test(doc) -> [{userdata,[{""}]}];
b7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"#Total"},read_from_excel_data(Config,{6,1})]),
  test_util:expected2(read_from_excel_data(Config,{6,1}), {string,"#Total"}).
  
b13_test(doc) -> [{userdata,[{""}]}];
b13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=FALSE()"},read_from_excel_data(Config,{12,1})]),
  test_util:expected2(read_from_excel_data(Config,{12,1}), {formula,"=FALSE()"}).
  
b8_test(doc) -> [{userdata,[{""}]}];
b8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,6.0},read_from_excel_data(Config,{7,1})]),
  test_util:expected2(read_from_excel_data(Config,{7,1}), {number,6.0}).
  
b14_test(doc) -> [{userdata,[{""}]}];
b14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(1,\"true\",\"false\")"},read_from_excel_data(Config,{13,1})]),
  test_util:expected2(read_from_excel_data(Config,{13,1}), {formula,"=IF(1,\"true\",\"false\")"}).
  
b15_test(doc) -> [{userdata,[{""}]}];
b15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=NOT(TRUE)"},read_from_excel_data(Config,{14,1})]),
  test_util:expected2(read_from_excel_data(Config,{14,1}), {formula,"=NOT(TRUE)"}).
  
c16_test(doc) -> [{userdata,[{""}]}];
c16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,true},read_from_excel_data(Config,{15,2})]),
  test_util:expected2(read_from_excel_data(Config,{15,2}), {boolean,true}).
  
c11_test(doc) -> [{userdata,[{""}]}];
c11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Correct"},read_from_excel_data(Config,{10,2})]),
  test_util:expected2(read_from_excel_data(Config,{10,2}), {string,"Correct"}).
  
c17_test(doc) -> [{userdata,[{""}]}];
c17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,true},read_from_excel_data(Config,{16,2})]),
  test_util:expected2(read_from_excel_data(Config,{16,2}), {boolean,true}).
  
c12_test(doc) -> [{userdata,[{""}]}];
c12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,true},read_from_excel_data(Config,{11,2})]),
  test_util:expected2(read_from_excel_data(Config,{11,2}), {boolean,true}).
  
c13_test(doc) -> [{userdata,[{""}]}];
c13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,false},read_from_excel_data(Config,{12,2})]),
  test_util:expected2(read_from_excel_data(Config,{12,2}), {boolean,false}).
  
c14_test(doc) -> [{userdata,[{""}]}];
c14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"true"},read_from_excel_data(Config,{13,2})]),
  test_util:expected2(read_from_excel_data(Config,{13,2}), {string,"true"}).
  
c15_test(doc) -> [{userdata,[{""}]}];
c15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,false},read_from_excel_data(Config,{14,2})]),
  test_util:expected2(read_from_excel_data(Config,{14,2}), {boolean,false}).
  
d16_test(doc) -> [{userdata,[{""}]}];
d16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=OR(0)"},read_from_excel_data(Config,{15,3})]),
  test_util:expected2(read_from_excel_data(Config,{15,3}), {formula,"=OR(0)"}).
  
d11_test(doc) -> [{userdata,[{""}]}];
d11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"2nd test"},read_from_excel_data(Config,{10,3})]),
  test_util:expected2(read_from_excel_data(Config,{10,3}), {string,"2nd test"}).
  
d17_test(doc) -> [{userdata,[{""}]}];
d17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=TRUE()"},read_from_excel_data(Config,{16,3})]),
  test_util:expected2(read_from_excel_data(Config,{16,3}), {formula,"=TRUE()"}).
  
d12_test(doc) -> [{userdata,[{""}]}];
d12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=AND(1)"},read_from_excel_data(Config,{11,3})]),
  test_util:expected2(read_from_excel_data(Config,{11,3}), {formula,"=AND(1)"}).
  
d13_test(doc) -> [{userdata,[{""}]}];
d13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=FALSE()"},read_from_excel_data(Config,{12,3})]),
  test_util:expected2(read_from_excel_data(Config,{12,3}), {formula,"=FALSE()"}).
  
d14_test(doc) -> [{userdata,[{""}]}];
d14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(0,\"true\",\"false\")"},read_from_excel_data(Config,{13,3})]),
  test_util:expected2(read_from_excel_data(Config,{13,3}), {formula,"=IF(0,\"true\",\"false\")"}).
  
d15_test(doc) -> [{userdata,[{""}]}];
d15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=NOT(FALSE)"},read_from_excel_data(Config,{14,3})]),
  test_util:expected2(read_from_excel_data(Config,{14,3}), {formula,"=NOT(FALSE)"}).
  
e16_test(doc) -> [{userdata,[{""}]}];
e16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,false},read_from_excel_data(Config,{15,4})]),
  test_util:expected2(read_from_excel_data(Config,{15,4}), {boolean,false}).
  
e11_test(doc) -> [{userdata,[{""}]}];
e11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Correct"},read_from_excel_data(Config,{10,4})]),
  test_util:expected2(read_from_excel_data(Config,{10,4}), {string,"Correct"}).
  
e17_test(doc) -> [{userdata,[{""}]}];
e17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,true},read_from_excel_data(Config,{16,4})]),
  test_util:expected2(read_from_excel_data(Config,{16,4}), {boolean,true}).
  
e12_test(doc) -> [{userdata,[{""}]}];
e12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,true},read_from_excel_data(Config,{11,4})]),
  test_util:expected2(read_from_excel_data(Config,{11,4}), {boolean,true}).
  
e13_test(doc) -> [{userdata,[{""}]}];
e13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,false},read_from_excel_data(Config,{12,4})]),
  test_util:expected2(read_from_excel_data(Config,{12,4}), {boolean,false}).
  
e14_test(doc) -> [{userdata,[{""}]}];
e14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"false"},read_from_excel_data(Config,{13,4})]),
  test_util:expected2(read_from_excel_data(Config,{13,4}), {string,"false"}).
  
e15_test(doc) -> [{userdata,[{""}]}];
e15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,true},read_from_excel_data(Config,{14,4})]),
  test_util:expected2(read_from_excel_data(Config,{14,4}), {boolean,true}).
  
f16_test(doc) -> [{userdata,[{""}]}];
f16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=OR(1,1,1,1)"},read_from_excel_data(Config,{15,5})]),
  test_util:expected2(read_from_excel_data(Config,{15,5}), {formula,"=OR(1,1,1,1)"}).
  
f11_test(doc) -> [{userdata,[{""}]}];
f11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"3rd test"},read_from_excel_data(Config,{10,5})]),
  test_util:expected2(read_from_excel_data(Config,{10,5}), {string,"3rd test"}).
  
f17_test(doc) -> [{userdata,[{""}]}];
f17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=TRUE()"},read_from_excel_data(Config,{16,5})]),
  test_util:expected2(read_from_excel_data(Config,{16,5}), {formula,"=TRUE()"}).
  
f12_test(doc) -> [{userdata,[{""}]}];
f12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=AND(1,1,0)"},read_from_excel_data(Config,{11,5})]),
  test_util:expected2(read_from_excel_data(Config,{11,5}), {formula,"=AND(1,1,0)"}).
  
f13_test(doc) -> [{userdata,[{""}]}];
f13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=FALSE()"},read_from_excel_data(Config,{12,5})]),
  test_util:expected2(read_from_excel_data(Config,{12,5}), {formula,"=FALSE()"}).
  
f14_test(doc) -> [{userdata,[{""}]}];
f14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(0,\"true\",\"false\")"},read_from_excel_data(Config,{13,5})]),
  test_util:expected2(read_from_excel_data(Config,{13,5}), {formula,"=IF(0,\"true\",\"false\")"}).
  
f15_test(doc) -> [{userdata,[{""}]}];
f15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=NOT(NOT(TRUE))"},read_from_excel_data(Config,{14,5})]),
  test_util:expected2(read_from_excel_data(Config,{14,5}), {formula,"=NOT(NOT(TRUE))"}).
  
g16_test(doc) -> [{userdata,[{""}]}];
g16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,true},read_from_excel_data(Config,{15,6})]),
  test_util:expected2(read_from_excel_data(Config,{15,6}), {boolean,true}).
  
g11_test(doc) -> [{userdata,[{""}]}];
g11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Correct"},read_from_excel_data(Config,{10,6})]),
  test_util:expected2(read_from_excel_data(Config,{10,6}), {string,"Correct"}).
  
g17_test(doc) -> [{userdata,[{""}]}];
g17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,true},read_from_excel_data(Config,{16,6})]),
  test_util:expected2(read_from_excel_data(Config,{16,6}), {boolean,true}).
  
g12_test(doc) -> [{userdata,[{""}]}];
g12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,false},read_from_excel_data(Config,{11,6})]),
  test_util:expected2(read_from_excel_data(Config,{11,6}), {boolean,false}).
  
g13_test(doc) -> [{userdata,[{""}]}];
g13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,false},read_from_excel_data(Config,{12,6})]),
  test_util:expected2(read_from_excel_data(Config,{12,6}), {boolean,false}).
  
g14_test(doc) -> [{userdata,[{""}]}];
g14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"false"},read_from_excel_data(Config,{13,6})]),
  test_util:expected2(read_from_excel_data(Config,{13,6}), {string,"false"}).
  
g15_test(doc) -> [{userdata,[{""}]}];
g15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{boolean,true},read_from_excel_data(Config,{14,6})]),
  test_util:expected2(read_from_excel_data(Config,{14,6}), {boolean,true}).
  
h16_test(doc) -> [{userdata,[{""}]}];
h16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(AND(B16=C16,D16=E16,F16=G16),1,0)"},read_from_excel_data(Config,{15,7})]),
  test_util:expected2(read_from_excel_data(Config,{15,7}), {formula,"=IF(AND(B16=C16,D16=E16,F16=G16),1,0)"}).
  
h11_test(doc) -> [{userdata,[{""}]}];
h11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Status"},read_from_excel_data(Config,{10,7})]),
  test_util:expected2(read_from_excel_data(Config,{10,7}), {string,"Status"}).
  
h17_test(doc) -> [{userdata,[{""}]}];
h17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(AND(B17=C17,D17=E17,F17=G17),1,0)"},read_from_excel_data(Config,{16,7})]),
  test_util:expected2(read_from_excel_data(Config,{16,7}), {formula,"=IF(AND(B17=C17,D17=E17,F17=G17),1,0)"}).
  
h12_test(doc) -> [{userdata,[{""}]}];
h12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(AND(B12=C12,D12=E12,F12=G12),1,0)"},read_from_excel_data(Config,{11,7})]),
  test_util:expected2(read_from_excel_data(Config,{11,7}), {formula,"=IF(AND(B12=C12,D12=E12,F12=G12),1,0)"}).
  
h13_test(doc) -> [{userdata,[{""}]}];
h13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(AND(B13=C13,D13=E13,F13=G13),1,0)"},read_from_excel_data(Config,{12,7})]),
  test_util:expected2(read_from_excel_data(Config,{12,7}), {formula,"=IF(AND(B13=C13,D13=E13,F13=G13),1,0)"}).
  
h14_test(doc) -> [{userdata,[{""}]}];
h14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(AND(B14=C14,D14=E14,F14=G14),1,0)"},read_from_excel_data(Config,{13,7})]),
  test_util:expected2(read_from_excel_data(Config,{13,7}), {formula,"=IF(AND(B14=C14,D14=E14,F14=G14),1,0)"}).
  
h15_test(doc) -> [{userdata,[{""}]}];
h15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1.0},read_from_excel_data(Config,{14,7})]),
  test_util:expected2(read_from_excel_data(Config,{14,7}), {number,1.0}).
  
i16_test(doc) -> [{userdata,[{""}]}];
i16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(H16,\"Ok.\",\"FAILED!!\")"},read_from_excel_data(Config,{15,8})]),
  test_util:expected2(read_from_excel_data(Config,{15,8}), {formula,"=IF(H16,\"Ok.\",\"FAILED!!\")"}).
  
i11_test(doc) -> [{userdata,[{""}]}];
i11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Status message"},read_from_excel_data(Config,{10,8})]),
  test_util:expected2(read_from_excel_data(Config,{10,8}), {string,"Status message"}).
  
i17_test(doc) -> [{userdata,[{""}]}];
i17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(H17,\"Ok.\",\"FAILED!!\")"},read_from_excel_data(Config,{16,8})]),
  test_util:expected2(read_from_excel_data(Config,{16,8}), {formula,"=IF(H17,\"Ok.\",\"FAILED!!\")"}).
  
i12_test(doc) -> [{userdata,[{""}]}];
i12_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(H12,\"Ok.\",\"FAILED!!\")"},read_from_excel_data(Config,{11,8})]),
  test_util:expected2(read_from_excel_data(Config,{11,8}), {formula,"=IF(H12,\"Ok.\",\"FAILED!!\")"}).
  
i13_test(doc) -> [{userdata,[{""}]}];
i13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(H13,\"Ok.\",\"FAILED!!\")"},read_from_excel_data(Config,{12,8})]),
  test_util:expected2(read_from_excel_data(Config,{12,8}), {formula,"=IF(H13,\"Ok.\",\"FAILED!!\")"}).
  
i14_test(doc) -> [{userdata,[{""}]}];
i14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(H14,\"Ok.\",\"FAILED!!\")"},read_from_excel_data(Config,{13,8})]),
  test_util:expected2(read_from_excel_data(Config,{13,8}), {formula,"=IF(H14,\"Ok.\",\"FAILED!!\")"}).
  
i15_test(doc) -> [{userdata,[{""}]}];
i15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=IF(H15,\"Ok.\",\"FAILED!!\")"},read_from_excel_data(Config,{14,8})]),
  test_util:expected2(read_from_excel_data(Config,{14,8}), {formula,"=IF(H15,\"Ok.\",\"FAILED!!\")"}).
  
all() -> 
    [a16_test,
   a11_test,
   a17_test,
   a1_test,
   a12_test,
   a7_test,
   a18_test,
   a13_test,
   a8_test,
   a3_test,
   a14_test,
   a4_test,
   a15_test,
   b16_test,
   b11_test,
   b17_test,
   b12_test,
   b7_test,
   b13_test,
   b8_test,
   b14_test,
   b15_test,
   c16_test,
   c11_test,
   c17_test,
   c12_test,
   c13_test,
   c14_test,
   c15_test,
   d16_test,
   d11_test,
   d17_test,
   d12_test,
   d13_test,
   d14_test,
   d15_test,
   e16_test,
   e11_test,
   e17_test,
   e12_test,
   e13_test,
   e14_test,
   e15_test,
   f16_test,
   f11_test,
   f17_test,
   f12_test,
   f13_test,
   f14_test,
   f15_test,
   g16_test,
   g11_test,
   g17_test,
   g12_test,
   g13_test,
   g14_test,
   g15_test,
   h16_test,
   h11_test,
   h17_test,
   h12_test,
   h13_test,
   h14_test,
   h15_test,
   i16_test,
   i11_test,
   i17_test,
   i12_test,
   i13_test,
   i14_test,
   i15_test
    ].
  
