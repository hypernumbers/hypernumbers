% This module has been generated by generatetest.rb
% DO NOT EDIT MANUALLY.
%
% Source file: sum_with_one_arg.xls
% Generated on: Sat Jan 26 01:08:40 +0000 2008

-module(sum_with_one_arg_SUITE).
-compile(export_all).
-include("ct.hrl").


init_per_suite(Config) ->
    code:add_patha("../../../../../ebin"),
    production_boot:setup_paths(),
    Data = test_util:read_excel_file("/Win Excel 2007 (as 97)/sum_with_one_arg.xls"),
    %% io:format("in init_per_suite Data is ~p~n",[Data]),
    lists:merge([Config, [{sum_with_one_arg_SUITE, Data}]]).
  
end_per_suite(_Config) ->
    ok.
  
init_per_testcase(_TestCase, Config) -> Config.

end_per_testcase(_TestCase, _Config) -> ok.

read_from_excel_data(Config, {Row,Col}) ->
    {value, Result} = lists:keysearch(sum_with_one_arg_SUITE, 1, Config),
    Data = element(2, Result),
    Key={{row_index,Row},{col_index,Col}},
    {value, Result2} = lists:keysearch(Key, 1, Data),
    El=element(2, Result2),
    %% io:format("El is ~p~n",[El]),
    case El of
        {value, number, Number} -> {number,Number};
        {string,String}         -> {string,String};
        {formula,Formula}       -> {formula,Formula};
        {value,boolean,Boolean} -> {boolean,Boolean};
        {value,error,Error}     -> {error, Error};
        Other                   -> io:format("(in generatetest.rb - fix me Other is ~p~n",[Other])
    end.

a5_test(doc) -> [{userdata,[{""}]}];
a5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(B5)"},read_from_excel_data(Config,{4,0})]),
  test_util:expected2(read_from_excel_data(Config,{4,0}), {formula,"=SUM(B5)"}).
  
a16_test(doc) -> [{userdata,[{""}]}];
a16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Multiply nested functions"},read_from_excel_data(Config,{15,0})]),
  test_util:expected2(read_from_excel_data(Config,{15,0}), {string,"Multiply nested functions"}).
  
a11_test(doc) -> [{userdata,[{""}]}];
a11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(B11:C11 D11:E11,F11:H11)"},read_from_excel_data(Config,{10,0})]),
  test_util:expected2(read_from_excel_data(Config,{10,0}), {formula,"=SUM(B11:C11 D11:E11,F11:H11)"}).
  
a6_test(doc) -> [{userdata,[{""}]}];
a6_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM({1})"},read_from_excel_data(Config,{5,0})]),
  test_util:expected2(read_from_excel_data(Config,{5,0}), {formula,"=SUM({1})"}).
  
a17_test(doc) -> [{userdata,[{""}]}];
a17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Multiply nested functions"},read_from_excel_data(Config,{16,0})]),
  test_util:expected2(read_from_excel_data(Config,{16,0}), {string,"Multiply nested functions"}).
  
a1_test(doc) -> [{userdata,[{""}]}];
a1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Special Test For Sum With 1 Parameter"},read_from_excel_data(Config,{0,0})]),
  test_util:expected2(read_from_excel_data(Config,{0,0}), {string,"Special Test For Sum With 1 Parameter"}).
  
a7_test(doc) -> [{userdata,[{""}]}];
a7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM({1,2,3,4})"},read_from_excel_data(Config,{6,0})]),
  test_util:expected2(read_from_excel_data(Config,{6,0}), {formula,"=SUM({1,2,3,4})"}).
  
a18_test(doc) -> [{userdata,[{""}]}];
a18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Multiply nested functions"},read_from_excel_data(Config,{17,0})]),
  test_util:expected2(read_from_excel_data(Config,{17,0}), {string,"Multiply nested functions"}).
  
a2_test(doc) -> [{userdata,[{""}]}];
a2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"See Section 3.10 of the excelfileformat.v1.40.pdf"},read_from_excel_data(Config,{1,0})]),
  test_util:expected2(read_from_excel_data(Config,{1,0}), {string,"See Section 3.10 of the excelfileformat.v1.40.pdf"}).
  
a13_test(doc) -> [{userdata,[{""}]}];
a13_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"SUM is a special fn"},read_from_excel_data(Config,{12,0})]),
  test_util:expected2(read_from_excel_data(Config,{12,0}), {string,"SUM is a special fn"}).
  
a8_test(doc) -> [{userdata,[{""}]}];
a8_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(1+2)"},read_from_excel_data(Config,{7,0})]),
  test_util:expected2(read_from_excel_data(Config,{7,0}), {formula,"=SUM(1+2)"}).
  
a19_test(doc) -> [{userdata,[{""}]}];
a19_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Multiply nested functions"},read_from_excel_data(Config,{18,0})]),
  test_util:expected2(read_from_excel_data(Config,{18,0}), {string,"Multiply nested functions"}).
  
a3_test(doc) -> [{userdata,[{""}]}];
a3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"When sum has a single parameter is is converted into an attribute token"},read_from_excel_data(Config,{2,0})]),
  test_util:expected2(read_from_excel_data(Config,{2,0}), {string,"When sum has a single parameter is is converted into an attribute token"}).
  
a14_test(doc) -> [{userdata,[{""}]}];
a14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Argument with operators"},read_from_excel_data(Config,{13,0})]),
  test_util:expected2(read_from_excel_data(Config,{13,0}), {string,"Argument with operators"}).
  
a9_test(doc) -> [{userdata,[{""}]}];
a9_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(B9:C9)"},read_from_excel_data(Config,{8,0})]),
  test_util:expected2(read_from_excel_data(Config,{8,0}), {formula,"=SUM(B9:C9)"}).
  
a20_test(doc) -> [{userdata,[{""}]}];
a20_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Multiply nested functions"},read_from_excel_data(Config,{19,0})]),
  test_util:expected2(read_from_excel_data(Config,{19,0}), {string,"Multiply nested functions"}).
  
a4_test(doc) -> [{userdata,[{""}]}];
a4_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(1)"},read_from_excel_data(Config,{3,0})]),
  test_util:expected2(read_from_excel_data(Config,{3,0}), {formula,"=SUM(1)"}).
  
a15_test(doc) -> [{userdata,[{""}]}];
a15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Single nested functions"},read_from_excel_data(Config,{14,0})]),
  test_util:expected2(read_from_excel_data(Config,{14,0}), {string,"Single nested functions"}).
  
a10_test(doc) -> [{userdata,[{""}]}];
a10_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(B10:C10 C10:E10,F10:H10)"},read_from_excel_data(Config,{9,0})]),
  test_util:expected2(read_from_excel_data(Config,{9,0}), {formula,"=SUM(B10:C10 C10:E10,F10:H10)"}).
  
a21_test(doc) -> [{userdata,[{""}]}];
a21_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Multiply nested functions"},read_from_excel_data(Config,{20,0})]),
  test_util:expected2(read_from_excel_data(Config,{20,0}), {string,"Multiply nested functions"}).
  
b5_test(doc) -> [{userdata,[{""}]}];
b5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,4.0},read_from_excel_data(Config,{4,1})]),
  test_util:expected2(read_from_excel_data(Config,{4,1}), {number,4.0}).
  
b16_test(doc) -> [{userdata,[{""}]}];
b16_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(SUM(SUM(5,6,7)+5-SUM(3),4)-SUM(4,5))"},read_from_excel_data(Config,{15,1})]),
  test_util:expected2(read_from_excel_data(Config,{15,1}), {formula,"=SUM(SUM(SUM(5,6,7)+5-SUM(3),4)-SUM(4,5))"}).
  
b11_test(doc) -> [{userdata,[{""}]}];
b11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1.0},read_from_excel_data(Config,{10,1})]),
  test_util:expected2(read_from_excel_data(Config,{10,1}), {number,1.0}).
  
b17_test(doc) -> [{userdata,[{""}]}];
b17_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(SUM(5,6,7)+8-9,4)"},read_from_excel_data(Config,{16,1})]),
  test_util:expected2(read_from_excel_data(Config,{16,1}), {formula,"=SUM(SUM(5,6,7)+8-9,4)"}).
  
b18_test(doc) -> [{userdata,[{""}]}];
b18_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(SUM(5,6,7)+SUM(1)-9,4)"},read_from_excel_data(Config,{17,1})]),
  test_util:expected2(read_from_excel_data(Config,{17,1}), {formula,"=SUM(SUM(5,6,7)+SUM(1)-9,4)"}).
  
b19_test(doc) -> [{userdata,[{""}]}];
b19_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(SUM(5,6,7)+SUM(1),4)"},read_from_excel_data(Config,{18,1})]),
  test_util:expected2(read_from_excel_data(Config,{18,1}), {formula,"=SUM(SUM(5,6,7)+SUM(1),4)"}).
  
b14_test(doc) -> [{userdata,[{""}]}];
b14_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(1+2,(3*5+4))"},read_from_excel_data(Config,{13,1})]),
  test_util:expected2(read_from_excel_data(Config,{13,1}), {formula,"=SUM(1+2,(3*5+4))"}).
  
b9_test(doc) -> [{userdata,[{""}]}];
b9_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1.0},read_from_excel_data(Config,{8,1})]),
  test_util:expected2(read_from_excel_data(Config,{8,1}), {number,1.0}).
  
b20_test(doc) -> [{userdata,[{""}]}];
b20_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(SUM(5,6,7)+SUM(1))"},read_from_excel_data(Config,{19,1})]),
  test_util:expected2(read_from_excel_data(Config,{19,1}), {formula,"=SUM(SUM(5,6,7)+SUM(1))"}).
  
b15_test(doc) -> [{userdata,[{""}]}];
b15_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(SUM(3,4)-SUM(4,5))"},read_from_excel_data(Config,{14,1})]),
  test_util:expected2(read_from_excel_data(Config,{14,1}), {formula,"=SUM(SUM(3,4)-SUM(4,5))"}).
  
b10_test(doc) -> [{userdata,[{""}]}];
b10_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1.0},read_from_excel_data(Config,{9,1})]),
  test_util:expected2(read_from_excel_data(Config,{9,1}), {number,1.0}).
  
b21_test(doc) -> [{userdata,[{""}]}];
b21_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM(2+SUM(1))"},read_from_excel_data(Config,{20,1})]),
  test_util:expected2(read_from_excel_data(Config,{20,1}), {formula,"=SUM(2+SUM(1))"}).
  
c11_test(doc) -> [{userdata,[{""}]}];
c11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,2.0},read_from_excel_data(Config,{10,2})]),
  test_util:expected2(read_from_excel_data(Config,{10,2}), {number,2.0}).
  
c9_test(doc) -> [{userdata,[{""}]}];
c9_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,2.0},read_from_excel_data(Config,{8,2})]),
  test_util:expected2(read_from_excel_data(Config,{8,2}), {number,2.0}).
  
c10_test(doc) -> [{userdata,[{""}]}];
c10_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,2.0},read_from_excel_data(Config,{9,2})]),
  test_util:expected2(read_from_excel_data(Config,{9,2}), {number,2.0}).
  
d11_test(doc) -> [{userdata,[{""}]}];
d11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,3.0},read_from_excel_data(Config,{10,3})]),
  test_util:expected2(read_from_excel_data(Config,{10,3}), {number,3.0}).
  
d10_test(doc) -> [{userdata,[{""}]}];
d10_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,3.0},read_from_excel_data(Config,{9,3})]),
  test_util:expected2(read_from_excel_data(Config,{9,3}), {number,3.0}).
  
e11_test(doc) -> [{userdata,[{""}]}];
e11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,4.0},read_from_excel_data(Config,{10,4})]),
  test_util:expected2(read_from_excel_data(Config,{10,4}), {number,4.0}).
  
e10_test(doc) -> [{userdata,[{""}]}];
e10_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,4.0},read_from_excel_data(Config,{9,4})]),
  test_util:expected2(read_from_excel_data(Config,{9,4}), {number,4.0}).
  
f11_test(doc) -> [{userdata,[{""}]}];
f11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,5.0},read_from_excel_data(Config,{10,5})]),
  test_util:expected2(read_from_excel_data(Config,{10,5}), {number,5.0}).
  
f10_test(doc) -> [{userdata,[{""}]}];
f10_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,5.0},read_from_excel_data(Config,{9,5})]),
  test_util:expected2(read_from_excel_data(Config,{9,5}), {number,5.0}).
  
g11_test(doc) -> [{userdata,[{""}]}];
g11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,6.0},read_from_excel_data(Config,{10,6})]),
  test_util:expected2(read_from_excel_data(Config,{10,6}), {number,6.0}).
  
g10_test(doc) -> [{userdata,[{""}]}];
g10_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,6.0},read_from_excel_data(Config,{9,6})]),
  test_util:expected2(read_from_excel_data(Config,{9,6}), {number,6.0}).
  
h11_test(doc) -> [{userdata,[{""}]}];
h11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,7.0},read_from_excel_data(Config,{10,7})]),
  test_util:expected2(read_from_excel_data(Config,{10,7}), {number,7.0}).
  
h10_test(doc) -> [{userdata,[{""}]}];
h10_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,7.0},read_from_excel_data(Config,{9,7})]),
  test_util:expected2(read_from_excel_data(Config,{9,7}), {number,7.0}).
  
i11_test(doc) -> [{userdata,[{""}]}];
i11_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,8.0},read_from_excel_data(Config,{10,8})]),
  test_util:expected2(read_from_excel_data(Config,{10,8}), {number,8.0}).
  
i10_test(doc) -> [{userdata,[{""}]}];
i10_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,8.0},read_from_excel_data(Config,{9,8})]),
  test_util:expected2(read_from_excel_data(Config,{9,8}), {number,8.0}).
  
all() -> 
    [a5_test,
   a16_test,
   a11_test,
   a6_test,
   a17_test,
   a1_test,
   a7_test,
   a18_test,
   a2_test,
   a13_test,
   a8_test,
   a19_test,
   a3_test,
   a14_test,
   a9_test,
   a20_test,
   a4_test,
   a15_test,
   a10_test,
   a21_test,
   b5_test,
   b16_test,
   b11_test,
   b17_test,
   b18_test,
   b19_test,
   b14_test,
   b9_test,
   b20_test,
   b15_test,
   b10_test,
   b21_test,
   c11_test,
   c9_test,
   c10_test,
   d11_test,
   d10_test,
   e11_test,
   e10_test,
   f11_test,
   f10_test,
   g11_test,
   g10_test,
   h11_test,
   h10_test,
   i11_test,
   i10_test
    ].
  
