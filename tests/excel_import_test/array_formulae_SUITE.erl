% This module has been generated by generatetest.rb
% DO NOT EDIT MANUALLY.
%
% Source file: array_formulae.xls
% Generated on: Sat Jan 26 01:08:45 +0000 2008

-module(array_formulae_SUITE).
-compile(export_all).
-include("ct.hrl").


init_per_suite(Config) ->
    code:add_patha("../../../../../ebin"),
    production_boot:setup_paths(),
    Data = test_util:read_excel_file("/Win Excel 2007 (as 97)/array_formulae.xls"),
    %% io:format("in init_per_suite Data is ~p~n",[Data]),
    lists:merge([Config, [{array_formulae_SUITE, Data}]]).
  
end_per_suite(_Config) ->
    ok.
  
init_per_testcase(_TestCase, Config) -> Config.

end_per_testcase(_TestCase, _Config) -> ok.

read_from_excel_data(Config, {Row,Col}) ->
    {value, Result} = lists:keysearch(array_formulae_SUITE, 1, Config),
    Data = element(2, Result),
    Key={{row_index,Row},{col_index,Col}},
    {value, Result2} = lists:keysearch(Key, 1, Data),
    El=element(2, Result2),
    %% io:format("El is ~p~n",[El]),
    case El of
        {value, number, Number} -> {number,Number};
        {string,String}         -> {string,String};
        {formula,Formula}       -> {formula,Formula};
        {value,boolean,Boolean} -> {boolean,Boolean};
        {value,error,Error}     -> {error, Error};
        Other                   -> io:format("(in generatetest.rb - fix me Other is ~p~n",[Other])
    end.

a5_test(doc) -> [{userdata,[{""}]}];
a5_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Functions with arrays"},read_from_excel_data(Config,{4,0})]),
  test_util:expected2(read_from_excel_data(Config,{4,0}), {string,"Functions with arrays"}).
  
a6_test(doc) -> [{userdata,[{""}]}];
a6_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"1D Sum"},read_from_excel_data(Config,{5,0})]),
  test_util:expected2(read_from_excel_data(Config,{5,0}), {string,"1D Sum"}).
  
a1_test(doc) -> [{userdata,[{""}]}];
a1_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Array Formulae"},read_from_excel_data(Config,{0,0})]),
  test_util:expected2(read_from_excel_data(Config,{0,0}), {string,"Array Formulae"}).
  
a7_test(doc) -> [{userdata,[{""}]}];
a7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Aysmmetric 2D Sum"},read_from_excel_data(Config,{6,0})]),
  test_util:expected2(read_from_excel_data(Config,{6,0}), {string,"Aysmmetric 2D Sum"}).
  
a2_test(doc) -> [{userdata,[{""}]}];
a2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"2 cell array"},read_from_excel_data(Config,{1,0})]),
  test_util:expected2(read_from_excel_data(Config,{1,0}), {string,"2 cell array"}).
  
b6_test(doc) -> [{userdata,[{""}]}];
b6_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM({1,2,3})"},read_from_excel_data(Config,{5,1})]),
  test_util:expected2(read_from_excel_data(Config,{5,1}), {formula,"=SUM({1,2,3})"}).
  
b7_test(doc) -> [{userdata,[{""}]}];
b7_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=SUM({1,2;3,4;5,6;7,8})"},read_from_excel_data(Config,{6,1})]),
  test_util:expected2(read_from_excel_data(Config,{6,1}), {formula,"=SUM({1,2;3,4;5,6;7,8})"}).
  
b2_test(doc) -> [{userdata,[{""}]}];
b2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=D2:D3*E2:E3"},read_from_excel_data(Config,{1,1})]),
  test_util:expected2(read_from_excel_data(Config,{1,1}), {formula,"=D2:D3*E2:E3"}).
  
b3_test(doc) -> [{userdata,[{""}]}];
b3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{formula,"=D2:D3*E2:E3"},read_from_excel_data(Config,{2,1})]),
  test_util:expected2(read_from_excel_data(Config,{2,1}), {formula,"=D2:D3*E2:E3"}).
  
c2_test(doc) -> [{userdata,[{""}]}];
c2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{string,"Data->"},read_from_excel_data(Config,{1,2})]),
  test_util:expected2(read_from_excel_data(Config,{1,2}), {string,"Data->"}).
  
d2_test(doc) -> [{userdata,[{""}]}];
d2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,1.0},read_from_excel_data(Config,{1,3})]),
  test_util:expected2(read_from_excel_data(Config,{1,3}), {number,1.0}).
  
d3_test(doc) -> [{userdata,[{""}]}];
d3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,3.0},read_from_excel_data(Config,{2,3})]),
  test_util:expected2(read_from_excel_data(Config,{2,3}), {number,3.0}).
  
e2_test(doc) -> [{userdata,[{""}]}];
e2_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,2.0},read_from_excel_data(Config,{1,4})]),
  test_util:expected2(read_from_excel_data(Config,{1,4}), {number,2.0}).
  
e3_test(doc) -> [{userdata,[{""}]}];
e3_test(Config) -> 
  io:format("Expected : ~p~nGot      : ~p~n",[{number,4.0},read_from_excel_data(Config,{2,4})]),
  test_util:expected2(read_from_excel_data(Config,{2,4}), {number,4.0}).
  
all() -> 
    [a5_test,
   a6_test,
   a1_test,
   a7_test,
   a2_test,
   b6_test,
   b7_test,
   b2_test,
   b3_test,
   c2_test,
   d2_test,
   d3_test,
   e2_test,
   e3_test
    ].
  
