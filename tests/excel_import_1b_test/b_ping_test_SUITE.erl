% This module has been generated by gen_rev_comp_test.rb
% DO NOT EDIT MANUALLY.
%
% Source file: b_ping.xls
% Generated on: Tue Mar 11 09:09:59 +0000 2008

-module(b_ping_test_SUITE).
-compile(export_all).
-include("ct.hrl").


init_per_suite(Config) ->
    code:add_patha("../../../../../ebin"),
    production_boot:setup_paths(),
    Data = test_util:read_excel_file("../../../../excel_files/Win Excel 2007 (as 97)/b_ping.xls"),
    %% io:format("in init_per_suite Data is ~p~n",[Data]),
    Pid=spawn(test_util,test_state,[Data]),
    io:format("in init_per_suite Pid is ~p~n",[Pid]),
    [{?MODULE,Pid}|Config].
  
end_per_suite(_Config) ->
    ok.
  
init_per_testcase(_TestCase, Config) -> Config.

end_per_testcase(_TestCase, _Config) -> ok.

read_from_excel_data(Config,{Sheet,Row,Col}) ->
  test_util:read_from_excel_data(Config,b_ping_test_SUITE,{Sheet,Row,Col}).

ping_sheet1_b5_test(doc) -> [{userdata,[{""}]}];
ping_sheet1_b5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"Ping_Sheet1",4,1}]),
  Pid ! {msg,self(),?MODULE,{"Ping_Sheet1",4,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=SUM('c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pong.xls]Pong Sheet3'!$A$2:$A$6)"}]),
      test_util:expected2(Msg, {formula,"=SUM('c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pong.xls]Pong Sheet3'!$A$2:$A$6)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
ping_sheet1_b11_test(doc) -> [{userdata,[{""}]}];
ping_sheet1_b11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"Ping_Sheet1",10,1}]),
  Pid ! {msg,self(),?MODULE,{"Ping_Sheet1",10,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=SUM(Ping_Sheet2!A2:A5)"}]),
      test_util:expected2(Msg, {formula,"=SUM(Ping_Sheet2!A2:A5)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
ping_sheet1_b6_test(doc) -> [{userdata,[{""}]}];
ping_sheet1_b6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"Ping_Sheet1",5,1}]),
  Pid ! {msg,self(),?MODULE,{"Ping_Sheet1",5,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pang.xls]Pang Sheet1'!$A$2"}]),
      test_util:expected2(Msg, {formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pang.xls]Pang Sheet1'!$A$2"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
ping_sheet1_b12_test(doc) -> [{userdata,[{""}]}];
ping_sheet1_b12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"Ping_Sheet1",11,1}]),
  Pid ! {msg,self(),?MODULE,{"Ping_Sheet1",11,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=SUM(Ping_Sheet2:Ping_Sheet3!A8)"}]),
      test_util:expected2(Msg, {formula,"=SUM(Ping_Sheet2:Ping_Sheet3!A8)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
ping_sheet1_b7_test(doc) -> [{userdata,[{""}]}];
ping_sheet1_b7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"Ping_Sheet1",6,1}]),
  Pid ! {msg,self(),?MODULE,{"Ping_Sheet1",6,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pang.xls]Pang Sheet2'!$A$1"}]),
      test_util:expected2(Msg, {formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pang.xls]Pang Sheet2'!$A$1"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
ping_sheet1_b2_test(doc) -> [{userdata,[{""}]}];
ping_sheet1_b2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"Ping_Sheet1",1,1}]),
  Pid ! {msg,self(),?MODULE,{"Ping_Sheet1",1,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pong.xls]Pong Sheet1'!$A$2"}]),
      test_util:expected2(Msg, {formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pong.xls]Pong Sheet1'!$A$2"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
ping_sheet1_b8_test(doc) -> [{userdata,[{""}]}];
ping_sheet1_b8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"Ping_Sheet1",7,1}]),
  Pid ! {msg,self(),?MODULE,{"Ping_Sheet1",7,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pang.xls]Pang Sheet3'!$A$1"}]),
      test_util:expected2(Msg, {formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pang.xls]Pang Sheet3'!$A$1"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
ping_sheet1_b3_test(doc) -> [{userdata,[{""}]}];
ping_sheet1_b3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"Ping_Sheet1",2,1}]),
  Pid ! {msg,self(),?MODULE,{"Ping_Sheet1",2,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pong.xls]Pong Sheet2'!$A$1"}]),
      test_util:expected2(Msg, {formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pong.xls]Pong Sheet2'!$A$1"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
ping_sheet1_b9_test(doc) -> [{userdata,[{""}]}];
ping_sheet1_b9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"Ping_Sheet1",8,1}]),
  Pid ! {msg,self(),?MODULE,{"Ping_Sheet1",8,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pang.xls]Pang Sheet1'!$A$6"}]),
      test_util:expected2(Msg, {formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pang.xls]Pang Sheet1'!$A$6"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
ping_sheet1_b4_test(doc) -> [{userdata,[{""}]}];
ping_sheet1_b4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"Ping_Sheet1",3,1}]),
  Pid ! {msg,self(),?MODULE,{"Ping_Sheet1",3,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pong.xls]Pong Sheet3'!$A$1"}]),
      test_util:expected2(Msg, {formula,"='c:\opt\code\trunk\tests\excel_files\Win Excel 2007 (as 97)\[b_pong.xls]Pong Sheet3'!$A$1"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
ping_sheet1_b10_test(doc) -> [{userdata,[{""}]}];
ping_sheet1_b10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"Ping_Sheet1",9,1}]),
  Pid ! {msg,self(),?MODULE,{"Ping_Sheet1",9,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=Ping_Sheet2!A1"}]),
      test_util:expected2(Msg, {formula,"=Ping_Sheet2!A1"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
all() -> 
    [ping_sheet1_b5_test,
   ping_sheet1_b11_test,
   ping_sheet1_b6_test,
   ping_sheet1_b12_test,
   ping_sheet1_b7_test,
   ping_sheet1_b2_test,
   ping_sheet1_b8_test,
   ping_sheet1_b3_test,
   ping_sheet1_b9_test,
   ping_sheet1_b4_test,
   ping_sheet1_b10_test
    ].
  
