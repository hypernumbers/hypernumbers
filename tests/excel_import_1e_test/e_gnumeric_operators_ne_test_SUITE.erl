% This module has been generated by gen_rev_comp_test.rb
% DO NOT EDIT MANUALLY.
%
% Source file: e_gnumeric_operators_ne.xls
% Generated on: Mon Feb 25 21:57:06 +0000 2008

-module(e_gnumeric_operators_ne_test_SUITE).
-compile(export_all).
-include("ct.hrl").


init_per_suite(Config) ->
    code:add_patha("../../../../../ebin"),
    production_boot:setup_paths(),
    Data = test_util:read_excel_file("/Win Excel 2007 (as 97)/e_gnumeric_operators_ne.xls"),
    %% io:format("in init_per_suite Data is ~p~n",[Data]),
    Pid=spawn(test_util,test_state,[Data]),
    io:format("in init_per_suite Pid is ~p~n",[Pid]),
    [{?MODULE,Pid}|Config].
  
end_per_suite(_Config) ->
    ok.
  
init_per_testcase(_TestCase, Config) -> Config.

end_per_testcase(_TestCase, _Config) -> ok.

read_from_excel_data(Config,{Sheet,Row,Col}) ->
  test_util:read_from_excel_data(Config,e_gnumeric_operators_ne_test_SUITE,{Sheet,Row,Col}).

not_equal_k5_test(doc) -> [{userdata,[{""}]}];
not_equal_k5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k16_test(doc) -> [{userdata,[{""}]}];
not_equal_k16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k27_test(doc) -> [{userdata,[{""}]}];
not_equal_k27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k38_test(doc) -> [{userdata,[{""}]}];
not_equal_k38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k49_test(doc) -> [{userdata,[{""}]}];
not_equal_k49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K27),IF(ISERROR(K5),IF(ERROR.TYPE(K27)=ERROR.TYPE(K5),1,0),0),IF(ISERROR(K5),0,IF(K27=K5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K27),IF(ISERROR(K5),IF(ERROR.TYPE(K27)=ERROR.TYPE(K5),1,0),0),IF(ISERROR(K5),0,IF(K27=K5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k60_test(doc) -> [{userdata,[{""}]}];
not_equal_k60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K38),IF(ISERROR(K16),IF(ERROR.TYPE(K38)=ERROR.TYPE(K16),1,0),0),IF(ISERROR(K16),0,IF(K38=K16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K38),IF(ISERROR(K16),IF(ERROR.TYPE(K38)=ERROR.TYPE(K16),1,0),0),IF(ISERROR(K16),0,IF(K38=K16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k11_test(doc) -> [{userdata,[{""}]}];
not_equal_k11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k22_test(doc) -> [{userdata,[{""}]}];
not_equal_k22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k33_test(doc) -> [{userdata,[{""}]}];
not_equal_k33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k44_test(doc) -> [{userdata,[{""}]}];
not_equal_k44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k55_test(doc) -> [{userdata,[{""}]}];
not_equal_k55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K33),IF(ISERROR(K11),IF(ERROR.TYPE(K33)=ERROR.TYPE(K11),1,0),0),IF(ISERROR(K11),0,IF(K33=K11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K33),IF(ISERROR(K11),IF(ERROR.TYPE(K33)=ERROR.TYPE(K11),1,0),0),IF(ISERROR(K11),0,IF(K33=K11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k66_test(doc) -> [{userdata,[{""}]}];
not_equal_k66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K44),IF(ISERROR(K22),IF(ERROR.TYPE(K44)=ERROR.TYPE(K22),1,0),0),IF(ISERROR(K22),0,IF(K44=K22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K44),IF(ISERROR(K22),IF(ERROR.TYPE(K44)=ERROR.TYPE(K22),1,0),0),IF(ISERROR(K22),0,IF(K44=K22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k6_test(doc) -> [{userdata,[{""}]}];
not_equal_k6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k17_test(doc) -> [{userdata,[{""}]}];
not_equal_k17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k28_test(doc) -> [{userdata,[{""}]}];
not_equal_k28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k39_test(doc) -> [{userdata,[{""}]}];
not_equal_k39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k50_test(doc) -> [{userdata,[{""}]}];
not_equal_k50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K28),IF(ISERROR(K6),IF(ERROR.TYPE(K28)=ERROR.TYPE(K6),1,0),0),IF(ISERROR(K6),0,IF(K28=K6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K28),IF(ISERROR(K6),IF(ERROR.TYPE(K28)=ERROR.TYPE(K6),1,0),0),IF(ISERROR(K6),0,IF(K28=K6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k61_test(doc) -> [{userdata,[{""}]}];
not_equal_k61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K39),IF(ISERROR(K17),IF(ERROR.TYPE(K39)=ERROR.TYPE(K17),1,0),0),IF(ISERROR(K17),0,IF(K39=K17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K39),IF(ISERROR(K17),IF(ERROR.TYPE(K39)=ERROR.TYPE(K17),1,0),0),IF(ISERROR(K17),0,IF(K39=K17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k1_test(doc) -> [{userdata,[{""}]}];
not_equal_k1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k12_test(doc) -> [{userdata,[{""}]}];
not_equal_k12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k34_test(doc) -> [{userdata,[{""}]}];
not_equal_k34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k56_test(doc) -> [{userdata,[{""}]}];
not_equal_k56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K34),IF(ISERROR(K12),IF(ERROR.TYPE(K34)=ERROR.TYPE(K12),1,0),0),IF(ISERROR(K12),0,IF(K34=K12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K34),IF(ISERROR(K12),IF(ERROR.TYPE(K34)=ERROR.TYPE(K12),1,0),0),IF(ISERROR(K12),0,IF(K34=K12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k7_test(doc) -> [{userdata,[{""}]}];
not_equal_k7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k18_test(doc) -> [{userdata,[{""}]}];
not_equal_k18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k29_test(doc) -> [{userdata,[{""}]}];
not_equal_k29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k40_test(doc) -> [{userdata,[{""}]}];
not_equal_k40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k51_test(doc) -> [{userdata,[{""}]}];
not_equal_k51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K29),IF(ISERROR(K7),IF(ERROR.TYPE(K29)=ERROR.TYPE(K7),1,0),0),IF(ISERROR(K7),0,IF(K29=K7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K29),IF(ISERROR(K7),IF(ERROR.TYPE(K29)=ERROR.TYPE(K7),1,0),0),IF(ISERROR(K7),0,IF(K29=K7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k62_test(doc) -> [{userdata,[{""}]}];
not_equal_k62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K40),IF(ISERROR(K18),IF(ERROR.TYPE(K40)=ERROR.TYPE(K18),1,0),0),IF(ISERROR(K18),0,IF(K40=K18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K40),IF(ISERROR(K18),IF(ERROR.TYPE(K40)=ERROR.TYPE(K18),1,0),0),IF(ISERROR(K18),0,IF(K40=K18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k2_test(doc) -> [{userdata,[{""}]}];
not_equal_k2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k13_test(doc) -> [{userdata,[{""}]}];
not_equal_k13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k35_test(doc) -> [{userdata,[{""}]}];
not_equal_k35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k57_test(doc) -> [{userdata,[{""}]}];
not_equal_k57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K35),IF(ISERROR(K13),IF(ERROR.TYPE(K35)=ERROR.TYPE(K13),1,0),0),IF(ISERROR(K13),0,IF(K35=K13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K35),IF(ISERROR(K13),IF(ERROR.TYPE(K35)=ERROR.TYPE(K13),1,0),0),IF(ISERROR(K13),0,IF(K35=K13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k8_test(doc) -> [{userdata,[{""}]}];
not_equal_k8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k19_test(doc) -> [{userdata,[{""}]}];
not_equal_k19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k30_test(doc) -> [{userdata,[{""}]}];
not_equal_k30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k41_test(doc) -> [{userdata,[{""}]}];
not_equal_k41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k52_test(doc) -> [{userdata,[{""}]}];
not_equal_k52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K30),IF(ISERROR(K8),IF(ERROR.TYPE(K30)=ERROR.TYPE(K8),1,0),0),IF(ISERROR(K8),0,IF(K30=K8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K30),IF(ISERROR(K8),IF(ERROR.TYPE(K30)=ERROR.TYPE(K8),1,0),0),IF(ISERROR(K8),0,IF(K30=K8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k63_test(doc) -> [{userdata,[{""}]}];
not_equal_k63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K41),IF(ISERROR(K19),IF(ERROR.TYPE(K41)=ERROR.TYPE(K19),1,0),0),IF(ISERROR(K19),0,IF(K41=K19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K41),IF(ISERROR(K19),IF(ERROR.TYPE(K41)=ERROR.TYPE(K19),1,0),0),IF(ISERROR(K19),0,IF(K41=K19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k3_test(doc) -> [{userdata,[{""}]}];
not_equal_k3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k14_test(doc) -> [{userdata,[{""}]}];
not_equal_k14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k25_test(doc) -> [{userdata,[{""}]}];
not_equal_k25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k36_test(doc) -> [{userdata,[{""}]}];
not_equal_k36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k47_test(doc) -> [{userdata,[{""}]}];
not_equal_k47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K25),IF(ISERROR(K3),IF(ERROR.TYPE(K25)=ERROR.TYPE(K3),1,0),0),IF(ISERROR(K3),0,IF(K25=K3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K25),IF(ISERROR(K3),IF(ERROR.TYPE(K25)=ERROR.TYPE(K3),1,0),0),IF(ISERROR(K3),0,IF(K25=K3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k58_test(doc) -> [{userdata,[{""}]}];
not_equal_k58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K36),IF(ISERROR(K14),IF(ERROR.TYPE(K36)=ERROR.TYPE(K14),1,0),0),IF(ISERROR(K14),0,IF(K36=K14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K36),IF(ISERROR(K14),IF(ERROR.TYPE(K36)=ERROR.TYPE(K14),1,0),0),IF(ISERROR(K14),0,IF(K36=K14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k9_test(doc) -> [{userdata,[{""}]}];
not_equal_k9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k20_test(doc) -> [{userdata,[{""}]}];
not_equal_k20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k31_test(doc) -> [{userdata,[{""}]}];
not_equal_k31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k42_test(doc) -> [{userdata,[{""}]}];
not_equal_k42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k53_test(doc) -> [{userdata,[{""}]}];
not_equal_k53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K31),IF(ISERROR(K9),IF(ERROR.TYPE(K31)=ERROR.TYPE(K9),1,0),0),IF(ISERROR(K9),0,IF(K31=K9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K31),IF(ISERROR(K9),IF(ERROR.TYPE(K31)=ERROR.TYPE(K9),1,0),0),IF(ISERROR(K9),0,IF(K31=K9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k64_test(doc) -> [{userdata,[{""}]}];
not_equal_k64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K42),IF(ISERROR(K20),IF(ERROR.TYPE(K42)=ERROR.TYPE(K20),1,0),0),IF(ISERROR(K20),0,IF(K42=K20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K42),IF(ISERROR(K20),IF(ERROR.TYPE(K42)=ERROR.TYPE(K20),1,0),0),IF(ISERROR(K20),0,IF(K42=K20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k4_test(doc) -> [{userdata,[{""}]}];
not_equal_k4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k15_test(doc) -> [{userdata,[{""}]}];
not_equal_k15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k26_test(doc) -> [{userdata,[{""}]}];
not_equal_k26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k37_test(doc) -> [{userdata,[{""}]}];
not_equal_k37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k48_test(doc) -> [{userdata,[{""}]}];
not_equal_k48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K26),IF(ISERROR(K4),IF(ERROR.TYPE(K26)=ERROR.TYPE(K4),1,0),0),IF(ISERROR(K4),0,IF(K26=K4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K26),IF(ISERROR(K4),IF(ERROR.TYPE(K26)=ERROR.TYPE(K4),1,0),0),IF(ISERROR(K4),0,IF(K26=K4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k59_test(doc) -> [{userdata,[{""}]}];
not_equal_k59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K37),IF(ISERROR(K15),IF(ERROR.TYPE(K37)=ERROR.TYPE(K15),1,0),0),IF(ISERROR(K15),0,IF(K37=K15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K37),IF(ISERROR(K15),IF(ERROR.TYPE(K37)=ERROR.TYPE(K15),1,0),0),IF(ISERROR(K15),0,IF(K37=K15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k10_test(doc) -> [{userdata,[{""}]}];
not_equal_k10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k21_test(doc) -> [{userdata,[{""}]}];
not_equal_k21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>K$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>K$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k32_test(doc) -> [{userdata,[{""}]}];
not_equal_k32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k43_test(doc) -> [{userdata,[{""}]}];
not_equal_k43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k54_test(doc) -> [{userdata,[{""}]}];
not_equal_k54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K32),IF(ISERROR(K10),IF(ERROR.TYPE(K32)=ERROR.TYPE(K10),1,0),0),IF(ISERROR(K10),0,IF(K32=K10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K32),IF(ISERROR(K10),IF(ERROR.TYPE(K32)=ERROR.TYPE(K10),1,0),0),IF(ISERROR(K10),0,IF(K32=K10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_k65_test(doc) -> [{userdata,[{""}]}];
not_equal_k65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,10}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,10}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(K43),IF(ISERROR(K21),IF(ERROR.TYPE(K43)=ERROR.TYPE(K21),1,0),0),IF(ISERROR(K21),0,IF(K43=K21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(K43),IF(ISERROR(K21),IF(ERROR.TYPE(K43)=ERROR.TYPE(K21),1,0),0),IF(ISERROR(K21),0,IF(K43=K21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v5_test(doc) -> [{userdata,[{""}]}];
not_equal_v5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v16_test(doc) -> [{userdata,[{""}]}];
not_equal_v16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v27_test(doc) -> [{userdata,[{""}]}];
not_equal_v27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v38_test(doc) -> [{userdata,[{""}]}];
not_equal_v38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v49_test(doc) -> [{userdata,[{""}]}];
not_equal_v49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V27),IF(ISERROR(V5),IF(ERROR.TYPE(V27)=ERROR.TYPE(V5),1,0),0),IF(ISERROR(V5),0,IF(V27=V5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V27),IF(ISERROR(V5),IF(ERROR.TYPE(V27)=ERROR.TYPE(V5),1,0),0),IF(ISERROR(V5),0,IF(V27=V5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v60_test(doc) -> [{userdata,[{""}]}];
not_equal_v60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V38),IF(ISERROR(V16),IF(ERROR.TYPE(V38)=ERROR.TYPE(V16),1,0),0),IF(ISERROR(V16),0,IF(V38=V16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V38),IF(ISERROR(V16),IF(ERROR.TYPE(V38)=ERROR.TYPE(V16),1,0),0),IF(ISERROR(V16),0,IF(V38=V16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v11_test(doc) -> [{userdata,[{""}]}];
not_equal_v11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v22_test(doc) -> [{userdata,[{""}]}];
not_equal_v22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v33_test(doc) -> [{userdata,[{""}]}];
not_equal_v33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v44_test(doc) -> [{userdata,[{""}]}];
not_equal_v44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v55_test(doc) -> [{userdata,[{""}]}];
not_equal_v55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V33),IF(ISERROR(V11),IF(ERROR.TYPE(V33)=ERROR.TYPE(V11),1,0),0),IF(ISERROR(V11),0,IF(V33=V11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V33),IF(ISERROR(V11),IF(ERROR.TYPE(V33)=ERROR.TYPE(V11),1,0),0),IF(ISERROR(V11),0,IF(V33=V11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v66_test(doc) -> [{userdata,[{""}]}];
not_equal_v66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V44),IF(ISERROR(V22),IF(ERROR.TYPE(V44)=ERROR.TYPE(V22),1,0),0),IF(ISERROR(V22),0,IF(V44=V22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V44),IF(ISERROR(V22),IF(ERROR.TYPE(V44)=ERROR.TYPE(V22),1,0),0),IF(ISERROR(V22),0,IF(V44=V22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v6_test(doc) -> [{userdata,[{""}]}];
not_equal_v6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v17_test(doc) -> [{userdata,[{""}]}];
not_equal_v17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v28_test(doc) -> [{userdata,[{""}]}];
not_equal_v28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v39_test(doc) -> [{userdata,[{""}]}];
not_equal_v39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v50_test(doc) -> [{userdata,[{""}]}];
not_equal_v50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V28),IF(ISERROR(V6),IF(ERROR.TYPE(V28)=ERROR.TYPE(V6),1,0),0),IF(ISERROR(V6),0,IF(V28=V6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V28),IF(ISERROR(V6),IF(ERROR.TYPE(V28)=ERROR.TYPE(V6),1,0),0),IF(ISERROR(V6),0,IF(V28=V6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v61_test(doc) -> [{userdata,[{""}]}];
not_equal_v61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V39),IF(ISERROR(V17),IF(ERROR.TYPE(V39)=ERROR.TYPE(V17),1,0),0),IF(ISERROR(V17),0,IF(V39=V17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V39),IF(ISERROR(V17),IF(ERROR.TYPE(V39)=ERROR.TYPE(V17),1,0),0),IF(ISERROR(V17),0,IF(V39=V17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v1_test(doc) -> [{userdata,[{""}]}];
not_equal_v1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Float"}]),
      test_util:expected2(Msg, {string,"Float"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v12_test(doc) -> [{userdata,[{""}]}];
not_equal_v12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v34_test(doc) -> [{userdata,[{""}]}];
not_equal_v34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v56_test(doc) -> [{userdata,[{""}]}];
not_equal_v56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V34),IF(ISERROR(V12),IF(ERROR.TYPE(V34)=ERROR.TYPE(V12),1,0),0),IF(ISERROR(V12),0,IF(V34=V12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V34),IF(ISERROR(V12),IF(ERROR.TYPE(V34)=ERROR.TYPE(V12),1,0),0),IF(ISERROR(V12),0,IF(V34=V12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v7_test(doc) -> [{userdata,[{""}]}];
not_equal_v7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v18_test(doc) -> [{userdata,[{""}]}];
not_equal_v18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v29_test(doc) -> [{userdata,[{""}]}];
not_equal_v29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v40_test(doc) -> [{userdata,[{""}]}];
not_equal_v40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v51_test(doc) -> [{userdata,[{""}]}];
not_equal_v51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V29),IF(ISERROR(V7),IF(ERROR.TYPE(V29)=ERROR.TYPE(V7),1,0),0),IF(ISERROR(V7),0,IF(V29=V7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V29),IF(ISERROR(V7),IF(ERROR.TYPE(V29)=ERROR.TYPE(V7),1,0),0),IF(ISERROR(V7),0,IF(V29=V7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v62_test(doc) -> [{userdata,[{""}]}];
not_equal_v62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V40),IF(ISERROR(V18),IF(ERROR.TYPE(V40)=ERROR.TYPE(V18),1,0),0),IF(ISERROR(V18),0,IF(V40=V18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V40),IF(ISERROR(V18),IF(ERROR.TYPE(V40)=ERROR.TYPE(V18),1,0),0),IF(ISERROR(V18),0,IF(V40=V18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v2_test(doc) -> [{userdata,[{""}]}];
not_equal_v2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,36193.2}]),
      test_util:expected2(Msg, {number,36193.2})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v13_test(doc) -> [{userdata,[{""}]}];
not_equal_v13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v35_test(doc) -> [{userdata,[{""}]}];
not_equal_v35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v57_test(doc) -> [{userdata,[{""}]}];
not_equal_v57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V35),IF(ISERROR(V13),IF(ERROR.TYPE(V35)=ERROR.TYPE(V13),1,0),0),IF(ISERROR(V13),0,IF(V35=V13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V35),IF(ISERROR(V13),IF(ERROR.TYPE(V35)=ERROR.TYPE(V13),1,0),0),IF(ISERROR(V13),0,IF(V35=V13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v8_test(doc) -> [{userdata,[{""}]}];
not_equal_v8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v19_test(doc) -> [{userdata,[{""}]}];
not_equal_v19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v30_test(doc) -> [{userdata,[{""}]}];
not_equal_v30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v41_test(doc) -> [{userdata,[{""}]}];
not_equal_v41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v52_test(doc) -> [{userdata,[{""}]}];
not_equal_v52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V30),IF(ISERROR(V8),IF(ERROR.TYPE(V30)=ERROR.TYPE(V8),1,0),0),IF(ISERROR(V8),0,IF(V30=V8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V30),IF(ISERROR(V8),IF(ERROR.TYPE(V30)=ERROR.TYPE(V8),1,0),0),IF(ISERROR(V8),0,IF(V30=V8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v63_test(doc) -> [{userdata,[{""}]}];
not_equal_v63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V41),IF(ISERROR(V19),IF(ERROR.TYPE(V41)=ERROR.TYPE(V19),1,0),0),IF(ISERROR(V19),0,IF(V41=V19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V41),IF(ISERROR(V19),IF(ERROR.TYPE(V41)=ERROR.TYPE(V19),1,0),0),IF(ISERROR(V19),0,IF(V41=V19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v3_test(doc) -> [{userdata,[{""}]}];
not_equal_v3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v14_test(doc) -> [{userdata,[{""}]}];
not_equal_v14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v25_test(doc) -> [{userdata,[{""}]}];
not_equal_v25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v36_test(doc) -> [{userdata,[{""}]}];
not_equal_v36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v47_test(doc) -> [{userdata,[{""}]}];
not_equal_v47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V25),IF(ISERROR(V3),IF(ERROR.TYPE(V25)=ERROR.TYPE(V3),1,0),0),IF(ISERROR(V3),0,IF(V25=V3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V25),IF(ISERROR(V3),IF(ERROR.TYPE(V25)=ERROR.TYPE(V3),1,0),0),IF(ISERROR(V3),0,IF(V25=V3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v58_test(doc) -> [{userdata,[{""}]}];
not_equal_v58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V36),IF(ISERROR(V14),IF(ERROR.TYPE(V36)=ERROR.TYPE(V14),1,0),0),IF(ISERROR(V14),0,IF(V36=V14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V36),IF(ISERROR(V14),IF(ERROR.TYPE(V36)=ERROR.TYPE(V14),1,0),0),IF(ISERROR(V14),0,IF(V36=V14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v9_test(doc) -> [{userdata,[{""}]}];
not_equal_v9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v20_test(doc) -> [{userdata,[{""}]}];
not_equal_v20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v31_test(doc) -> [{userdata,[{""}]}];
not_equal_v31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v42_test(doc) -> [{userdata,[{""}]}];
not_equal_v42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v53_test(doc) -> [{userdata,[{""}]}];
not_equal_v53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V31),IF(ISERROR(V9),IF(ERROR.TYPE(V31)=ERROR.TYPE(V9),1,0),0),IF(ISERROR(V9),0,IF(V31=V9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V31),IF(ISERROR(V9),IF(ERROR.TYPE(V31)=ERROR.TYPE(V9),1,0),0),IF(ISERROR(V9),0,IF(V31=V9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v64_test(doc) -> [{userdata,[{""}]}];
not_equal_v64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V42),IF(ISERROR(V20),IF(ERROR.TYPE(V42)=ERROR.TYPE(V20),1,0),0),IF(ISERROR(V20),0,IF(V42=V20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V42),IF(ISERROR(V20),IF(ERROR.TYPE(V42)=ERROR.TYPE(V20),1,0),0),IF(ISERROR(V20),0,IF(V42=V20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v4_test(doc) -> [{userdata,[{""}]}];
not_equal_v4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v15_test(doc) -> [{userdata,[{""}]}];
not_equal_v15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v26_test(doc) -> [{userdata,[{""}]}];
not_equal_v26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v37_test(doc) -> [{userdata,[{""}]}];
not_equal_v37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v48_test(doc) -> [{userdata,[{""}]}];
not_equal_v48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V26),IF(ISERROR(V4),IF(ERROR.TYPE(V26)=ERROR.TYPE(V4),1,0),0),IF(ISERROR(V4),0,IF(V26=V4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V26),IF(ISERROR(V4),IF(ERROR.TYPE(V26)=ERROR.TYPE(V4),1,0),0),IF(ISERROR(V4),0,IF(V26=V4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v59_test(doc) -> [{userdata,[{""}]}];
not_equal_v59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V37),IF(ISERROR(V15),IF(ERROR.TYPE(V37)=ERROR.TYPE(V15),1,0),0),IF(ISERROR(V15),0,IF(V37=V15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V37),IF(ISERROR(V15),IF(ERROR.TYPE(V37)=ERROR.TYPE(V15),1,0),0),IF(ISERROR(V15),0,IF(V37=V15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v10_test(doc) -> [{userdata,[{""}]}];
not_equal_v10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v21_test(doc) -> [{userdata,[{""}]}];
not_equal_v21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>V$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>V$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v32_test(doc) -> [{userdata,[{""}]}];
not_equal_v32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v43_test(doc) -> [{userdata,[{""}]}];
not_equal_v43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v54_test(doc) -> [{userdata,[{""}]}];
not_equal_v54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V32),IF(ISERROR(V10),IF(ERROR.TYPE(V32)=ERROR.TYPE(V10),1,0),0),IF(ISERROR(V10),0,IF(V32=V10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V32),IF(ISERROR(V10),IF(ERROR.TYPE(V32)=ERROR.TYPE(V10),1,0),0),IF(ISERROR(V10),0,IF(V32=V10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_v65_test(doc) -> [{userdata,[{""}]}];
not_equal_v65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,21}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,21}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(V43),IF(ISERROR(V21),IF(ERROR.TYPE(V43)=ERROR.TYPE(V21),1,0),0),IF(ISERROR(V21),0,IF(V43=V21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(V43),IF(ISERROR(V21),IF(ERROR.TYPE(V43)=ERROR.TYPE(V21),1,0),0),IF(ISERROR(V21),0,IF(V43=V21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a5_test(doc) -> [{userdata,[{""}]}];
not_equal_a5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Boolean"}]),
      test_util:expected2(Msg, {string,"Boolean"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a16_test(doc) -> [{userdata,[{""}]}];
not_equal_a16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Str Num"}]),
      test_util:expected2(Msg, {string,"Str Num"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a27_test(doc) -> [{userdata,[{""}]}];
not_equal_a27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Boolean"}]),
      test_util:expected2(Msg, {string,"Boolean"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a38_test(doc) -> [{userdata,[{""}]}];
not_equal_a38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Str Num"}]),
      test_util:expected2(Msg, {string,"Str Num"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a11_test(doc) -> [{userdata,[{""}]}];
not_equal_a11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a22_test(doc) -> [{userdata,[{""}]}];
not_equal_a22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Float"}]),
      test_util:expected2(Msg, {string,"Float"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a33_test(doc) -> [{userdata,[{""}]}];
not_equal_a33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a44_test(doc) -> [{userdata,[{""}]}];
not_equal_a44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Float"}]),
      test_util:expected2(Msg, {string,"Float"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a6_test(doc) -> [{userdata,[{""}]}];
not_equal_a6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a17_test(doc) -> [{userdata,[{""}]}];
not_equal_a17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Str Num"}]),
      test_util:expected2(Msg, {string,"Str Num"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a28_test(doc) -> [{userdata,[{""}]}];
not_equal_a28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a39_test(doc) -> [{userdata,[{""}]}];
not_equal_a39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Str Num"}]),
      test_util:expected2(Msg, {string,"Str Num"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a1_test(doc) -> [{userdata,[{""}]}];
not_equal_a1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"<>"}]),
      test_util:expected2(Msg, {string,"<>"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a12_test(doc) -> [{userdata,[{""}]}];
not_equal_a12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a34_test(doc) -> [{userdata,[{""}]}];
not_equal_a34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a7_test(doc) -> [{userdata,[{""}]}];
not_equal_a7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a18_test(doc) -> [{userdata,[{""}]}];
not_equal_a18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Integer"}]),
      test_util:expected2(Msg, {string,"Integer"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a29_test(doc) -> [{userdata,[{""}]}];
not_equal_a29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a40_test(doc) -> [{userdata,[{""}]}];
not_equal_a40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Integer"}]),
      test_util:expected2(Msg, {string,"Integer"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a2_test(doc) -> [{userdata,[{""}]}];
not_equal_a2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"A"}]),
      test_util:expected2(Msg, {string,"A"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a13_test(doc) -> [{userdata,[{""}]}];
not_equal_a13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"String"}]),
      test_util:expected2(Msg, {string,"String"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a35_test(doc) -> [{userdata,[{""}]}];
not_equal_a35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"String"}]),
      test_util:expected2(Msg, {string,"String"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a8_test(doc) -> [{userdata,[{""}]}];
not_equal_a8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a19_test(doc) -> [{userdata,[{""}]}];
not_equal_a19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Integer"}]),
      test_util:expected2(Msg, {string,"Integer"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a30_test(doc) -> [{userdata,[{""}]}];
not_equal_a30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a41_test(doc) -> [{userdata,[{""}]}];
not_equal_a41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Integer"}]),
      test_util:expected2(Msg, {string,"Integer"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a3_test(doc) -> [{userdata,[{""}]}];
not_equal_a3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Blank"}]),
      test_util:expected2(Msg, {string,"Blank"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a14_test(doc) -> [{userdata,[{""}]}];
not_equal_a14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"String"}]),
      test_util:expected2(Msg, {string,"String"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a25_test(doc) -> [{userdata,[{""}]}];
not_equal_a25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Blank"}]),
      test_util:expected2(Msg, {string,"Blank"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a36_test(doc) -> [{userdata,[{""}]}];
not_equal_a36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"String"}]),
      test_util:expected2(Msg, {string,"String"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a47_test(doc) -> [{userdata,[{""}]}];
not_equal_a47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=SUM(C47:V66)"}]),
      test_util:expected2(Msg, {formula,"=SUM(C47:V66)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a9_test(doc) -> [{userdata,[{""}]}];
not_equal_a9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a20_test(doc) -> [{userdata,[{""}]}];
not_equal_a20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Zero"}]),
      test_util:expected2(Msg, {string,"Zero"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a31_test(doc) -> [{userdata,[{""}]}];
not_equal_a31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a42_test(doc) -> [{userdata,[{""}]}];
not_equal_a42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Zero"}]),
      test_util:expected2(Msg, {string,"Zero"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a4_test(doc) -> [{userdata,[{""}]}];
not_equal_a4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Boolean"}]),
      test_util:expected2(Msg, {string,"Boolean"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a15_test(doc) -> [{userdata,[{""}]}];
not_equal_a15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"String"}]),
      test_util:expected2(Msg, {string,"String"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a26_test(doc) -> [{userdata,[{""}]}];
not_equal_a26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Boolean"}]),
      test_util:expected2(Msg, {string,"Boolean"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a37_test(doc) -> [{userdata,[{""}]}];
not_equal_a37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"String"}]),
      test_util:expected2(Msg, {string,"String"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a48_test(doc) -> [{userdata,[{""}]}];
not_equal_a48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(A47=COUNT(C47:V66),\"Success\",\"Failure\")"}]),
      test_util:expected2(Msg, {formula,"=IF(A47=COUNT(C47:V66),\"Success\",\"Failure\")"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a10_test(doc) -> [{userdata,[{""}]}];
not_equal_a10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a21_test(doc) -> [{userdata,[{""}]}];
not_equal_a21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Float"}]),
      test_util:expected2(Msg, {string,"Float"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a32_test(doc) -> [{userdata,[{""}]}];
not_equal_a32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_a43_test(doc) -> [{userdata,[{""}]}];
not_equal_a43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,0}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,0}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Float"}]),
      test_util:expected2(Msg, {string,"Float"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l5_test(doc) -> [{userdata,[{""}]}];
not_equal_l5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l16_test(doc) -> [{userdata,[{""}]}];
not_equal_l16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l27_test(doc) -> [{userdata,[{""}]}];
not_equal_l27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l38_test(doc) -> [{userdata,[{""}]}];
not_equal_l38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l49_test(doc) -> [{userdata,[{""}]}];
not_equal_l49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L27),IF(ISERROR(L5),IF(ERROR.TYPE(L27)=ERROR.TYPE(L5),1,0),0),IF(ISERROR(L5),0,IF(L27=L5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L27),IF(ISERROR(L5),IF(ERROR.TYPE(L27)=ERROR.TYPE(L5),1,0),0),IF(ISERROR(L5),0,IF(L27=L5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l60_test(doc) -> [{userdata,[{""}]}];
not_equal_l60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L38),IF(ISERROR(L16),IF(ERROR.TYPE(L38)=ERROR.TYPE(L16),1,0),0),IF(ISERROR(L16),0,IF(L38=L16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L38),IF(ISERROR(L16),IF(ERROR.TYPE(L38)=ERROR.TYPE(L16),1,0),0),IF(ISERROR(L16),0,IF(L38=L16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l11_test(doc) -> [{userdata,[{""}]}];
not_equal_l11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l22_test(doc) -> [{userdata,[{""}]}];
not_equal_l22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l33_test(doc) -> [{userdata,[{""}]}];
not_equal_l33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l44_test(doc) -> [{userdata,[{""}]}];
not_equal_l44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l55_test(doc) -> [{userdata,[{""}]}];
not_equal_l55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L33),IF(ISERROR(L11),IF(ERROR.TYPE(L33)=ERROR.TYPE(L11),1,0),0),IF(ISERROR(L11),0,IF(L33=L11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L33),IF(ISERROR(L11),IF(ERROR.TYPE(L33)=ERROR.TYPE(L11),1,0),0),IF(ISERROR(L11),0,IF(L33=L11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l66_test(doc) -> [{userdata,[{""}]}];
not_equal_l66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L44),IF(ISERROR(L22),IF(ERROR.TYPE(L44)=ERROR.TYPE(L22),1,0),0),IF(ISERROR(L22),0,IF(L44=L22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L44),IF(ISERROR(L22),IF(ERROR.TYPE(L44)=ERROR.TYPE(L22),1,0),0),IF(ISERROR(L22),0,IF(L44=L22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l6_test(doc) -> [{userdata,[{""}]}];
not_equal_l6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l17_test(doc) -> [{userdata,[{""}]}];
not_equal_l17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l28_test(doc) -> [{userdata,[{""}]}];
not_equal_l28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l39_test(doc) -> [{userdata,[{""}]}];
not_equal_l39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l50_test(doc) -> [{userdata,[{""}]}];
not_equal_l50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L28),IF(ISERROR(L6),IF(ERROR.TYPE(L28)=ERROR.TYPE(L6),1,0),0),IF(ISERROR(L6),0,IF(L28=L6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L28),IF(ISERROR(L6),IF(ERROR.TYPE(L28)=ERROR.TYPE(L6),1,0),0),IF(ISERROR(L6),0,IF(L28=L6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l61_test(doc) -> [{userdata,[{""}]}];
not_equal_l61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L39),IF(ISERROR(L17),IF(ERROR.TYPE(L39)=ERROR.TYPE(L17),1,0),0),IF(ISERROR(L17),0,IF(L39=L17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L39),IF(ISERROR(L17),IF(ERROR.TYPE(L39)=ERROR.TYPE(L17),1,0),0),IF(ISERROR(L17),0,IF(L39=L17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l1_test(doc) -> [{userdata,[{""}]}];
not_equal_l1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l12_test(doc) -> [{userdata,[{""}]}];
not_equal_l12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l34_test(doc) -> [{userdata,[{""}]}];
not_equal_l34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l56_test(doc) -> [{userdata,[{""}]}];
not_equal_l56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L34),IF(ISERROR(L12),IF(ERROR.TYPE(L34)=ERROR.TYPE(L12),1,0),0),IF(ISERROR(L12),0,IF(L34=L12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L34),IF(ISERROR(L12),IF(ERROR.TYPE(L34)=ERROR.TYPE(L12),1,0),0),IF(ISERROR(L12),0,IF(L34=L12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l7_test(doc) -> [{userdata,[{""}]}];
not_equal_l7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l18_test(doc) -> [{userdata,[{""}]}];
not_equal_l18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l29_test(doc) -> [{userdata,[{""}]}];
not_equal_l29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l40_test(doc) -> [{userdata,[{""}]}];
not_equal_l40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l51_test(doc) -> [{userdata,[{""}]}];
not_equal_l51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L29),IF(ISERROR(L7),IF(ERROR.TYPE(L29)=ERROR.TYPE(L7),1,0),0),IF(ISERROR(L7),0,IF(L29=L7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L29),IF(ISERROR(L7),IF(ERROR.TYPE(L29)=ERROR.TYPE(L7),1,0),0),IF(ISERROR(L7),0,IF(L29=L7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l62_test(doc) -> [{userdata,[{""}]}];
not_equal_l62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L40),IF(ISERROR(L18),IF(ERROR.TYPE(L40)=ERROR.TYPE(L18),1,0),0),IF(ISERROR(L18),0,IF(L40=L18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L40),IF(ISERROR(L18),IF(ERROR.TYPE(L40)=ERROR.TYPE(L18),1,0),0),IF(ISERROR(L18),0,IF(L40=L18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l2_test(doc) -> [{userdata,[{""}]}];
not_equal_l2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l13_test(doc) -> [{userdata,[{""}]}];
not_equal_l13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l35_test(doc) -> [{userdata,[{""}]}];
not_equal_l35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l57_test(doc) -> [{userdata,[{""}]}];
not_equal_l57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L35),IF(ISERROR(L13),IF(ERROR.TYPE(L35)=ERROR.TYPE(L13),1,0),0),IF(ISERROR(L13),0,IF(L35=L13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L35),IF(ISERROR(L13),IF(ERROR.TYPE(L35)=ERROR.TYPE(L13),1,0),0),IF(ISERROR(L13),0,IF(L35=L13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l8_test(doc) -> [{userdata,[{""}]}];
not_equal_l8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l19_test(doc) -> [{userdata,[{""}]}];
not_equal_l19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l30_test(doc) -> [{userdata,[{""}]}];
not_equal_l30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l41_test(doc) -> [{userdata,[{""}]}];
not_equal_l41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l52_test(doc) -> [{userdata,[{""}]}];
not_equal_l52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L30),IF(ISERROR(L8),IF(ERROR.TYPE(L30)=ERROR.TYPE(L8),1,0),0),IF(ISERROR(L8),0,IF(L30=L8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L30),IF(ISERROR(L8),IF(ERROR.TYPE(L30)=ERROR.TYPE(L8),1,0),0),IF(ISERROR(L8),0,IF(L30=L8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l63_test(doc) -> [{userdata,[{""}]}];
not_equal_l63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L41),IF(ISERROR(L19),IF(ERROR.TYPE(L41)=ERROR.TYPE(L19),1,0),0),IF(ISERROR(L19),0,IF(L41=L19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L41),IF(ISERROR(L19),IF(ERROR.TYPE(L41)=ERROR.TYPE(L19),1,0),0),IF(ISERROR(L19),0,IF(L41=L19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l3_test(doc) -> [{userdata,[{""}]}];
not_equal_l3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l14_test(doc) -> [{userdata,[{""}]}];
not_equal_l14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l25_test(doc) -> [{userdata,[{""}]}];
not_equal_l25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l36_test(doc) -> [{userdata,[{""}]}];
not_equal_l36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l47_test(doc) -> [{userdata,[{""}]}];
not_equal_l47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L25),IF(ISERROR(L3),IF(ERROR.TYPE(L25)=ERROR.TYPE(L3),1,0),0),IF(ISERROR(L3),0,IF(L25=L3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L25),IF(ISERROR(L3),IF(ERROR.TYPE(L25)=ERROR.TYPE(L3),1,0),0),IF(ISERROR(L3),0,IF(L25=L3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l58_test(doc) -> [{userdata,[{""}]}];
not_equal_l58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L36),IF(ISERROR(L14),IF(ERROR.TYPE(L36)=ERROR.TYPE(L14),1,0),0),IF(ISERROR(L14),0,IF(L36=L14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L36),IF(ISERROR(L14),IF(ERROR.TYPE(L36)=ERROR.TYPE(L14),1,0),0),IF(ISERROR(L14),0,IF(L36=L14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l9_test(doc) -> [{userdata,[{""}]}];
not_equal_l9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l20_test(doc) -> [{userdata,[{""}]}];
not_equal_l20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l31_test(doc) -> [{userdata,[{""}]}];
not_equal_l31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l42_test(doc) -> [{userdata,[{""}]}];
not_equal_l42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l53_test(doc) -> [{userdata,[{""}]}];
not_equal_l53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L31),IF(ISERROR(L9),IF(ERROR.TYPE(L31)=ERROR.TYPE(L9),1,0),0),IF(ISERROR(L9),0,IF(L31=L9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L31),IF(ISERROR(L9),IF(ERROR.TYPE(L31)=ERROR.TYPE(L9),1,0),0),IF(ISERROR(L9),0,IF(L31=L9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l64_test(doc) -> [{userdata,[{""}]}];
not_equal_l64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L42),IF(ISERROR(L20),IF(ERROR.TYPE(L42)=ERROR.TYPE(L20),1,0),0),IF(ISERROR(L20),0,IF(L42=L20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L42),IF(ISERROR(L20),IF(ERROR.TYPE(L42)=ERROR.TYPE(L20),1,0),0),IF(ISERROR(L20),0,IF(L42=L20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l4_test(doc) -> [{userdata,[{""}]}];
not_equal_l4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l15_test(doc) -> [{userdata,[{""}]}];
not_equal_l15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l26_test(doc) -> [{userdata,[{""}]}];
not_equal_l26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l37_test(doc) -> [{userdata,[{""}]}];
not_equal_l37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l48_test(doc) -> [{userdata,[{""}]}];
not_equal_l48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L26),IF(ISERROR(L4),IF(ERROR.TYPE(L26)=ERROR.TYPE(L4),1,0),0),IF(ISERROR(L4),0,IF(L26=L4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L26),IF(ISERROR(L4),IF(ERROR.TYPE(L26)=ERROR.TYPE(L4),1,0),0),IF(ISERROR(L4),0,IF(L26=L4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l59_test(doc) -> [{userdata,[{""}]}];
not_equal_l59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L37),IF(ISERROR(L15),IF(ERROR.TYPE(L37)=ERROR.TYPE(L15),1,0),0),IF(ISERROR(L15),0,IF(L37=L15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L37),IF(ISERROR(L15),IF(ERROR.TYPE(L37)=ERROR.TYPE(L15),1,0),0),IF(ISERROR(L15),0,IF(L37=L15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l10_test(doc) -> [{userdata,[{""}]}];
not_equal_l10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l21_test(doc) -> [{userdata,[{""}]}];
not_equal_l21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>L$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>L$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l32_test(doc) -> [{userdata,[{""}]}];
not_equal_l32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l43_test(doc) -> [{userdata,[{""}]}];
not_equal_l43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l54_test(doc) -> [{userdata,[{""}]}];
not_equal_l54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L32),IF(ISERROR(L10),IF(ERROR.TYPE(L32)=ERROR.TYPE(L10),1,0),0),IF(ISERROR(L10),0,IF(L32=L10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L32),IF(ISERROR(L10),IF(ERROR.TYPE(L32)=ERROR.TYPE(L10),1,0),0),IF(ISERROR(L10),0,IF(L32=L10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_l65_test(doc) -> [{userdata,[{""}]}];
not_equal_l65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,11}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,11}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(L43),IF(ISERROR(L21),IF(ERROR.TYPE(L43)=ERROR.TYPE(L21),1,0),0),IF(ISERROR(L21),0,IF(L43=L21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(L43),IF(ISERROR(L21),IF(ERROR.TYPE(L43)=ERROR.TYPE(L21),1,0),0),IF(ISERROR(L21),0,IF(L43=L21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b5_test(doc) -> [{userdata,[{""}]}];
not_equal_b5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=(1=0)"}]),
      test_util:expected2(Msg, {formula,"=(1=0)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b16_test(doc) -> [{userdata,[{""}]}];
not_equal_b16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"2.7"}]),
      test_util:expected2(Msg, {string,"2.7"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b11_test(doc) -> [{userdata,[{""}]}];
not_equal_b11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b22_test(doc) -> [{userdata,[{""}]}];
not_equal_b22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,36193.2}]),
      test_util:expected2(Msg, {number,36193.2})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b6_test(doc) -> [{userdata,[{""}]}];
not_equal_b6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b17_test(doc) -> [{userdata,[{""}]}];
not_equal_b17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"3.54"}]),
      test_util:expected2(Msg, {string,"3.54"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b1_test(doc) -> [{userdata,[{""}]}];
not_equal_b1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"B"}]),
      test_util:expected2(Msg, {string,"B"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b12_test(doc) -> [{userdata,[{""}]}];
not_equal_b12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b7_test(doc) -> [{userdata,[{""}]}];
not_equal_b7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b18_test(doc) -> [{userdata,[{""}]}];
not_equal_b18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"1999/02/01 00:00:00"}]),
      test_util:expected2(Msg, {string,"1999/02/01 00:00:00"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b13_test(doc) -> [{userdata,[{""}]}];
not_equal_b13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Liz"}]),
      test_util:expected2(Msg, {string,"Liz"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b8_test(doc) -> [{userdata,[{""}]}];
not_equal_b8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b19_test(doc) -> [{userdata,[{""}]}];
not_equal_b19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"1999/02/02 00:00:00"}]),
      test_util:expected2(Msg, {string,"1999/02/02 00:00:00"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b14_test(doc) -> [{userdata,[{""}]}];
not_equal_b14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Doug"}]),
      test_util:expected2(Msg, {string,"Doug"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b9_test(doc) -> [{userdata,[{""}]}];
not_equal_b9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b20_test(doc) -> [{userdata,[{""}]}];
not_equal_b20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,0.0}]),
      test_util:expected2(Msg, {number,0.0})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b4_test(doc) -> [{userdata,[{""}]}];
not_equal_b4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=(1=1)"}]),
      test_util:expected2(Msg, {formula,"=(1=1)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b15_test(doc) -> [{userdata,[{""}]}];
not_equal_b15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Bob"}]),
      test_util:expected2(Msg, {string,"Bob"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b10_test(doc) -> [{userdata,[{""}]}];
not_equal_b10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_b21_test(doc) -> [{userdata,[{""}]}];
not_equal_b21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,1}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,1}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,3.1415}]),
      test_util:expected2(Msg, {number,3.1415})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m5_test(doc) -> [{userdata,[{""}]}];
not_equal_m5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m16_test(doc) -> [{userdata,[{""}]}];
not_equal_m16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m27_test(doc) -> [{userdata,[{""}]}];
not_equal_m27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m38_test(doc) -> [{userdata,[{""}]}];
not_equal_m38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m49_test(doc) -> [{userdata,[{""}]}];
not_equal_m49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M27),IF(ISERROR(M5),IF(ERROR.TYPE(M27)=ERROR.TYPE(M5),1,0),0),IF(ISERROR(M5),0,IF(M27=M5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M27),IF(ISERROR(M5),IF(ERROR.TYPE(M27)=ERROR.TYPE(M5),1,0),0),IF(ISERROR(M5),0,IF(M27=M5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m60_test(doc) -> [{userdata,[{""}]}];
not_equal_m60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M38),IF(ISERROR(M16),IF(ERROR.TYPE(M38)=ERROR.TYPE(M16),1,0),0),IF(ISERROR(M16),0,IF(M38=M16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M38),IF(ISERROR(M16),IF(ERROR.TYPE(M38)=ERROR.TYPE(M16),1,0),0),IF(ISERROR(M16),0,IF(M38=M16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m11_test(doc) -> [{userdata,[{""}]}];
not_equal_m11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m22_test(doc) -> [{userdata,[{""}]}];
not_equal_m22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m33_test(doc) -> [{userdata,[{""}]}];
not_equal_m33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m44_test(doc) -> [{userdata,[{""}]}];
not_equal_m44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m55_test(doc) -> [{userdata,[{""}]}];
not_equal_m55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M33),IF(ISERROR(M11),IF(ERROR.TYPE(M33)=ERROR.TYPE(M11),1,0),0),IF(ISERROR(M11),0,IF(M33=M11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M33),IF(ISERROR(M11),IF(ERROR.TYPE(M33)=ERROR.TYPE(M11),1,0),0),IF(ISERROR(M11),0,IF(M33=M11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m66_test(doc) -> [{userdata,[{""}]}];
not_equal_m66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M44),IF(ISERROR(M22),IF(ERROR.TYPE(M44)=ERROR.TYPE(M22),1,0),0),IF(ISERROR(M22),0,IF(M44=M22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M44),IF(ISERROR(M22),IF(ERROR.TYPE(M44)=ERROR.TYPE(M22),1,0),0),IF(ISERROR(M22),0,IF(M44=M22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m6_test(doc) -> [{userdata,[{""}]}];
not_equal_m6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m17_test(doc) -> [{userdata,[{""}]}];
not_equal_m17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m28_test(doc) -> [{userdata,[{""}]}];
not_equal_m28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m39_test(doc) -> [{userdata,[{""}]}];
not_equal_m39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m50_test(doc) -> [{userdata,[{""}]}];
not_equal_m50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M28),IF(ISERROR(M6),IF(ERROR.TYPE(M28)=ERROR.TYPE(M6),1,0),0),IF(ISERROR(M6),0,IF(M28=M6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M28),IF(ISERROR(M6),IF(ERROR.TYPE(M28)=ERROR.TYPE(M6),1,0),0),IF(ISERROR(M6),0,IF(M28=M6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m61_test(doc) -> [{userdata,[{""}]}];
not_equal_m61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M39),IF(ISERROR(M17),IF(ERROR.TYPE(M39)=ERROR.TYPE(M17),1,0),0),IF(ISERROR(M17),0,IF(M39=M17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M39),IF(ISERROR(M17),IF(ERROR.TYPE(M39)=ERROR.TYPE(M17),1,0),0),IF(ISERROR(M17),0,IF(M39=M17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m1_test(doc) -> [{userdata,[{""}]}];
not_equal_m1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"String"}]),
      test_util:expected2(Msg, {string,"String"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m12_test(doc) -> [{userdata,[{""}]}];
not_equal_m12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m34_test(doc) -> [{userdata,[{""}]}];
not_equal_m34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m56_test(doc) -> [{userdata,[{""}]}];
not_equal_m56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M34),IF(ISERROR(M12),IF(ERROR.TYPE(M34)=ERROR.TYPE(M12),1,0),0),IF(ISERROR(M12),0,IF(M34=M12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M34),IF(ISERROR(M12),IF(ERROR.TYPE(M34)=ERROR.TYPE(M12),1,0),0),IF(ISERROR(M12),0,IF(M34=M12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m7_test(doc) -> [{userdata,[{""}]}];
not_equal_m7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m18_test(doc) -> [{userdata,[{""}]}];
not_equal_m18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m29_test(doc) -> [{userdata,[{""}]}];
not_equal_m29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m40_test(doc) -> [{userdata,[{""}]}];
not_equal_m40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m51_test(doc) -> [{userdata,[{""}]}];
not_equal_m51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M29),IF(ISERROR(M7),IF(ERROR.TYPE(M29)=ERROR.TYPE(M7),1,0),0),IF(ISERROR(M7),0,IF(M29=M7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M29),IF(ISERROR(M7),IF(ERROR.TYPE(M29)=ERROR.TYPE(M7),1,0),0),IF(ISERROR(M7),0,IF(M29=M7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m62_test(doc) -> [{userdata,[{""}]}];
not_equal_m62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M40),IF(ISERROR(M18),IF(ERROR.TYPE(M40)=ERROR.TYPE(M18),1,0),0),IF(ISERROR(M18),0,IF(M40=M18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M40),IF(ISERROR(M18),IF(ERROR.TYPE(M40)=ERROR.TYPE(M18),1,0),0),IF(ISERROR(M18),0,IF(M40=M18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m2_test(doc) -> [{userdata,[{""}]}];
not_equal_m2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Liz"}]),
      test_util:expected2(Msg, {string,"Liz"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m13_test(doc) -> [{userdata,[{""}]}];
not_equal_m13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m35_test(doc) -> [{userdata,[{""}]}];
not_equal_m35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m57_test(doc) -> [{userdata,[{""}]}];
not_equal_m57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M35),IF(ISERROR(M13),IF(ERROR.TYPE(M35)=ERROR.TYPE(M13),1,0),0),IF(ISERROR(M13),0,IF(M35=M13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M35),IF(ISERROR(M13),IF(ERROR.TYPE(M35)=ERROR.TYPE(M13),1,0),0),IF(ISERROR(M13),0,IF(M35=M13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m8_test(doc) -> [{userdata,[{""}]}];
not_equal_m8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m19_test(doc) -> [{userdata,[{""}]}];
not_equal_m19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m30_test(doc) -> [{userdata,[{""}]}];
not_equal_m30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m41_test(doc) -> [{userdata,[{""}]}];
not_equal_m41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m52_test(doc) -> [{userdata,[{""}]}];
not_equal_m52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M30),IF(ISERROR(M8),IF(ERROR.TYPE(M30)=ERROR.TYPE(M8),1,0),0),IF(ISERROR(M8),0,IF(M30=M8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M30),IF(ISERROR(M8),IF(ERROR.TYPE(M30)=ERROR.TYPE(M8),1,0),0),IF(ISERROR(M8),0,IF(M30=M8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m63_test(doc) -> [{userdata,[{""}]}];
not_equal_m63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M41),IF(ISERROR(M19),IF(ERROR.TYPE(M41)=ERROR.TYPE(M19),1,0),0),IF(ISERROR(M19),0,IF(M41=M19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M41),IF(ISERROR(M19),IF(ERROR.TYPE(M41)=ERROR.TYPE(M19),1,0),0),IF(ISERROR(M19),0,IF(M41=M19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m3_test(doc) -> [{userdata,[{""}]}];
not_equal_m3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m14_test(doc) -> [{userdata,[{""}]}];
not_equal_m14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m25_test(doc) -> [{userdata,[{""}]}];
not_equal_m25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m36_test(doc) -> [{userdata,[{""}]}];
not_equal_m36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m47_test(doc) -> [{userdata,[{""}]}];
not_equal_m47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M25),IF(ISERROR(M3),IF(ERROR.TYPE(M25)=ERROR.TYPE(M3),1,0),0),IF(ISERROR(M3),0,IF(M25=M3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M25),IF(ISERROR(M3),IF(ERROR.TYPE(M25)=ERROR.TYPE(M3),1,0),0),IF(ISERROR(M3),0,IF(M25=M3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m58_test(doc) -> [{userdata,[{""}]}];
not_equal_m58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M36),IF(ISERROR(M14),IF(ERROR.TYPE(M36)=ERROR.TYPE(M14),1,0),0),IF(ISERROR(M14),0,IF(M36=M14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M36),IF(ISERROR(M14),IF(ERROR.TYPE(M36)=ERROR.TYPE(M14),1,0),0),IF(ISERROR(M14),0,IF(M36=M14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m9_test(doc) -> [{userdata,[{""}]}];
not_equal_m9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m20_test(doc) -> [{userdata,[{""}]}];
not_equal_m20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m31_test(doc) -> [{userdata,[{""}]}];
not_equal_m31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m42_test(doc) -> [{userdata,[{""}]}];
not_equal_m42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m53_test(doc) -> [{userdata,[{""}]}];
not_equal_m53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M31),IF(ISERROR(M9),IF(ERROR.TYPE(M31)=ERROR.TYPE(M9),1,0),0),IF(ISERROR(M9),0,IF(M31=M9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M31),IF(ISERROR(M9),IF(ERROR.TYPE(M31)=ERROR.TYPE(M9),1,0),0),IF(ISERROR(M9),0,IF(M31=M9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m64_test(doc) -> [{userdata,[{""}]}];
not_equal_m64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M42),IF(ISERROR(M20),IF(ERROR.TYPE(M42)=ERROR.TYPE(M20),1,0),0),IF(ISERROR(M20),0,IF(M42=M20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M42),IF(ISERROR(M20),IF(ERROR.TYPE(M42)=ERROR.TYPE(M20),1,0),0),IF(ISERROR(M20),0,IF(M42=M20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m4_test(doc) -> [{userdata,[{""}]}];
not_equal_m4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m15_test(doc) -> [{userdata,[{""}]}];
not_equal_m15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m26_test(doc) -> [{userdata,[{""}]}];
not_equal_m26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m37_test(doc) -> [{userdata,[{""}]}];
not_equal_m37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m48_test(doc) -> [{userdata,[{""}]}];
not_equal_m48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M26),IF(ISERROR(M4),IF(ERROR.TYPE(M26)=ERROR.TYPE(M4),1,0),0),IF(ISERROR(M4),0,IF(M26=M4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M26),IF(ISERROR(M4),IF(ERROR.TYPE(M26)=ERROR.TYPE(M4),1,0),0),IF(ISERROR(M4),0,IF(M26=M4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m59_test(doc) -> [{userdata,[{""}]}];
not_equal_m59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M37),IF(ISERROR(M15),IF(ERROR.TYPE(M37)=ERROR.TYPE(M15),1,0),0),IF(ISERROR(M15),0,IF(M37=M15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M37),IF(ISERROR(M15),IF(ERROR.TYPE(M37)=ERROR.TYPE(M15),1,0),0),IF(ISERROR(M15),0,IF(M37=M15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m10_test(doc) -> [{userdata,[{""}]}];
not_equal_m10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m21_test(doc) -> [{userdata,[{""}]}];
not_equal_m21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>M$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>M$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m32_test(doc) -> [{userdata,[{""}]}];
not_equal_m32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m43_test(doc) -> [{userdata,[{""}]}];
not_equal_m43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m54_test(doc) -> [{userdata,[{""}]}];
not_equal_m54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M32),IF(ISERROR(M10),IF(ERROR.TYPE(M32)=ERROR.TYPE(M10),1,0),0),IF(ISERROR(M10),0,IF(M32=M10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M32),IF(ISERROR(M10),IF(ERROR.TYPE(M32)=ERROR.TYPE(M10),1,0),0),IF(ISERROR(M10),0,IF(M32=M10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_m65_test(doc) -> [{userdata,[{""}]}];
not_equal_m65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,12}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,12}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(M43),IF(ISERROR(M21),IF(ERROR.TYPE(M43)=ERROR.TYPE(M21),1,0),0),IF(ISERROR(M21),0,IF(M43=M21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(M43),IF(ISERROR(M21),IF(ERROR.TYPE(M43)=ERROR.TYPE(M21),1,0),0),IF(ISERROR(M21),0,IF(M43=M21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c5_test(doc) -> [{userdata,[{""}]}];
not_equal_c5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c16_test(doc) -> [{userdata,[{""}]}];
not_equal_c16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c27_test(doc) -> [{userdata,[{""}]}];
not_equal_c27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c38_test(doc) -> [{userdata,[{""}]}];
not_equal_c38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c49_test(doc) -> [{userdata,[{""}]}];
not_equal_c49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C27),IF(ISERROR(C5),IF(ERROR.TYPE(C27)=ERROR.TYPE(C5),1,0),0),IF(ISERROR(C5),0,IF(C27=C5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C27),IF(ISERROR(C5),IF(ERROR.TYPE(C27)=ERROR.TYPE(C5),1,0),0),IF(ISERROR(C5),0,IF(C27=C5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c60_test(doc) -> [{userdata,[{""}]}];
not_equal_c60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C38),IF(ISERROR(C16),IF(ERROR.TYPE(C38)=ERROR.TYPE(C16),1,0),0),IF(ISERROR(C16),0,IF(C38=C16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C38),IF(ISERROR(C16),IF(ERROR.TYPE(C38)=ERROR.TYPE(C16),1,0),0),IF(ISERROR(C16),0,IF(C38=C16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c11_test(doc) -> [{userdata,[{""}]}];
not_equal_c11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c22_test(doc) -> [{userdata,[{""}]}];
not_equal_c22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c33_test(doc) -> [{userdata,[{""}]}];
not_equal_c33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c44_test(doc) -> [{userdata,[{""}]}];
not_equal_c44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c55_test(doc) -> [{userdata,[{""}]}];
not_equal_c55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C33),IF(ISERROR(C11),IF(ERROR.TYPE(C33)=ERROR.TYPE(C11),1,0),0),IF(ISERROR(C11),0,IF(C33=C11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C33),IF(ISERROR(C11),IF(ERROR.TYPE(C33)=ERROR.TYPE(C11),1,0),0),IF(ISERROR(C11),0,IF(C33=C11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c66_test(doc) -> [{userdata,[{""}]}];
not_equal_c66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C44),IF(ISERROR(C22),IF(ERROR.TYPE(C44)=ERROR.TYPE(C22),1,0),0),IF(ISERROR(C22),0,IF(C44=C22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C44),IF(ISERROR(C22),IF(ERROR.TYPE(C44)=ERROR.TYPE(C22),1,0),0),IF(ISERROR(C22),0,IF(C44=C22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c6_test(doc) -> [{userdata,[{""}]}];
not_equal_c6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c17_test(doc) -> [{userdata,[{""}]}];
not_equal_c17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c28_test(doc) -> [{userdata,[{""}]}];
not_equal_c28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c39_test(doc) -> [{userdata,[{""}]}];
not_equal_c39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c50_test(doc) -> [{userdata,[{""}]}];
not_equal_c50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C28),IF(ISERROR(C6),IF(ERROR.TYPE(C28)=ERROR.TYPE(C6),1,0),0),IF(ISERROR(C6),0,IF(C28=C6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C28),IF(ISERROR(C6),IF(ERROR.TYPE(C28)=ERROR.TYPE(C6),1,0),0),IF(ISERROR(C6),0,IF(C28=C6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c61_test(doc) -> [{userdata,[{""}]}];
not_equal_c61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C39),IF(ISERROR(C17),IF(ERROR.TYPE(C39)=ERROR.TYPE(C17),1,0),0),IF(ISERROR(C17),0,IF(C39=C17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C39),IF(ISERROR(C17),IF(ERROR.TYPE(C39)=ERROR.TYPE(C17),1,0),0),IF(ISERROR(C17),0,IF(C39=C17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c1_test(doc) -> [{userdata,[{""}]}];
not_equal_c1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Blank"}]),
      test_util:expected2(Msg, {string,"Blank"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c12_test(doc) -> [{userdata,[{""}]}];
not_equal_c12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c34_test(doc) -> [{userdata,[{""}]}];
not_equal_c34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c56_test(doc) -> [{userdata,[{""}]}];
not_equal_c56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C34),IF(ISERROR(C12),IF(ERROR.TYPE(C34)=ERROR.TYPE(C12),1,0),0),IF(ISERROR(C12),0,IF(C34=C12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C34),IF(ISERROR(C12),IF(ERROR.TYPE(C34)=ERROR.TYPE(C12),1,0),0),IF(ISERROR(C12),0,IF(C34=C12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c7_test(doc) -> [{userdata,[{""}]}];
not_equal_c7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c18_test(doc) -> [{userdata,[{""}]}];
not_equal_c18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c29_test(doc) -> [{userdata,[{""}]}];
not_equal_c29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c40_test(doc) -> [{userdata,[{""}]}];
not_equal_c40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c51_test(doc) -> [{userdata,[{""}]}];
not_equal_c51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C29),IF(ISERROR(C7),IF(ERROR.TYPE(C29)=ERROR.TYPE(C7),1,0),0),IF(ISERROR(C7),0,IF(C29=C7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C29),IF(ISERROR(C7),IF(ERROR.TYPE(C29)=ERROR.TYPE(C7),1,0),0),IF(ISERROR(C7),0,IF(C29=C7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c62_test(doc) -> [{userdata,[{""}]}];
not_equal_c62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C40),IF(ISERROR(C18),IF(ERROR.TYPE(C40)=ERROR.TYPE(C18),1,0),0),IF(ISERROR(C18),0,IF(C40=C18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C40),IF(ISERROR(C18),IF(ERROR.TYPE(C40)=ERROR.TYPE(C18),1,0),0),IF(ISERROR(C18),0,IF(C40=C18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c13_test(doc) -> [{userdata,[{""}]}];
not_equal_c13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c35_test(doc) -> [{userdata,[{""}]}];
not_equal_c35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c57_test(doc) -> [{userdata,[{""}]}];
not_equal_c57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C35),IF(ISERROR(C13),IF(ERROR.TYPE(C35)=ERROR.TYPE(C13),1,0),0),IF(ISERROR(C13),0,IF(C35=C13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C35),IF(ISERROR(C13),IF(ERROR.TYPE(C35)=ERROR.TYPE(C13),1,0),0),IF(ISERROR(C13),0,IF(C35=C13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c8_test(doc) -> [{userdata,[{""}]}];
not_equal_c8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c19_test(doc) -> [{userdata,[{""}]}];
not_equal_c19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c30_test(doc) -> [{userdata,[{""}]}];
not_equal_c30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c41_test(doc) -> [{userdata,[{""}]}];
not_equal_c41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c52_test(doc) -> [{userdata,[{""}]}];
not_equal_c52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C30),IF(ISERROR(C8),IF(ERROR.TYPE(C30)=ERROR.TYPE(C8),1,0),0),IF(ISERROR(C8),0,IF(C30=C8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C30),IF(ISERROR(C8),IF(ERROR.TYPE(C30)=ERROR.TYPE(C8),1,0),0),IF(ISERROR(C8),0,IF(C30=C8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c63_test(doc) -> [{userdata,[{""}]}];
not_equal_c63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C41),IF(ISERROR(C19),IF(ERROR.TYPE(C41)=ERROR.TYPE(C19),1,0),0),IF(ISERROR(C19),0,IF(C41=C19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C41),IF(ISERROR(C19),IF(ERROR.TYPE(C41)=ERROR.TYPE(C19),1,0),0),IF(ISERROR(C19),0,IF(C41=C19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c3_test(doc) -> [{userdata,[{""}]}];
not_equal_c3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c14_test(doc) -> [{userdata,[{""}]}];
not_equal_c14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c25_test(doc) -> [{userdata,[{""}]}];
not_equal_c25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c36_test(doc) -> [{userdata,[{""}]}];
not_equal_c36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c47_test(doc) -> [{userdata,[{""}]}];
not_equal_c47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C25),IF(ISERROR(C3),IF(ERROR.TYPE(C25)=ERROR.TYPE(C3),1,0),0),IF(ISERROR(C3),0,IF(C25=C3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C25),IF(ISERROR(C3),IF(ERROR.TYPE(C25)=ERROR.TYPE(C3),1,0),0),IF(ISERROR(C3),0,IF(C25=C3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c58_test(doc) -> [{userdata,[{""}]}];
not_equal_c58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C36),IF(ISERROR(C14),IF(ERROR.TYPE(C36)=ERROR.TYPE(C14),1,0),0),IF(ISERROR(C14),0,IF(C36=C14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C36),IF(ISERROR(C14),IF(ERROR.TYPE(C36)=ERROR.TYPE(C14),1,0),0),IF(ISERROR(C14),0,IF(C36=C14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c9_test(doc) -> [{userdata,[{""}]}];
not_equal_c9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c20_test(doc) -> [{userdata,[{""}]}];
not_equal_c20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c31_test(doc) -> [{userdata,[{""}]}];
not_equal_c31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c42_test(doc) -> [{userdata,[{""}]}];
not_equal_c42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c53_test(doc) -> [{userdata,[{""}]}];
not_equal_c53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C31),IF(ISERROR(C9),IF(ERROR.TYPE(C31)=ERROR.TYPE(C9),1,0),0),IF(ISERROR(C9),0,IF(C31=C9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C31),IF(ISERROR(C9),IF(ERROR.TYPE(C31)=ERROR.TYPE(C9),1,0),0),IF(ISERROR(C9),0,IF(C31=C9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c64_test(doc) -> [{userdata,[{""}]}];
not_equal_c64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C42),IF(ISERROR(C20),IF(ERROR.TYPE(C42)=ERROR.TYPE(C20),1,0),0),IF(ISERROR(C20),0,IF(C42=C20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C42),IF(ISERROR(C20),IF(ERROR.TYPE(C42)=ERROR.TYPE(C20),1,0),0),IF(ISERROR(C20),0,IF(C42=C20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c4_test(doc) -> [{userdata,[{""}]}];
not_equal_c4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c15_test(doc) -> [{userdata,[{""}]}];
not_equal_c15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c26_test(doc) -> [{userdata,[{""}]}];
not_equal_c26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c37_test(doc) -> [{userdata,[{""}]}];
not_equal_c37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c48_test(doc) -> [{userdata,[{""}]}];
not_equal_c48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C26),IF(ISERROR(C4),IF(ERROR.TYPE(C26)=ERROR.TYPE(C4),1,0),0),IF(ISERROR(C4),0,IF(C26=C4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C26),IF(ISERROR(C4),IF(ERROR.TYPE(C26)=ERROR.TYPE(C4),1,0),0),IF(ISERROR(C4),0,IF(C26=C4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c59_test(doc) -> [{userdata,[{""}]}];
not_equal_c59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C37),IF(ISERROR(C15),IF(ERROR.TYPE(C37)=ERROR.TYPE(C15),1,0),0),IF(ISERROR(C15),0,IF(C37=C15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C37),IF(ISERROR(C15),IF(ERROR.TYPE(C37)=ERROR.TYPE(C15),1,0),0),IF(ISERROR(C15),0,IF(C37=C15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c10_test(doc) -> [{userdata,[{""}]}];
not_equal_c10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c21_test(doc) -> [{userdata,[{""}]}];
not_equal_c21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>C$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>C$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c32_test(doc) -> [{userdata,[{""}]}];
not_equal_c32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c43_test(doc) -> [{userdata,[{""}]}];
not_equal_c43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c54_test(doc) -> [{userdata,[{""}]}];
not_equal_c54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C32),IF(ISERROR(C10),IF(ERROR.TYPE(C32)=ERROR.TYPE(C10),1,0),0),IF(ISERROR(C10),0,IF(C32=C10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C32),IF(ISERROR(C10),IF(ERROR.TYPE(C32)=ERROR.TYPE(C10),1,0),0),IF(ISERROR(C10),0,IF(C32=C10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_c65_test(doc) -> [{userdata,[{""}]}];
not_equal_c65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,2}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,2}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(C43),IF(ISERROR(C21),IF(ERROR.TYPE(C43)=ERROR.TYPE(C21),1,0),0),IF(ISERROR(C21),0,IF(C43=C21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(C43),IF(ISERROR(C21),IF(ERROR.TYPE(C43)=ERROR.TYPE(C21),1,0),0),IF(ISERROR(C21),0,IF(C43=C21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n5_test(doc) -> [{userdata,[{""}]}];
not_equal_n5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n16_test(doc) -> [{userdata,[{""}]}];
not_equal_n16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n27_test(doc) -> [{userdata,[{""}]}];
not_equal_n27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n38_test(doc) -> [{userdata,[{""}]}];
not_equal_n38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n49_test(doc) -> [{userdata,[{""}]}];
not_equal_n49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N27),IF(ISERROR(N5),IF(ERROR.TYPE(N27)=ERROR.TYPE(N5),1,0),0),IF(ISERROR(N5),0,IF(N27=N5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N27),IF(ISERROR(N5),IF(ERROR.TYPE(N27)=ERROR.TYPE(N5),1,0),0),IF(ISERROR(N5),0,IF(N27=N5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n60_test(doc) -> [{userdata,[{""}]}];
not_equal_n60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N38),IF(ISERROR(N16),IF(ERROR.TYPE(N38)=ERROR.TYPE(N16),1,0),0),IF(ISERROR(N16),0,IF(N38=N16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N38),IF(ISERROR(N16),IF(ERROR.TYPE(N38)=ERROR.TYPE(N16),1,0),0),IF(ISERROR(N16),0,IF(N38=N16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n11_test(doc) -> [{userdata,[{""}]}];
not_equal_n11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n22_test(doc) -> [{userdata,[{""}]}];
not_equal_n22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n33_test(doc) -> [{userdata,[{""}]}];
not_equal_n33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n44_test(doc) -> [{userdata,[{""}]}];
not_equal_n44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n55_test(doc) -> [{userdata,[{""}]}];
not_equal_n55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N33),IF(ISERROR(N11),IF(ERROR.TYPE(N33)=ERROR.TYPE(N11),1,0),0),IF(ISERROR(N11),0,IF(N33=N11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N33),IF(ISERROR(N11),IF(ERROR.TYPE(N33)=ERROR.TYPE(N11),1,0),0),IF(ISERROR(N11),0,IF(N33=N11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n66_test(doc) -> [{userdata,[{""}]}];
not_equal_n66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N44),IF(ISERROR(N22),IF(ERROR.TYPE(N44)=ERROR.TYPE(N22),1,0),0),IF(ISERROR(N22),0,IF(N44=N22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N44),IF(ISERROR(N22),IF(ERROR.TYPE(N44)=ERROR.TYPE(N22),1,0),0),IF(ISERROR(N22),0,IF(N44=N22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n6_test(doc) -> [{userdata,[{""}]}];
not_equal_n6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n17_test(doc) -> [{userdata,[{""}]}];
not_equal_n17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n28_test(doc) -> [{userdata,[{""}]}];
not_equal_n28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n39_test(doc) -> [{userdata,[{""}]}];
not_equal_n39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n50_test(doc) -> [{userdata,[{""}]}];
not_equal_n50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N28),IF(ISERROR(N6),IF(ERROR.TYPE(N28)=ERROR.TYPE(N6),1,0),0),IF(ISERROR(N6),0,IF(N28=N6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N28),IF(ISERROR(N6),IF(ERROR.TYPE(N28)=ERROR.TYPE(N6),1,0),0),IF(ISERROR(N6),0,IF(N28=N6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n61_test(doc) -> [{userdata,[{""}]}];
not_equal_n61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N39),IF(ISERROR(N17),IF(ERROR.TYPE(N39)=ERROR.TYPE(N17),1,0),0),IF(ISERROR(N17),0,IF(N39=N17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N39),IF(ISERROR(N17),IF(ERROR.TYPE(N39)=ERROR.TYPE(N17),1,0),0),IF(ISERROR(N17),0,IF(N39=N17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n1_test(doc) -> [{userdata,[{""}]}];
not_equal_n1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"String"}]),
      test_util:expected2(Msg, {string,"String"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n12_test(doc) -> [{userdata,[{""}]}];
not_equal_n12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n34_test(doc) -> [{userdata,[{""}]}];
not_equal_n34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n56_test(doc) -> [{userdata,[{""}]}];
not_equal_n56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N34),IF(ISERROR(N12),IF(ERROR.TYPE(N34)=ERROR.TYPE(N12),1,0),0),IF(ISERROR(N12),0,IF(N34=N12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N34),IF(ISERROR(N12),IF(ERROR.TYPE(N34)=ERROR.TYPE(N12),1,0),0),IF(ISERROR(N12),0,IF(N34=N12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n7_test(doc) -> [{userdata,[{""}]}];
not_equal_n7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n18_test(doc) -> [{userdata,[{""}]}];
not_equal_n18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n29_test(doc) -> [{userdata,[{""}]}];
not_equal_n29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n40_test(doc) -> [{userdata,[{""}]}];
not_equal_n40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n51_test(doc) -> [{userdata,[{""}]}];
not_equal_n51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N29),IF(ISERROR(N7),IF(ERROR.TYPE(N29)=ERROR.TYPE(N7),1,0),0),IF(ISERROR(N7),0,IF(N29=N7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N29),IF(ISERROR(N7),IF(ERROR.TYPE(N29)=ERROR.TYPE(N7),1,0),0),IF(ISERROR(N7),0,IF(N29=N7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n62_test(doc) -> [{userdata,[{""}]}];
not_equal_n62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N40),IF(ISERROR(N18),IF(ERROR.TYPE(N40)=ERROR.TYPE(N18),1,0),0),IF(ISERROR(N18),0,IF(N40=N18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N40),IF(ISERROR(N18),IF(ERROR.TYPE(N40)=ERROR.TYPE(N18),1,0),0),IF(ISERROR(N18),0,IF(N40=N18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n2_test(doc) -> [{userdata,[{""}]}];
not_equal_n2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Doug"}]),
      test_util:expected2(Msg, {string,"Doug"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n13_test(doc) -> [{userdata,[{""}]}];
not_equal_n13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n35_test(doc) -> [{userdata,[{""}]}];
not_equal_n35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n57_test(doc) -> [{userdata,[{""}]}];
not_equal_n57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N35),IF(ISERROR(N13),IF(ERROR.TYPE(N35)=ERROR.TYPE(N13),1,0),0),IF(ISERROR(N13),0,IF(N35=N13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N35),IF(ISERROR(N13),IF(ERROR.TYPE(N35)=ERROR.TYPE(N13),1,0),0),IF(ISERROR(N13),0,IF(N35=N13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n8_test(doc) -> [{userdata,[{""}]}];
not_equal_n8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n19_test(doc) -> [{userdata,[{""}]}];
not_equal_n19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n30_test(doc) -> [{userdata,[{""}]}];
not_equal_n30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n41_test(doc) -> [{userdata,[{""}]}];
not_equal_n41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n52_test(doc) -> [{userdata,[{""}]}];
not_equal_n52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N30),IF(ISERROR(N8),IF(ERROR.TYPE(N30)=ERROR.TYPE(N8),1,0),0),IF(ISERROR(N8),0,IF(N30=N8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N30),IF(ISERROR(N8),IF(ERROR.TYPE(N30)=ERROR.TYPE(N8),1,0),0),IF(ISERROR(N8),0,IF(N30=N8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n63_test(doc) -> [{userdata,[{""}]}];
not_equal_n63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N41),IF(ISERROR(N19),IF(ERROR.TYPE(N41)=ERROR.TYPE(N19),1,0),0),IF(ISERROR(N19),0,IF(N41=N19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N41),IF(ISERROR(N19),IF(ERROR.TYPE(N41)=ERROR.TYPE(N19),1,0),0),IF(ISERROR(N19),0,IF(N41=N19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n3_test(doc) -> [{userdata,[{""}]}];
not_equal_n3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n14_test(doc) -> [{userdata,[{""}]}];
not_equal_n14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n25_test(doc) -> [{userdata,[{""}]}];
not_equal_n25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n36_test(doc) -> [{userdata,[{""}]}];
not_equal_n36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n47_test(doc) -> [{userdata,[{""}]}];
not_equal_n47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N25),IF(ISERROR(N3),IF(ERROR.TYPE(N25)=ERROR.TYPE(N3),1,0),0),IF(ISERROR(N3),0,IF(N25=N3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N25),IF(ISERROR(N3),IF(ERROR.TYPE(N25)=ERROR.TYPE(N3),1,0),0),IF(ISERROR(N3),0,IF(N25=N3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n58_test(doc) -> [{userdata,[{""}]}];
not_equal_n58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N36),IF(ISERROR(N14),IF(ERROR.TYPE(N36)=ERROR.TYPE(N14),1,0),0),IF(ISERROR(N14),0,IF(N36=N14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N36),IF(ISERROR(N14),IF(ERROR.TYPE(N36)=ERROR.TYPE(N14),1,0),0),IF(ISERROR(N14),0,IF(N36=N14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n9_test(doc) -> [{userdata,[{""}]}];
not_equal_n9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n20_test(doc) -> [{userdata,[{""}]}];
not_equal_n20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n31_test(doc) -> [{userdata,[{""}]}];
not_equal_n31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n42_test(doc) -> [{userdata,[{""}]}];
not_equal_n42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n53_test(doc) -> [{userdata,[{""}]}];
not_equal_n53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N31),IF(ISERROR(N9),IF(ERROR.TYPE(N31)=ERROR.TYPE(N9),1,0),0),IF(ISERROR(N9),0,IF(N31=N9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N31),IF(ISERROR(N9),IF(ERROR.TYPE(N31)=ERROR.TYPE(N9),1,0),0),IF(ISERROR(N9),0,IF(N31=N9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n64_test(doc) -> [{userdata,[{""}]}];
not_equal_n64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N42),IF(ISERROR(N20),IF(ERROR.TYPE(N42)=ERROR.TYPE(N20),1,0),0),IF(ISERROR(N20),0,IF(N42=N20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N42),IF(ISERROR(N20),IF(ERROR.TYPE(N42)=ERROR.TYPE(N20),1,0),0),IF(ISERROR(N20),0,IF(N42=N20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n4_test(doc) -> [{userdata,[{""}]}];
not_equal_n4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n15_test(doc) -> [{userdata,[{""}]}];
not_equal_n15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n26_test(doc) -> [{userdata,[{""}]}];
not_equal_n26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n37_test(doc) -> [{userdata,[{""}]}];
not_equal_n37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n48_test(doc) -> [{userdata,[{""}]}];
not_equal_n48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N26),IF(ISERROR(N4),IF(ERROR.TYPE(N26)=ERROR.TYPE(N4),1,0),0),IF(ISERROR(N4),0,IF(N26=N4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N26),IF(ISERROR(N4),IF(ERROR.TYPE(N26)=ERROR.TYPE(N4),1,0),0),IF(ISERROR(N4),0,IF(N26=N4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n59_test(doc) -> [{userdata,[{""}]}];
not_equal_n59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N37),IF(ISERROR(N15),IF(ERROR.TYPE(N37)=ERROR.TYPE(N15),1,0),0),IF(ISERROR(N15),0,IF(N37=N15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N37),IF(ISERROR(N15),IF(ERROR.TYPE(N37)=ERROR.TYPE(N15),1,0),0),IF(ISERROR(N15),0,IF(N37=N15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n10_test(doc) -> [{userdata,[{""}]}];
not_equal_n10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n21_test(doc) -> [{userdata,[{""}]}];
not_equal_n21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>N$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>N$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n32_test(doc) -> [{userdata,[{""}]}];
not_equal_n32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n43_test(doc) -> [{userdata,[{""}]}];
not_equal_n43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n54_test(doc) -> [{userdata,[{""}]}];
not_equal_n54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N32),IF(ISERROR(N10),IF(ERROR.TYPE(N32)=ERROR.TYPE(N10),1,0),0),IF(ISERROR(N10),0,IF(N32=N10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N32),IF(ISERROR(N10),IF(ERROR.TYPE(N32)=ERROR.TYPE(N10),1,0),0),IF(ISERROR(N10),0,IF(N32=N10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_n65_test(doc) -> [{userdata,[{""}]}];
not_equal_n65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,13}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,13}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(N43),IF(ISERROR(N21),IF(ERROR.TYPE(N43)=ERROR.TYPE(N21),1,0),0),IF(ISERROR(N21),0,IF(N43=N21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(N43),IF(ISERROR(N21),IF(ERROR.TYPE(N43)=ERROR.TYPE(N21),1,0),0),IF(ISERROR(N21),0,IF(N43=N21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d5_test(doc) -> [{userdata,[{""}]}];
not_equal_d5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d16_test(doc) -> [{userdata,[{""}]}];
not_equal_d16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d27_test(doc) -> [{userdata,[{""}]}];
not_equal_d27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d38_test(doc) -> [{userdata,[{""}]}];
not_equal_d38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d49_test(doc) -> [{userdata,[{""}]}];
not_equal_d49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D27),IF(ISERROR(D5),IF(ERROR.TYPE(D27)=ERROR.TYPE(D5),1,0),0),IF(ISERROR(D5),0,IF(D27=D5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D27),IF(ISERROR(D5),IF(ERROR.TYPE(D27)=ERROR.TYPE(D5),1,0),0),IF(ISERROR(D5),0,IF(D27=D5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d60_test(doc) -> [{userdata,[{""}]}];
not_equal_d60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D38),IF(ISERROR(D16),IF(ERROR.TYPE(D38)=ERROR.TYPE(D16),1,0),0),IF(ISERROR(D16),0,IF(D38=D16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D38),IF(ISERROR(D16),IF(ERROR.TYPE(D38)=ERROR.TYPE(D16),1,0),0),IF(ISERROR(D16),0,IF(D38=D16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d11_test(doc) -> [{userdata,[{""}]}];
not_equal_d11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d22_test(doc) -> [{userdata,[{""}]}];
not_equal_d22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d33_test(doc) -> [{userdata,[{""}]}];
not_equal_d33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d44_test(doc) -> [{userdata,[{""}]}];
not_equal_d44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d55_test(doc) -> [{userdata,[{""}]}];
not_equal_d55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D33),IF(ISERROR(D11),IF(ERROR.TYPE(D33)=ERROR.TYPE(D11),1,0),0),IF(ISERROR(D11),0,IF(D33=D11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D33),IF(ISERROR(D11),IF(ERROR.TYPE(D33)=ERROR.TYPE(D11),1,0),0),IF(ISERROR(D11),0,IF(D33=D11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d66_test(doc) -> [{userdata,[{""}]}];
not_equal_d66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D44),IF(ISERROR(D22),IF(ERROR.TYPE(D44)=ERROR.TYPE(D22),1,0),0),IF(ISERROR(D22),0,IF(D44=D22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D44),IF(ISERROR(D22),IF(ERROR.TYPE(D44)=ERROR.TYPE(D22),1,0),0),IF(ISERROR(D22),0,IF(D44=D22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d6_test(doc) -> [{userdata,[{""}]}];
not_equal_d6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d17_test(doc) -> [{userdata,[{""}]}];
not_equal_d17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d28_test(doc) -> [{userdata,[{""}]}];
not_equal_d28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d39_test(doc) -> [{userdata,[{""}]}];
not_equal_d39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d50_test(doc) -> [{userdata,[{""}]}];
not_equal_d50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D28),IF(ISERROR(D6),IF(ERROR.TYPE(D28)=ERROR.TYPE(D6),1,0),0),IF(ISERROR(D6),0,IF(D28=D6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D28),IF(ISERROR(D6),IF(ERROR.TYPE(D28)=ERROR.TYPE(D6),1,0),0),IF(ISERROR(D6),0,IF(D28=D6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d61_test(doc) -> [{userdata,[{""}]}];
not_equal_d61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D39),IF(ISERROR(D17),IF(ERROR.TYPE(D39)=ERROR.TYPE(D17),1,0),0),IF(ISERROR(D17),0,IF(D39=D17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D39),IF(ISERROR(D17),IF(ERROR.TYPE(D39)=ERROR.TYPE(D17),1,0),0),IF(ISERROR(D17),0,IF(D39=D17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d1_test(doc) -> [{userdata,[{""}]}];
not_equal_d1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Boolean"}]),
      test_util:expected2(Msg, {string,"Boolean"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d12_test(doc) -> [{userdata,[{""}]}];
not_equal_d12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d34_test(doc) -> [{userdata,[{""}]}];
not_equal_d34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d56_test(doc) -> [{userdata,[{""}]}];
not_equal_d56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D34),IF(ISERROR(D12),IF(ERROR.TYPE(D34)=ERROR.TYPE(D12),1,0),0),IF(ISERROR(D12),0,IF(D34=D12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D34),IF(ISERROR(D12),IF(ERROR.TYPE(D34)=ERROR.TYPE(D12),1,0),0),IF(ISERROR(D12),0,IF(D34=D12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d7_test(doc) -> [{userdata,[{""}]}];
not_equal_d7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d18_test(doc) -> [{userdata,[{""}]}];
not_equal_d18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d29_test(doc) -> [{userdata,[{""}]}];
not_equal_d29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d40_test(doc) -> [{userdata,[{""}]}];
not_equal_d40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d51_test(doc) -> [{userdata,[{""}]}];
not_equal_d51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D29),IF(ISERROR(D7),IF(ERROR.TYPE(D29)=ERROR.TYPE(D7),1,0),0),IF(ISERROR(D7),0,IF(D29=D7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D29),IF(ISERROR(D7),IF(ERROR.TYPE(D29)=ERROR.TYPE(D7),1,0),0),IF(ISERROR(D7),0,IF(D29=D7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d62_test(doc) -> [{userdata,[{""}]}];
not_equal_d62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D40),IF(ISERROR(D18),IF(ERROR.TYPE(D40)=ERROR.TYPE(D18),1,0),0),IF(ISERROR(D18),0,IF(D40=D18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D40),IF(ISERROR(D18),IF(ERROR.TYPE(D40)=ERROR.TYPE(D18),1,0),0),IF(ISERROR(D18),0,IF(D40=D18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d2_test(doc) -> [{userdata,[{""}]}];
not_equal_d2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=(1=1)"}]),
      test_util:expected2(Msg, {formula,"=(1=1)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d13_test(doc) -> [{userdata,[{""}]}];
not_equal_d13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d35_test(doc) -> [{userdata,[{""}]}];
not_equal_d35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d57_test(doc) -> [{userdata,[{""}]}];
not_equal_d57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D35),IF(ISERROR(D13),IF(ERROR.TYPE(D35)=ERROR.TYPE(D13),1,0),0),IF(ISERROR(D13),0,IF(D35=D13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D35),IF(ISERROR(D13),IF(ERROR.TYPE(D35)=ERROR.TYPE(D13),1,0),0),IF(ISERROR(D13),0,IF(D35=D13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d8_test(doc) -> [{userdata,[{""}]}];
not_equal_d8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d19_test(doc) -> [{userdata,[{""}]}];
not_equal_d19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d30_test(doc) -> [{userdata,[{""}]}];
not_equal_d30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d41_test(doc) -> [{userdata,[{""}]}];
not_equal_d41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d52_test(doc) -> [{userdata,[{""}]}];
not_equal_d52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D30),IF(ISERROR(D8),IF(ERROR.TYPE(D30)=ERROR.TYPE(D8),1,0),0),IF(ISERROR(D8),0,IF(D30=D8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D30),IF(ISERROR(D8),IF(ERROR.TYPE(D30)=ERROR.TYPE(D8),1,0),0),IF(ISERROR(D8),0,IF(D30=D8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d63_test(doc) -> [{userdata,[{""}]}];
not_equal_d63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D41),IF(ISERROR(D19),IF(ERROR.TYPE(D41)=ERROR.TYPE(D19),1,0),0),IF(ISERROR(D19),0,IF(D41=D19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D41),IF(ISERROR(D19),IF(ERROR.TYPE(D41)=ERROR.TYPE(D19),1,0),0),IF(ISERROR(D19),0,IF(D41=D19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d3_test(doc) -> [{userdata,[{""}]}];
not_equal_d3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d14_test(doc) -> [{userdata,[{""}]}];
not_equal_d14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d25_test(doc) -> [{userdata,[{""}]}];
not_equal_d25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d36_test(doc) -> [{userdata,[{""}]}];
not_equal_d36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d47_test(doc) -> [{userdata,[{""}]}];
not_equal_d47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D25),IF(ISERROR(D3),IF(ERROR.TYPE(D25)=ERROR.TYPE(D3),1,0),0),IF(ISERROR(D3),0,IF(D25=D3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D25),IF(ISERROR(D3),IF(ERROR.TYPE(D25)=ERROR.TYPE(D3),1,0),0),IF(ISERROR(D3),0,IF(D25=D3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d58_test(doc) -> [{userdata,[{""}]}];
not_equal_d58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D36),IF(ISERROR(D14),IF(ERROR.TYPE(D36)=ERROR.TYPE(D14),1,0),0),IF(ISERROR(D14),0,IF(D36=D14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D36),IF(ISERROR(D14),IF(ERROR.TYPE(D36)=ERROR.TYPE(D14),1,0),0),IF(ISERROR(D14),0,IF(D36=D14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d9_test(doc) -> [{userdata,[{""}]}];
not_equal_d9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d20_test(doc) -> [{userdata,[{""}]}];
not_equal_d20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d31_test(doc) -> [{userdata,[{""}]}];
not_equal_d31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d42_test(doc) -> [{userdata,[{""}]}];
not_equal_d42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d53_test(doc) -> [{userdata,[{""}]}];
not_equal_d53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D31),IF(ISERROR(D9),IF(ERROR.TYPE(D31)=ERROR.TYPE(D9),1,0),0),IF(ISERROR(D9),0,IF(D31=D9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D31),IF(ISERROR(D9),IF(ERROR.TYPE(D31)=ERROR.TYPE(D9),1,0),0),IF(ISERROR(D9),0,IF(D31=D9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d64_test(doc) -> [{userdata,[{""}]}];
not_equal_d64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D42),IF(ISERROR(D20),IF(ERROR.TYPE(D42)=ERROR.TYPE(D20),1,0),0),IF(ISERROR(D20),0,IF(D42=D20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D42),IF(ISERROR(D20),IF(ERROR.TYPE(D42)=ERROR.TYPE(D20),1,0),0),IF(ISERROR(D20),0,IF(D42=D20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d4_test(doc) -> [{userdata,[{""}]}];
not_equal_d4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d15_test(doc) -> [{userdata,[{""}]}];
not_equal_d15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d26_test(doc) -> [{userdata,[{""}]}];
not_equal_d26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d37_test(doc) -> [{userdata,[{""}]}];
not_equal_d37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d48_test(doc) -> [{userdata,[{""}]}];
not_equal_d48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D26),IF(ISERROR(D4),IF(ERROR.TYPE(D26)=ERROR.TYPE(D4),1,0),0),IF(ISERROR(D4),0,IF(D26=D4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D26),IF(ISERROR(D4),IF(ERROR.TYPE(D26)=ERROR.TYPE(D4),1,0),0),IF(ISERROR(D4),0,IF(D26=D4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d59_test(doc) -> [{userdata,[{""}]}];
not_equal_d59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D37),IF(ISERROR(D15),IF(ERROR.TYPE(D37)=ERROR.TYPE(D15),1,0),0),IF(ISERROR(D15),0,IF(D37=D15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D37),IF(ISERROR(D15),IF(ERROR.TYPE(D37)=ERROR.TYPE(D15),1,0),0),IF(ISERROR(D15),0,IF(D37=D15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d10_test(doc) -> [{userdata,[{""}]}];
not_equal_d10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d21_test(doc) -> [{userdata,[{""}]}];
not_equal_d21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>D$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>D$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d32_test(doc) -> [{userdata,[{""}]}];
not_equal_d32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d43_test(doc) -> [{userdata,[{""}]}];
not_equal_d43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d54_test(doc) -> [{userdata,[{""}]}];
not_equal_d54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D32),IF(ISERROR(D10),IF(ERROR.TYPE(D32)=ERROR.TYPE(D10),1,0),0),IF(ISERROR(D10),0,IF(D32=D10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D32),IF(ISERROR(D10),IF(ERROR.TYPE(D32)=ERROR.TYPE(D10),1,0),0),IF(ISERROR(D10),0,IF(D32=D10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_d65_test(doc) -> [{userdata,[{""}]}];
not_equal_d65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,3}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,3}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(D43),IF(ISERROR(D21),IF(ERROR.TYPE(D43)=ERROR.TYPE(D21),1,0),0),IF(ISERROR(D21),0,IF(D43=D21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(D43),IF(ISERROR(D21),IF(ERROR.TYPE(D43)=ERROR.TYPE(D21),1,0),0),IF(ISERROR(D21),0,IF(D43=D21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o5_test(doc) -> [{userdata,[{""}]}];
not_equal_o5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o16_test(doc) -> [{userdata,[{""}]}];
not_equal_o16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o27_test(doc) -> [{userdata,[{""}]}];
not_equal_o27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o38_test(doc) -> [{userdata,[{""}]}];
not_equal_o38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o49_test(doc) -> [{userdata,[{""}]}];
not_equal_o49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O27),IF(ISERROR(O5),IF(ERROR.TYPE(O27)=ERROR.TYPE(O5),1,0),0),IF(ISERROR(O5),0,IF(O27=O5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O27),IF(ISERROR(O5),IF(ERROR.TYPE(O27)=ERROR.TYPE(O5),1,0),0),IF(ISERROR(O5),0,IF(O27=O5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o60_test(doc) -> [{userdata,[{""}]}];
not_equal_o60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O38),IF(ISERROR(O16),IF(ERROR.TYPE(O38)=ERROR.TYPE(O16),1,0),0),IF(ISERROR(O16),0,IF(O38=O16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O38),IF(ISERROR(O16),IF(ERROR.TYPE(O38)=ERROR.TYPE(O16),1,0),0),IF(ISERROR(O16),0,IF(O38=O16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o11_test(doc) -> [{userdata,[{""}]}];
not_equal_o11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o22_test(doc) -> [{userdata,[{""}]}];
not_equal_o22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o33_test(doc) -> [{userdata,[{""}]}];
not_equal_o33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o44_test(doc) -> [{userdata,[{""}]}];
not_equal_o44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o55_test(doc) -> [{userdata,[{""}]}];
not_equal_o55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O33),IF(ISERROR(O11),IF(ERROR.TYPE(O33)=ERROR.TYPE(O11),1,0),0),IF(ISERROR(O11),0,IF(O33=O11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O33),IF(ISERROR(O11),IF(ERROR.TYPE(O33)=ERROR.TYPE(O11),1,0),0),IF(ISERROR(O11),0,IF(O33=O11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o66_test(doc) -> [{userdata,[{""}]}];
not_equal_o66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O44),IF(ISERROR(O22),IF(ERROR.TYPE(O44)=ERROR.TYPE(O22),1,0),0),IF(ISERROR(O22),0,IF(O44=O22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O44),IF(ISERROR(O22),IF(ERROR.TYPE(O44)=ERROR.TYPE(O22),1,0),0),IF(ISERROR(O22),0,IF(O44=O22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o6_test(doc) -> [{userdata,[{""}]}];
not_equal_o6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o17_test(doc) -> [{userdata,[{""}]}];
not_equal_o17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o28_test(doc) -> [{userdata,[{""}]}];
not_equal_o28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o39_test(doc) -> [{userdata,[{""}]}];
not_equal_o39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o50_test(doc) -> [{userdata,[{""}]}];
not_equal_o50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O28),IF(ISERROR(O6),IF(ERROR.TYPE(O28)=ERROR.TYPE(O6),1,0),0),IF(ISERROR(O6),0,IF(O28=O6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O28),IF(ISERROR(O6),IF(ERROR.TYPE(O28)=ERROR.TYPE(O6),1,0),0),IF(ISERROR(O6),0,IF(O28=O6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o61_test(doc) -> [{userdata,[{""}]}];
not_equal_o61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O39),IF(ISERROR(O17),IF(ERROR.TYPE(O39)=ERROR.TYPE(O17),1,0),0),IF(ISERROR(O17),0,IF(O39=O17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O39),IF(ISERROR(O17),IF(ERROR.TYPE(O39)=ERROR.TYPE(O17),1,0),0),IF(ISERROR(O17),0,IF(O39=O17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o1_test(doc) -> [{userdata,[{""}]}];
not_equal_o1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"String"}]),
      test_util:expected2(Msg, {string,"String"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o12_test(doc) -> [{userdata,[{""}]}];
not_equal_o12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o34_test(doc) -> [{userdata,[{""}]}];
not_equal_o34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o56_test(doc) -> [{userdata,[{""}]}];
not_equal_o56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O34),IF(ISERROR(O12),IF(ERROR.TYPE(O34)=ERROR.TYPE(O12),1,0),0),IF(ISERROR(O12),0,IF(O34=O12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O34),IF(ISERROR(O12),IF(ERROR.TYPE(O34)=ERROR.TYPE(O12),1,0),0),IF(ISERROR(O12),0,IF(O34=O12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o7_test(doc) -> [{userdata,[{""}]}];
not_equal_o7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o18_test(doc) -> [{userdata,[{""}]}];
not_equal_o18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o29_test(doc) -> [{userdata,[{""}]}];
not_equal_o29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o40_test(doc) -> [{userdata,[{""}]}];
not_equal_o40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o51_test(doc) -> [{userdata,[{""}]}];
not_equal_o51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O29),IF(ISERROR(O7),IF(ERROR.TYPE(O29)=ERROR.TYPE(O7),1,0),0),IF(ISERROR(O7),0,IF(O29=O7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O29),IF(ISERROR(O7),IF(ERROR.TYPE(O29)=ERROR.TYPE(O7),1,0),0),IF(ISERROR(O7),0,IF(O29=O7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o62_test(doc) -> [{userdata,[{""}]}];
not_equal_o62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O40),IF(ISERROR(O18),IF(ERROR.TYPE(O40)=ERROR.TYPE(O18),1,0),0),IF(ISERROR(O18),0,IF(O40=O18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O40),IF(ISERROR(O18),IF(ERROR.TYPE(O40)=ERROR.TYPE(O18),1,0),0),IF(ISERROR(O18),0,IF(O40=O18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o2_test(doc) -> [{userdata,[{""}]}];
not_equal_o2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Bob"}]),
      test_util:expected2(Msg, {string,"Bob"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o13_test(doc) -> [{userdata,[{""}]}];
not_equal_o13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o35_test(doc) -> [{userdata,[{""}]}];
not_equal_o35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o57_test(doc) -> [{userdata,[{""}]}];
not_equal_o57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O35),IF(ISERROR(O13),IF(ERROR.TYPE(O35)=ERROR.TYPE(O13),1,0),0),IF(ISERROR(O13),0,IF(O35=O13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O35),IF(ISERROR(O13),IF(ERROR.TYPE(O35)=ERROR.TYPE(O13),1,0),0),IF(ISERROR(O13),0,IF(O35=O13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o8_test(doc) -> [{userdata,[{""}]}];
not_equal_o8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o19_test(doc) -> [{userdata,[{""}]}];
not_equal_o19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o30_test(doc) -> [{userdata,[{""}]}];
not_equal_o30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o41_test(doc) -> [{userdata,[{""}]}];
not_equal_o41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o52_test(doc) -> [{userdata,[{""}]}];
not_equal_o52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O30),IF(ISERROR(O8),IF(ERROR.TYPE(O30)=ERROR.TYPE(O8),1,0),0),IF(ISERROR(O8),0,IF(O30=O8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O30),IF(ISERROR(O8),IF(ERROR.TYPE(O30)=ERROR.TYPE(O8),1,0),0),IF(ISERROR(O8),0,IF(O30=O8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o63_test(doc) -> [{userdata,[{""}]}];
not_equal_o63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O41),IF(ISERROR(O19),IF(ERROR.TYPE(O41)=ERROR.TYPE(O19),1,0),0),IF(ISERROR(O19),0,IF(O41=O19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O41),IF(ISERROR(O19),IF(ERROR.TYPE(O41)=ERROR.TYPE(O19),1,0),0),IF(ISERROR(O19),0,IF(O41=O19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o3_test(doc) -> [{userdata,[{""}]}];
not_equal_o3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o14_test(doc) -> [{userdata,[{""}]}];
not_equal_o14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o25_test(doc) -> [{userdata,[{""}]}];
not_equal_o25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o36_test(doc) -> [{userdata,[{""}]}];
not_equal_o36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o47_test(doc) -> [{userdata,[{""}]}];
not_equal_o47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O25),IF(ISERROR(O3),IF(ERROR.TYPE(O25)=ERROR.TYPE(O3),1,0),0),IF(ISERROR(O3),0,IF(O25=O3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O25),IF(ISERROR(O3),IF(ERROR.TYPE(O25)=ERROR.TYPE(O3),1,0),0),IF(ISERROR(O3),0,IF(O25=O3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o58_test(doc) -> [{userdata,[{""}]}];
not_equal_o58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O36),IF(ISERROR(O14),IF(ERROR.TYPE(O36)=ERROR.TYPE(O14),1,0),0),IF(ISERROR(O14),0,IF(O36=O14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O36),IF(ISERROR(O14),IF(ERROR.TYPE(O36)=ERROR.TYPE(O14),1,0),0),IF(ISERROR(O14),0,IF(O36=O14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o9_test(doc) -> [{userdata,[{""}]}];
not_equal_o9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o20_test(doc) -> [{userdata,[{""}]}];
not_equal_o20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o31_test(doc) -> [{userdata,[{""}]}];
not_equal_o31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o42_test(doc) -> [{userdata,[{""}]}];
not_equal_o42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o53_test(doc) -> [{userdata,[{""}]}];
not_equal_o53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O31),IF(ISERROR(O9),IF(ERROR.TYPE(O31)=ERROR.TYPE(O9),1,0),0),IF(ISERROR(O9),0,IF(O31=O9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O31),IF(ISERROR(O9),IF(ERROR.TYPE(O31)=ERROR.TYPE(O9),1,0),0),IF(ISERROR(O9),0,IF(O31=O9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o64_test(doc) -> [{userdata,[{""}]}];
not_equal_o64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O42),IF(ISERROR(O20),IF(ERROR.TYPE(O42)=ERROR.TYPE(O20),1,0),0),IF(ISERROR(O20),0,IF(O42=O20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O42),IF(ISERROR(O20),IF(ERROR.TYPE(O42)=ERROR.TYPE(O20),1,0),0),IF(ISERROR(O20),0,IF(O42=O20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o4_test(doc) -> [{userdata,[{""}]}];
not_equal_o4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o15_test(doc) -> [{userdata,[{""}]}];
not_equal_o15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o26_test(doc) -> [{userdata,[{""}]}];
not_equal_o26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o37_test(doc) -> [{userdata,[{""}]}];
not_equal_o37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o48_test(doc) -> [{userdata,[{""}]}];
not_equal_o48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O26),IF(ISERROR(O4),IF(ERROR.TYPE(O26)=ERROR.TYPE(O4),1,0),0),IF(ISERROR(O4),0,IF(O26=O4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O26),IF(ISERROR(O4),IF(ERROR.TYPE(O26)=ERROR.TYPE(O4),1,0),0),IF(ISERROR(O4),0,IF(O26=O4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o59_test(doc) -> [{userdata,[{""}]}];
not_equal_o59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O37),IF(ISERROR(O15),IF(ERROR.TYPE(O37)=ERROR.TYPE(O15),1,0),0),IF(ISERROR(O15),0,IF(O37=O15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O37),IF(ISERROR(O15),IF(ERROR.TYPE(O37)=ERROR.TYPE(O15),1,0),0),IF(ISERROR(O15),0,IF(O37=O15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o10_test(doc) -> [{userdata,[{""}]}];
not_equal_o10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o21_test(doc) -> [{userdata,[{""}]}];
not_equal_o21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>O$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>O$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o32_test(doc) -> [{userdata,[{""}]}];
not_equal_o32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o43_test(doc) -> [{userdata,[{""}]}];
not_equal_o43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o54_test(doc) -> [{userdata,[{""}]}];
not_equal_o54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O32),IF(ISERROR(O10),IF(ERROR.TYPE(O32)=ERROR.TYPE(O10),1,0),0),IF(ISERROR(O10),0,IF(O32=O10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O32),IF(ISERROR(O10),IF(ERROR.TYPE(O32)=ERROR.TYPE(O10),1,0),0),IF(ISERROR(O10),0,IF(O32=O10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_o65_test(doc) -> [{userdata,[{""}]}];
not_equal_o65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,14}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,14}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(O43),IF(ISERROR(O21),IF(ERROR.TYPE(O43)=ERROR.TYPE(O21),1,0),0),IF(ISERROR(O21),0,IF(O43=O21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(O43),IF(ISERROR(O21),IF(ERROR.TYPE(O43)=ERROR.TYPE(O21),1,0),0),IF(ISERROR(O21),0,IF(O43=O21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e5_test(doc) -> [{userdata,[{""}]}];
not_equal_e5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e16_test(doc) -> [{userdata,[{""}]}];
not_equal_e16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e27_test(doc) -> [{userdata,[{""}]}];
not_equal_e27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e38_test(doc) -> [{userdata,[{""}]}];
not_equal_e38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e49_test(doc) -> [{userdata,[{""}]}];
not_equal_e49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E27),IF(ISERROR(E5),IF(ERROR.TYPE(E27)=ERROR.TYPE(E5),1,0),0),IF(ISERROR(E5),0,IF(E27=E5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E27),IF(ISERROR(E5),IF(ERROR.TYPE(E27)=ERROR.TYPE(E5),1,0),0),IF(ISERROR(E5),0,IF(E27=E5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e60_test(doc) -> [{userdata,[{""}]}];
not_equal_e60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E38),IF(ISERROR(E16),IF(ERROR.TYPE(E38)=ERROR.TYPE(E16),1,0),0),IF(ISERROR(E16),0,IF(E38=E16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E38),IF(ISERROR(E16),IF(ERROR.TYPE(E38)=ERROR.TYPE(E16),1,0),0),IF(ISERROR(E16),0,IF(E38=E16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e11_test(doc) -> [{userdata,[{""}]}];
not_equal_e11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e22_test(doc) -> [{userdata,[{""}]}];
not_equal_e22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e33_test(doc) -> [{userdata,[{""}]}];
not_equal_e33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e44_test(doc) -> [{userdata,[{""}]}];
not_equal_e44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e55_test(doc) -> [{userdata,[{""}]}];
not_equal_e55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E33),IF(ISERROR(E11),IF(ERROR.TYPE(E33)=ERROR.TYPE(E11),1,0),0),IF(ISERROR(E11),0,IF(E33=E11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E33),IF(ISERROR(E11),IF(ERROR.TYPE(E33)=ERROR.TYPE(E11),1,0),0),IF(ISERROR(E11),0,IF(E33=E11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e66_test(doc) -> [{userdata,[{""}]}];
not_equal_e66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E44),IF(ISERROR(E22),IF(ERROR.TYPE(E44)=ERROR.TYPE(E22),1,0),0),IF(ISERROR(E22),0,IF(E44=E22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E44),IF(ISERROR(E22),IF(ERROR.TYPE(E44)=ERROR.TYPE(E22),1,0),0),IF(ISERROR(E22),0,IF(E44=E22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e6_test(doc) -> [{userdata,[{""}]}];
not_equal_e6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e17_test(doc) -> [{userdata,[{""}]}];
not_equal_e17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e28_test(doc) -> [{userdata,[{""}]}];
not_equal_e28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e39_test(doc) -> [{userdata,[{""}]}];
not_equal_e39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e50_test(doc) -> [{userdata,[{""}]}];
not_equal_e50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E28),IF(ISERROR(E6),IF(ERROR.TYPE(E28)=ERROR.TYPE(E6),1,0),0),IF(ISERROR(E6),0,IF(E28=E6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E28),IF(ISERROR(E6),IF(ERROR.TYPE(E28)=ERROR.TYPE(E6),1,0),0),IF(ISERROR(E6),0,IF(E28=E6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e61_test(doc) -> [{userdata,[{""}]}];
not_equal_e61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E39),IF(ISERROR(E17),IF(ERROR.TYPE(E39)=ERROR.TYPE(E17),1,0),0),IF(ISERROR(E17),0,IF(E39=E17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E39),IF(ISERROR(E17),IF(ERROR.TYPE(E39)=ERROR.TYPE(E17),1,0),0),IF(ISERROR(E17),0,IF(E39=E17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e1_test(doc) -> [{userdata,[{""}]}];
not_equal_e1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Boolean"}]),
      test_util:expected2(Msg, {string,"Boolean"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e12_test(doc) -> [{userdata,[{""}]}];
not_equal_e12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e34_test(doc) -> [{userdata,[{""}]}];
not_equal_e34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e56_test(doc) -> [{userdata,[{""}]}];
not_equal_e56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E34),IF(ISERROR(E12),IF(ERROR.TYPE(E34)=ERROR.TYPE(E12),1,0),0),IF(ISERROR(E12),0,IF(E34=E12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E34),IF(ISERROR(E12),IF(ERROR.TYPE(E34)=ERROR.TYPE(E12),1,0),0),IF(ISERROR(E12),0,IF(E34=E12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e7_test(doc) -> [{userdata,[{""}]}];
not_equal_e7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e18_test(doc) -> [{userdata,[{""}]}];
not_equal_e18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e29_test(doc) -> [{userdata,[{""}]}];
not_equal_e29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e40_test(doc) -> [{userdata,[{""}]}];
not_equal_e40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e51_test(doc) -> [{userdata,[{""}]}];
not_equal_e51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E29),IF(ISERROR(E7),IF(ERROR.TYPE(E29)=ERROR.TYPE(E7),1,0),0),IF(ISERROR(E7),0,IF(E29=E7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E29),IF(ISERROR(E7),IF(ERROR.TYPE(E29)=ERROR.TYPE(E7),1,0),0),IF(ISERROR(E7),0,IF(E29=E7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e62_test(doc) -> [{userdata,[{""}]}];
not_equal_e62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E40),IF(ISERROR(E18),IF(ERROR.TYPE(E40)=ERROR.TYPE(E18),1,0),0),IF(ISERROR(E18),0,IF(E40=E18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E40),IF(ISERROR(E18),IF(ERROR.TYPE(E40)=ERROR.TYPE(E18),1,0),0),IF(ISERROR(E18),0,IF(E40=E18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e2_test(doc) -> [{userdata,[{""}]}];
not_equal_e2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=(1=0)"}]),
      test_util:expected2(Msg, {formula,"=(1=0)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e13_test(doc) -> [{userdata,[{""}]}];
not_equal_e13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e35_test(doc) -> [{userdata,[{""}]}];
not_equal_e35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e57_test(doc) -> [{userdata,[{""}]}];
not_equal_e57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E35),IF(ISERROR(E13),IF(ERROR.TYPE(E35)=ERROR.TYPE(E13),1,0),0),IF(ISERROR(E13),0,IF(E35=E13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E35),IF(ISERROR(E13),IF(ERROR.TYPE(E35)=ERROR.TYPE(E13),1,0),0),IF(ISERROR(E13),0,IF(E35=E13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e8_test(doc) -> [{userdata,[{""}]}];
not_equal_e8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e19_test(doc) -> [{userdata,[{""}]}];
not_equal_e19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e30_test(doc) -> [{userdata,[{""}]}];
not_equal_e30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e41_test(doc) -> [{userdata,[{""}]}];
not_equal_e41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e52_test(doc) -> [{userdata,[{""}]}];
not_equal_e52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E30),IF(ISERROR(E8),IF(ERROR.TYPE(E30)=ERROR.TYPE(E8),1,0),0),IF(ISERROR(E8),0,IF(E30=E8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E30),IF(ISERROR(E8),IF(ERROR.TYPE(E30)=ERROR.TYPE(E8),1,0),0),IF(ISERROR(E8),0,IF(E30=E8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e63_test(doc) -> [{userdata,[{""}]}];
not_equal_e63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E41),IF(ISERROR(E19),IF(ERROR.TYPE(E41)=ERROR.TYPE(E19),1,0),0),IF(ISERROR(E19),0,IF(E41=E19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E41),IF(ISERROR(E19),IF(ERROR.TYPE(E41)=ERROR.TYPE(E19),1,0),0),IF(ISERROR(E19),0,IF(E41=E19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e3_test(doc) -> [{userdata,[{""}]}];
not_equal_e3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e14_test(doc) -> [{userdata,[{""}]}];
not_equal_e14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e25_test(doc) -> [{userdata,[{""}]}];
not_equal_e25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e36_test(doc) -> [{userdata,[{""}]}];
not_equal_e36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e47_test(doc) -> [{userdata,[{""}]}];
not_equal_e47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E25),IF(ISERROR(E3),IF(ERROR.TYPE(E25)=ERROR.TYPE(E3),1,0),0),IF(ISERROR(E3),0,IF(E25=E3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E25),IF(ISERROR(E3),IF(ERROR.TYPE(E25)=ERROR.TYPE(E3),1,0),0),IF(ISERROR(E3),0,IF(E25=E3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e58_test(doc) -> [{userdata,[{""}]}];
not_equal_e58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E36),IF(ISERROR(E14),IF(ERROR.TYPE(E36)=ERROR.TYPE(E14),1,0),0),IF(ISERROR(E14),0,IF(E36=E14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E36),IF(ISERROR(E14),IF(ERROR.TYPE(E36)=ERROR.TYPE(E14),1,0),0),IF(ISERROR(E14),0,IF(E36=E14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e9_test(doc) -> [{userdata,[{""}]}];
not_equal_e9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e20_test(doc) -> [{userdata,[{""}]}];
not_equal_e20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e31_test(doc) -> [{userdata,[{""}]}];
not_equal_e31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e42_test(doc) -> [{userdata,[{""}]}];
not_equal_e42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e53_test(doc) -> [{userdata,[{""}]}];
not_equal_e53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E31),IF(ISERROR(E9),IF(ERROR.TYPE(E31)=ERROR.TYPE(E9),1,0),0),IF(ISERROR(E9),0,IF(E31=E9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E31),IF(ISERROR(E9),IF(ERROR.TYPE(E31)=ERROR.TYPE(E9),1,0),0),IF(ISERROR(E9),0,IF(E31=E9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e64_test(doc) -> [{userdata,[{""}]}];
not_equal_e64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E42),IF(ISERROR(E20),IF(ERROR.TYPE(E42)=ERROR.TYPE(E20),1,0),0),IF(ISERROR(E20),0,IF(E42=E20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E42),IF(ISERROR(E20),IF(ERROR.TYPE(E42)=ERROR.TYPE(E20),1,0),0),IF(ISERROR(E20),0,IF(E42=E20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e4_test(doc) -> [{userdata,[{""}]}];
not_equal_e4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e15_test(doc) -> [{userdata,[{""}]}];
not_equal_e15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e26_test(doc) -> [{userdata,[{""}]}];
not_equal_e26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e37_test(doc) -> [{userdata,[{""}]}];
not_equal_e37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e48_test(doc) -> [{userdata,[{""}]}];
not_equal_e48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E26),IF(ISERROR(E4),IF(ERROR.TYPE(E26)=ERROR.TYPE(E4),1,0),0),IF(ISERROR(E4),0,IF(E26=E4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E26),IF(ISERROR(E4),IF(ERROR.TYPE(E26)=ERROR.TYPE(E4),1,0),0),IF(ISERROR(E4),0,IF(E26=E4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e59_test(doc) -> [{userdata,[{""}]}];
not_equal_e59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E37),IF(ISERROR(E15),IF(ERROR.TYPE(E37)=ERROR.TYPE(E15),1,0),0),IF(ISERROR(E15),0,IF(E37=E15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E37),IF(ISERROR(E15),IF(ERROR.TYPE(E37)=ERROR.TYPE(E15),1,0),0),IF(ISERROR(E15),0,IF(E37=E15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e10_test(doc) -> [{userdata,[{""}]}];
not_equal_e10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e21_test(doc) -> [{userdata,[{""}]}];
not_equal_e21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>E$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>E$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e32_test(doc) -> [{userdata,[{""}]}];
not_equal_e32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e43_test(doc) -> [{userdata,[{""}]}];
not_equal_e43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e54_test(doc) -> [{userdata,[{""}]}];
not_equal_e54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E32),IF(ISERROR(E10),IF(ERROR.TYPE(E32)=ERROR.TYPE(E10),1,0),0),IF(ISERROR(E10),0,IF(E32=E10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E32),IF(ISERROR(E10),IF(ERROR.TYPE(E32)=ERROR.TYPE(E10),1,0),0),IF(ISERROR(E10),0,IF(E32=E10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_e65_test(doc) -> [{userdata,[{""}]}];
not_equal_e65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,4}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,4}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(E43),IF(ISERROR(E21),IF(ERROR.TYPE(E43)=ERROR.TYPE(E21),1,0),0),IF(ISERROR(E21),0,IF(E43=E21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(E43),IF(ISERROR(E21),IF(ERROR.TYPE(E43)=ERROR.TYPE(E21),1,0),0),IF(ISERROR(E21),0,IF(E43=E21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p5_test(doc) -> [{userdata,[{""}]}];
not_equal_p5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p16_test(doc) -> [{userdata,[{""}]}];
not_equal_p16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p27_test(doc) -> [{userdata,[{""}]}];
not_equal_p27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p38_test(doc) -> [{userdata,[{""}]}];
not_equal_p38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p49_test(doc) -> [{userdata,[{""}]}];
not_equal_p49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P27),IF(ISERROR(P5),IF(ERROR.TYPE(P27)=ERROR.TYPE(P5),1,0),0),IF(ISERROR(P5),0,IF(P27=P5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P27),IF(ISERROR(P5),IF(ERROR.TYPE(P27)=ERROR.TYPE(P5),1,0),0),IF(ISERROR(P5),0,IF(P27=P5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p60_test(doc) -> [{userdata,[{""}]}];
not_equal_p60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P38),IF(ISERROR(P16),IF(ERROR.TYPE(P38)=ERROR.TYPE(P16),1,0),0),IF(ISERROR(P16),0,IF(P38=P16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P38),IF(ISERROR(P16),IF(ERROR.TYPE(P38)=ERROR.TYPE(P16),1,0),0),IF(ISERROR(P16),0,IF(P38=P16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p11_test(doc) -> [{userdata,[{""}]}];
not_equal_p11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p22_test(doc) -> [{userdata,[{""}]}];
not_equal_p22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p33_test(doc) -> [{userdata,[{""}]}];
not_equal_p33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p44_test(doc) -> [{userdata,[{""}]}];
not_equal_p44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p55_test(doc) -> [{userdata,[{""}]}];
not_equal_p55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P33),IF(ISERROR(P11),IF(ERROR.TYPE(P33)=ERROR.TYPE(P11),1,0),0),IF(ISERROR(P11),0,IF(P33=P11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P33),IF(ISERROR(P11),IF(ERROR.TYPE(P33)=ERROR.TYPE(P11),1,0),0),IF(ISERROR(P11),0,IF(P33=P11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p66_test(doc) -> [{userdata,[{""}]}];
not_equal_p66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P44),IF(ISERROR(P22),IF(ERROR.TYPE(P44)=ERROR.TYPE(P22),1,0),0),IF(ISERROR(P22),0,IF(P44=P22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P44),IF(ISERROR(P22),IF(ERROR.TYPE(P44)=ERROR.TYPE(P22),1,0),0),IF(ISERROR(P22),0,IF(P44=P22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p6_test(doc) -> [{userdata,[{""}]}];
not_equal_p6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p17_test(doc) -> [{userdata,[{""}]}];
not_equal_p17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p28_test(doc) -> [{userdata,[{""}]}];
not_equal_p28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p39_test(doc) -> [{userdata,[{""}]}];
not_equal_p39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p50_test(doc) -> [{userdata,[{""}]}];
not_equal_p50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P28),IF(ISERROR(P6),IF(ERROR.TYPE(P28)=ERROR.TYPE(P6),1,0),0),IF(ISERROR(P6),0,IF(P28=P6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P28),IF(ISERROR(P6),IF(ERROR.TYPE(P28)=ERROR.TYPE(P6),1,0),0),IF(ISERROR(P6),0,IF(P28=P6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p61_test(doc) -> [{userdata,[{""}]}];
not_equal_p61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P39),IF(ISERROR(P17),IF(ERROR.TYPE(P39)=ERROR.TYPE(P17),1,0),0),IF(ISERROR(P17),0,IF(P39=P17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P39),IF(ISERROR(P17),IF(ERROR.TYPE(P39)=ERROR.TYPE(P17),1,0),0),IF(ISERROR(P17),0,IF(P39=P17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p1_test(doc) -> [{userdata,[{""}]}];
not_equal_p1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Str Num"}]),
      test_util:expected2(Msg, {string,"Str Num"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p12_test(doc) -> [{userdata,[{""}]}];
not_equal_p12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p34_test(doc) -> [{userdata,[{""}]}];
not_equal_p34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p56_test(doc) -> [{userdata,[{""}]}];
not_equal_p56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P34),IF(ISERROR(P12),IF(ERROR.TYPE(P34)=ERROR.TYPE(P12),1,0),0),IF(ISERROR(P12),0,IF(P34=P12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P34),IF(ISERROR(P12),IF(ERROR.TYPE(P34)=ERROR.TYPE(P12),1,0),0),IF(ISERROR(P12),0,IF(P34=P12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p7_test(doc) -> [{userdata,[{""}]}];
not_equal_p7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p18_test(doc) -> [{userdata,[{""}]}];
not_equal_p18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p29_test(doc) -> [{userdata,[{""}]}];
not_equal_p29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p40_test(doc) -> [{userdata,[{""}]}];
not_equal_p40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p51_test(doc) -> [{userdata,[{""}]}];
not_equal_p51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P29),IF(ISERROR(P7),IF(ERROR.TYPE(P29)=ERROR.TYPE(P7),1,0),0),IF(ISERROR(P7),0,IF(P29=P7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P29),IF(ISERROR(P7),IF(ERROR.TYPE(P29)=ERROR.TYPE(P7),1,0),0),IF(ISERROR(P7),0,IF(P29=P7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p62_test(doc) -> [{userdata,[{""}]}];
not_equal_p62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P40),IF(ISERROR(P18),IF(ERROR.TYPE(P40)=ERROR.TYPE(P18),1,0),0),IF(ISERROR(P18),0,IF(P40=P18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P40),IF(ISERROR(P18),IF(ERROR.TYPE(P40)=ERROR.TYPE(P18),1,0),0),IF(ISERROR(P18),0,IF(P40=P18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p2_test(doc) -> [{userdata,[{""}]}];
not_equal_p2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"2.7"}]),
      test_util:expected2(Msg, {string,"2.7"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p13_test(doc) -> [{userdata,[{""}]}];
not_equal_p13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p35_test(doc) -> [{userdata,[{""}]}];
not_equal_p35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p57_test(doc) -> [{userdata,[{""}]}];
not_equal_p57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P35),IF(ISERROR(P13),IF(ERROR.TYPE(P35)=ERROR.TYPE(P13),1,0),0),IF(ISERROR(P13),0,IF(P35=P13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P35),IF(ISERROR(P13),IF(ERROR.TYPE(P35)=ERROR.TYPE(P13),1,0),0),IF(ISERROR(P13),0,IF(P35=P13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p8_test(doc) -> [{userdata,[{""}]}];
not_equal_p8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p19_test(doc) -> [{userdata,[{""}]}];
not_equal_p19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p30_test(doc) -> [{userdata,[{""}]}];
not_equal_p30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p41_test(doc) -> [{userdata,[{""}]}];
not_equal_p41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p52_test(doc) -> [{userdata,[{""}]}];
not_equal_p52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P30),IF(ISERROR(P8),IF(ERROR.TYPE(P30)=ERROR.TYPE(P8),1,0),0),IF(ISERROR(P8),0,IF(P30=P8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P30),IF(ISERROR(P8),IF(ERROR.TYPE(P30)=ERROR.TYPE(P8),1,0),0),IF(ISERROR(P8),0,IF(P30=P8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p63_test(doc) -> [{userdata,[{""}]}];
not_equal_p63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P41),IF(ISERROR(P19),IF(ERROR.TYPE(P41)=ERROR.TYPE(P19),1,0),0),IF(ISERROR(P19),0,IF(P41=P19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P41),IF(ISERROR(P19),IF(ERROR.TYPE(P41)=ERROR.TYPE(P19),1,0),0),IF(ISERROR(P19),0,IF(P41=P19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p3_test(doc) -> [{userdata,[{""}]}];
not_equal_p3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p14_test(doc) -> [{userdata,[{""}]}];
not_equal_p14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p25_test(doc) -> [{userdata,[{""}]}];
not_equal_p25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p36_test(doc) -> [{userdata,[{""}]}];
not_equal_p36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p47_test(doc) -> [{userdata,[{""}]}];
not_equal_p47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P25),IF(ISERROR(P3),IF(ERROR.TYPE(P25)=ERROR.TYPE(P3),1,0),0),IF(ISERROR(P3),0,IF(P25=P3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P25),IF(ISERROR(P3),IF(ERROR.TYPE(P25)=ERROR.TYPE(P3),1,0),0),IF(ISERROR(P3),0,IF(P25=P3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p58_test(doc) -> [{userdata,[{""}]}];
not_equal_p58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P36),IF(ISERROR(P14),IF(ERROR.TYPE(P36)=ERROR.TYPE(P14),1,0),0),IF(ISERROR(P14),0,IF(P36=P14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P36),IF(ISERROR(P14),IF(ERROR.TYPE(P36)=ERROR.TYPE(P14),1,0),0),IF(ISERROR(P14),0,IF(P36=P14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p9_test(doc) -> [{userdata,[{""}]}];
not_equal_p9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p20_test(doc) -> [{userdata,[{""}]}];
not_equal_p20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p31_test(doc) -> [{userdata,[{""}]}];
not_equal_p31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p42_test(doc) -> [{userdata,[{""}]}];
not_equal_p42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p53_test(doc) -> [{userdata,[{""}]}];
not_equal_p53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P31),IF(ISERROR(P9),IF(ERROR.TYPE(P31)=ERROR.TYPE(P9),1,0),0),IF(ISERROR(P9),0,IF(P31=P9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P31),IF(ISERROR(P9),IF(ERROR.TYPE(P31)=ERROR.TYPE(P9),1,0),0),IF(ISERROR(P9),0,IF(P31=P9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p64_test(doc) -> [{userdata,[{""}]}];
not_equal_p64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P42),IF(ISERROR(P20),IF(ERROR.TYPE(P42)=ERROR.TYPE(P20),1,0),0),IF(ISERROR(P20),0,IF(P42=P20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P42),IF(ISERROR(P20),IF(ERROR.TYPE(P42)=ERROR.TYPE(P20),1,0),0),IF(ISERROR(P20),0,IF(P42=P20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p4_test(doc) -> [{userdata,[{""}]}];
not_equal_p4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p15_test(doc) -> [{userdata,[{""}]}];
not_equal_p15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p26_test(doc) -> [{userdata,[{""}]}];
not_equal_p26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p37_test(doc) -> [{userdata,[{""}]}];
not_equal_p37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p48_test(doc) -> [{userdata,[{""}]}];
not_equal_p48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P26),IF(ISERROR(P4),IF(ERROR.TYPE(P26)=ERROR.TYPE(P4),1,0),0),IF(ISERROR(P4),0,IF(P26=P4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P26),IF(ISERROR(P4),IF(ERROR.TYPE(P26)=ERROR.TYPE(P4),1,0),0),IF(ISERROR(P4),0,IF(P26=P4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p59_test(doc) -> [{userdata,[{""}]}];
not_equal_p59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P37),IF(ISERROR(P15),IF(ERROR.TYPE(P37)=ERROR.TYPE(P15),1,0),0),IF(ISERROR(P15),0,IF(P37=P15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P37),IF(ISERROR(P15),IF(ERROR.TYPE(P37)=ERROR.TYPE(P15),1,0),0),IF(ISERROR(P15),0,IF(P37=P15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p10_test(doc) -> [{userdata,[{""}]}];
not_equal_p10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p21_test(doc) -> [{userdata,[{""}]}];
not_equal_p21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>P$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>P$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p32_test(doc) -> [{userdata,[{""}]}];
not_equal_p32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p43_test(doc) -> [{userdata,[{""}]}];
not_equal_p43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p54_test(doc) -> [{userdata,[{""}]}];
not_equal_p54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P32),IF(ISERROR(P10),IF(ERROR.TYPE(P32)=ERROR.TYPE(P10),1,0),0),IF(ISERROR(P10),0,IF(P32=P10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P32),IF(ISERROR(P10),IF(ERROR.TYPE(P32)=ERROR.TYPE(P10),1,0),0),IF(ISERROR(P10),0,IF(P32=P10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_p65_test(doc) -> [{userdata,[{""}]}];
not_equal_p65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,15}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,15}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(P43),IF(ISERROR(P21),IF(ERROR.TYPE(P43)=ERROR.TYPE(P21),1,0),0),IF(ISERROR(P21),0,IF(P43=P21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(P43),IF(ISERROR(P21),IF(ERROR.TYPE(P43)=ERROR.TYPE(P21),1,0),0),IF(ISERROR(P21),0,IF(P43=P21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f5_test(doc) -> [{userdata,[{""}]}];
not_equal_f5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f16_test(doc) -> [{userdata,[{""}]}];
not_equal_f16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f27_test(doc) -> [{userdata,[{""}]}];
not_equal_f27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f38_test(doc) -> [{userdata,[{""}]}];
not_equal_f38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f49_test(doc) -> [{userdata,[{""}]}];
not_equal_f49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F27),IF(ISERROR(F5),IF(ERROR.TYPE(F27)=ERROR.TYPE(F5),1,0),0),IF(ISERROR(F5),0,IF(F27=F5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F27),IF(ISERROR(F5),IF(ERROR.TYPE(F27)=ERROR.TYPE(F5),1,0),0),IF(ISERROR(F5),0,IF(F27=F5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f60_test(doc) -> [{userdata,[{""}]}];
not_equal_f60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F38),IF(ISERROR(F16),IF(ERROR.TYPE(F38)=ERROR.TYPE(F16),1,0),0),IF(ISERROR(F16),0,IF(F38=F16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F38),IF(ISERROR(F16),IF(ERROR.TYPE(F38)=ERROR.TYPE(F16),1,0),0),IF(ISERROR(F16),0,IF(F38=F16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f11_test(doc) -> [{userdata,[{""}]}];
not_equal_f11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f22_test(doc) -> [{userdata,[{""}]}];
not_equal_f22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f33_test(doc) -> [{userdata,[{""}]}];
not_equal_f33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f44_test(doc) -> [{userdata,[{""}]}];
not_equal_f44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f55_test(doc) -> [{userdata,[{""}]}];
not_equal_f55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F33),IF(ISERROR(F11),IF(ERROR.TYPE(F33)=ERROR.TYPE(F11),1,0),0),IF(ISERROR(F11),0,IF(F33=F11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F33),IF(ISERROR(F11),IF(ERROR.TYPE(F33)=ERROR.TYPE(F11),1,0),0),IF(ISERROR(F11),0,IF(F33=F11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f66_test(doc) -> [{userdata,[{""}]}];
not_equal_f66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F44),IF(ISERROR(F22),IF(ERROR.TYPE(F44)=ERROR.TYPE(F22),1,0),0),IF(ISERROR(F22),0,IF(F44=F22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F44),IF(ISERROR(F22),IF(ERROR.TYPE(F44)=ERROR.TYPE(F22),1,0),0),IF(ISERROR(F22),0,IF(F44=F22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f6_test(doc) -> [{userdata,[{""}]}];
not_equal_f6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f17_test(doc) -> [{userdata,[{""}]}];
not_equal_f17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f28_test(doc) -> [{userdata,[{""}]}];
not_equal_f28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f39_test(doc) -> [{userdata,[{""}]}];
not_equal_f39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f50_test(doc) -> [{userdata,[{""}]}];
not_equal_f50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F28),IF(ISERROR(F6),IF(ERROR.TYPE(F28)=ERROR.TYPE(F6),1,0),0),IF(ISERROR(F6),0,IF(F28=F6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F28),IF(ISERROR(F6),IF(ERROR.TYPE(F28)=ERROR.TYPE(F6),1,0),0),IF(ISERROR(F6),0,IF(F28=F6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f61_test(doc) -> [{userdata,[{""}]}];
not_equal_f61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F39),IF(ISERROR(F17),IF(ERROR.TYPE(F39)=ERROR.TYPE(F17),1,0),0),IF(ISERROR(F17),0,IF(F39=F17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F39),IF(ISERROR(F17),IF(ERROR.TYPE(F39)=ERROR.TYPE(F17),1,0),0),IF(ISERROR(F17),0,IF(F39=F17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f1_test(doc) -> [{userdata,[{""}]}];
not_equal_f1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f12_test(doc) -> [{userdata,[{""}]}];
not_equal_f12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f34_test(doc) -> [{userdata,[{""}]}];
not_equal_f34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f56_test(doc) -> [{userdata,[{""}]}];
not_equal_f56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F34),IF(ISERROR(F12),IF(ERROR.TYPE(F34)=ERROR.TYPE(F12),1,0),0),IF(ISERROR(F12),0,IF(F34=F12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F34),IF(ISERROR(F12),IF(ERROR.TYPE(F34)=ERROR.TYPE(F12),1,0),0),IF(ISERROR(F12),0,IF(F34=F12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f7_test(doc) -> [{userdata,[{""}]}];
not_equal_f7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f18_test(doc) -> [{userdata,[{""}]}];
not_equal_f18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f29_test(doc) -> [{userdata,[{""}]}];
not_equal_f29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f40_test(doc) -> [{userdata,[{""}]}];
not_equal_f40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f51_test(doc) -> [{userdata,[{""}]}];
not_equal_f51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F29),IF(ISERROR(F7),IF(ERROR.TYPE(F29)=ERROR.TYPE(F7),1,0),0),IF(ISERROR(F7),0,IF(F29=F7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F29),IF(ISERROR(F7),IF(ERROR.TYPE(F29)=ERROR.TYPE(F7),1,0),0),IF(ISERROR(F7),0,IF(F29=F7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f62_test(doc) -> [{userdata,[{""}]}];
not_equal_f62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F40),IF(ISERROR(F18),IF(ERROR.TYPE(F40)=ERROR.TYPE(F18),1,0),0),IF(ISERROR(F18),0,IF(F40=F18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F40),IF(ISERROR(F18),IF(ERROR.TYPE(F40)=ERROR.TYPE(F18),1,0),0),IF(ISERROR(F18),0,IF(F40=F18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f2_test(doc) -> [{userdata,[{""}]}];
not_equal_f2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=1/0"}]),
      test_util:expected2(Msg, {formula,"=1/0"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f13_test(doc) -> [{userdata,[{""}]}];
not_equal_f13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f35_test(doc) -> [{userdata,[{""}]}];
not_equal_f35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f57_test(doc) -> [{userdata,[{""}]}];
not_equal_f57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F35),IF(ISERROR(F13),IF(ERROR.TYPE(F35)=ERROR.TYPE(F13),1,0),0),IF(ISERROR(F13),0,IF(F35=F13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F35),IF(ISERROR(F13),IF(ERROR.TYPE(F35)=ERROR.TYPE(F13),1,0),0),IF(ISERROR(F13),0,IF(F35=F13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f8_test(doc) -> [{userdata,[{""}]}];
not_equal_f8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f19_test(doc) -> [{userdata,[{""}]}];
not_equal_f19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f30_test(doc) -> [{userdata,[{""}]}];
not_equal_f30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f41_test(doc) -> [{userdata,[{""}]}];
not_equal_f41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f52_test(doc) -> [{userdata,[{""}]}];
not_equal_f52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F30),IF(ISERROR(F8),IF(ERROR.TYPE(F30)=ERROR.TYPE(F8),1,0),0),IF(ISERROR(F8),0,IF(F30=F8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F30),IF(ISERROR(F8),IF(ERROR.TYPE(F30)=ERROR.TYPE(F8),1,0),0),IF(ISERROR(F8),0,IF(F30=F8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f63_test(doc) -> [{userdata,[{""}]}];
not_equal_f63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F41),IF(ISERROR(F19),IF(ERROR.TYPE(F41)=ERROR.TYPE(F19),1,0),0),IF(ISERROR(F19),0,IF(F41=F19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F41),IF(ISERROR(F19),IF(ERROR.TYPE(F41)=ERROR.TYPE(F19),1,0),0),IF(ISERROR(F19),0,IF(F41=F19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f3_test(doc) -> [{userdata,[{""}]}];
not_equal_f3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f14_test(doc) -> [{userdata,[{""}]}];
not_equal_f14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f25_test(doc) -> [{userdata,[{""}]}];
not_equal_f25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f36_test(doc) -> [{userdata,[{""}]}];
not_equal_f36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f47_test(doc) -> [{userdata,[{""}]}];
not_equal_f47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F25),IF(ISERROR(F3),IF(ERROR.TYPE(F25)=ERROR.TYPE(F3),1,0),0),IF(ISERROR(F3),0,IF(F25=F3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F25),IF(ISERROR(F3),IF(ERROR.TYPE(F25)=ERROR.TYPE(F3),1,0),0),IF(ISERROR(F3),0,IF(F25=F3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f58_test(doc) -> [{userdata,[{""}]}];
not_equal_f58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F36),IF(ISERROR(F14),IF(ERROR.TYPE(F36)=ERROR.TYPE(F14),1,0),0),IF(ISERROR(F14),0,IF(F36=F14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F36),IF(ISERROR(F14),IF(ERROR.TYPE(F36)=ERROR.TYPE(F14),1,0),0),IF(ISERROR(F14),0,IF(F36=F14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f9_test(doc) -> [{userdata,[{""}]}];
not_equal_f9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f20_test(doc) -> [{userdata,[{""}]}];
not_equal_f20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f31_test(doc) -> [{userdata,[{""}]}];
not_equal_f31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f42_test(doc) -> [{userdata,[{""}]}];
not_equal_f42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f53_test(doc) -> [{userdata,[{""}]}];
not_equal_f53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F31),IF(ISERROR(F9),IF(ERROR.TYPE(F31)=ERROR.TYPE(F9),1,0),0),IF(ISERROR(F9),0,IF(F31=F9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F31),IF(ISERROR(F9),IF(ERROR.TYPE(F31)=ERROR.TYPE(F9),1,0),0),IF(ISERROR(F9),0,IF(F31=F9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f64_test(doc) -> [{userdata,[{""}]}];
not_equal_f64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F42),IF(ISERROR(F20),IF(ERROR.TYPE(F42)=ERROR.TYPE(F20),1,0),0),IF(ISERROR(F20),0,IF(F42=F20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F42),IF(ISERROR(F20),IF(ERROR.TYPE(F42)=ERROR.TYPE(F20),1,0),0),IF(ISERROR(F20),0,IF(F42=F20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f4_test(doc) -> [{userdata,[{""}]}];
not_equal_f4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f15_test(doc) -> [{userdata,[{""}]}];
not_equal_f15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f26_test(doc) -> [{userdata,[{""}]}];
not_equal_f26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f37_test(doc) -> [{userdata,[{""}]}];
not_equal_f37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f48_test(doc) -> [{userdata,[{""}]}];
not_equal_f48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F26),IF(ISERROR(F4),IF(ERROR.TYPE(F26)=ERROR.TYPE(F4),1,0),0),IF(ISERROR(F4),0,IF(F26=F4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F26),IF(ISERROR(F4),IF(ERROR.TYPE(F26)=ERROR.TYPE(F4),1,0),0),IF(ISERROR(F4),0,IF(F26=F4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f59_test(doc) -> [{userdata,[{""}]}];
not_equal_f59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F37),IF(ISERROR(F15),IF(ERROR.TYPE(F37)=ERROR.TYPE(F15),1,0),0),IF(ISERROR(F15),0,IF(F37=F15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F37),IF(ISERROR(F15),IF(ERROR.TYPE(F37)=ERROR.TYPE(F15),1,0),0),IF(ISERROR(F15),0,IF(F37=F15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f10_test(doc) -> [{userdata,[{""}]}];
not_equal_f10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f21_test(doc) -> [{userdata,[{""}]}];
not_equal_f21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>F$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>F$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f32_test(doc) -> [{userdata,[{""}]}];
not_equal_f32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f43_test(doc) -> [{userdata,[{""}]}];
not_equal_f43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f54_test(doc) -> [{userdata,[{""}]}];
not_equal_f54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F32),IF(ISERROR(F10),IF(ERROR.TYPE(F32)=ERROR.TYPE(F10),1,0),0),IF(ISERROR(F10),0,IF(F32=F10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F32),IF(ISERROR(F10),IF(ERROR.TYPE(F32)=ERROR.TYPE(F10),1,0),0),IF(ISERROR(F10),0,IF(F32=F10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_f65_test(doc) -> [{userdata,[{""}]}];
not_equal_f65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,5}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,5}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(F43),IF(ISERROR(F21),IF(ERROR.TYPE(F43)=ERROR.TYPE(F21),1,0),0),IF(ISERROR(F21),0,IF(F43=F21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(F43),IF(ISERROR(F21),IF(ERROR.TYPE(F43)=ERROR.TYPE(F21),1,0),0),IF(ISERROR(F21),0,IF(F43=F21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q5_test(doc) -> [{userdata,[{""}]}];
not_equal_q5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q16_test(doc) -> [{userdata,[{""}]}];
not_equal_q16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q27_test(doc) -> [{userdata,[{""}]}];
not_equal_q27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q38_test(doc) -> [{userdata,[{""}]}];
not_equal_q38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q49_test(doc) -> [{userdata,[{""}]}];
not_equal_q49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q27),IF(ISERROR(Q5),IF(ERROR.TYPE(Q27)=ERROR.TYPE(Q5),1,0),0),IF(ISERROR(Q5),0,IF(Q27=Q5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q27),IF(ISERROR(Q5),IF(ERROR.TYPE(Q27)=ERROR.TYPE(Q5),1,0),0),IF(ISERROR(Q5),0,IF(Q27=Q5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q60_test(doc) -> [{userdata,[{""}]}];
not_equal_q60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q38),IF(ISERROR(Q16),IF(ERROR.TYPE(Q38)=ERROR.TYPE(Q16),1,0),0),IF(ISERROR(Q16),0,IF(Q38=Q16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q38),IF(ISERROR(Q16),IF(ERROR.TYPE(Q38)=ERROR.TYPE(Q16),1,0),0),IF(ISERROR(Q16),0,IF(Q38=Q16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q11_test(doc) -> [{userdata,[{""}]}];
not_equal_q11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q22_test(doc) -> [{userdata,[{""}]}];
not_equal_q22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q33_test(doc) -> [{userdata,[{""}]}];
not_equal_q33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q44_test(doc) -> [{userdata,[{""}]}];
not_equal_q44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q55_test(doc) -> [{userdata,[{""}]}];
not_equal_q55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q33),IF(ISERROR(Q11),IF(ERROR.TYPE(Q33)=ERROR.TYPE(Q11),1,0),0),IF(ISERROR(Q11),0,IF(Q33=Q11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q33),IF(ISERROR(Q11),IF(ERROR.TYPE(Q33)=ERROR.TYPE(Q11),1,0),0),IF(ISERROR(Q11),0,IF(Q33=Q11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q66_test(doc) -> [{userdata,[{""}]}];
not_equal_q66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q44),IF(ISERROR(Q22),IF(ERROR.TYPE(Q44)=ERROR.TYPE(Q22),1,0),0),IF(ISERROR(Q22),0,IF(Q44=Q22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q44),IF(ISERROR(Q22),IF(ERROR.TYPE(Q44)=ERROR.TYPE(Q22),1,0),0),IF(ISERROR(Q22),0,IF(Q44=Q22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q6_test(doc) -> [{userdata,[{""}]}];
not_equal_q6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q17_test(doc) -> [{userdata,[{""}]}];
not_equal_q17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q28_test(doc) -> [{userdata,[{""}]}];
not_equal_q28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q39_test(doc) -> [{userdata,[{""}]}];
not_equal_q39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q50_test(doc) -> [{userdata,[{""}]}];
not_equal_q50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q28),IF(ISERROR(Q6),IF(ERROR.TYPE(Q28)=ERROR.TYPE(Q6),1,0),0),IF(ISERROR(Q6),0,IF(Q28=Q6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q28),IF(ISERROR(Q6),IF(ERROR.TYPE(Q28)=ERROR.TYPE(Q6),1,0),0),IF(ISERROR(Q6),0,IF(Q28=Q6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q61_test(doc) -> [{userdata,[{""}]}];
not_equal_q61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q39),IF(ISERROR(Q17),IF(ERROR.TYPE(Q39)=ERROR.TYPE(Q17),1,0),0),IF(ISERROR(Q17),0,IF(Q39=Q17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q39),IF(ISERROR(Q17),IF(ERROR.TYPE(Q39)=ERROR.TYPE(Q17),1,0),0),IF(ISERROR(Q17),0,IF(Q39=Q17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q1_test(doc) -> [{userdata,[{""}]}];
not_equal_q1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Str Num"}]),
      test_util:expected2(Msg, {string,"Str Num"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q12_test(doc) -> [{userdata,[{""}]}];
not_equal_q12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q34_test(doc) -> [{userdata,[{""}]}];
not_equal_q34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q56_test(doc) -> [{userdata,[{""}]}];
not_equal_q56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q34),IF(ISERROR(Q12),IF(ERROR.TYPE(Q34)=ERROR.TYPE(Q12),1,0),0),IF(ISERROR(Q12),0,IF(Q34=Q12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q34),IF(ISERROR(Q12),IF(ERROR.TYPE(Q34)=ERROR.TYPE(Q12),1,0),0),IF(ISERROR(Q12),0,IF(Q34=Q12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q7_test(doc) -> [{userdata,[{""}]}];
not_equal_q7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q18_test(doc) -> [{userdata,[{""}]}];
not_equal_q18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q29_test(doc) -> [{userdata,[{""}]}];
not_equal_q29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q40_test(doc) -> [{userdata,[{""}]}];
not_equal_q40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q51_test(doc) -> [{userdata,[{""}]}];
not_equal_q51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q29),IF(ISERROR(Q7),IF(ERROR.TYPE(Q29)=ERROR.TYPE(Q7),1,0),0),IF(ISERROR(Q7),0,IF(Q29=Q7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q29),IF(ISERROR(Q7),IF(ERROR.TYPE(Q29)=ERROR.TYPE(Q7),1,0),0),IF(ISERROR(Q7),0,IF(Q29=Q7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q62_test(doc) -> [{userdata,[{""}]}];
not_equal_q62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q40),IF(ISERROR(Q18),IF(ERROR.TYPE(Q40)=ERROR.TYPE(Q18),1,0),0),IF(ISERROR(Q18),0,IF(Q40=Q18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q40),IF(ISERROR(Q18),IF(ERROR.TYPE(Q40)=ERROR.TYPE(Q18),1,0),0),IF(ISERROR(Q18),0,IF(Q40=Q18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q2_test(doc) -> [{userdata,[{""}]}];
not_equal_q2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"3.54"}]),
      test_util:expected2(Msg, {string,"3.54"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q13_test(doc) -> [{userdata,[{""}]}];
not_equal_q13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q35_test(doc) -> [{userdata,[{""}]}];
not_equal_q35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q57_test(doc) -> [{userdata,[{""}]}];
not_equal_q57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q35),IF(ISERROR(Q13),IF(ERROR.TYPE(Q35)=ERROR.TYPE(Q13),1,0),0),IF(ISERROR(Q13),0,IF(Q35=Q13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q35),IF(ISERROR(Q13),IF(ERROR.TYPE(Q35)=ERROR.TYPE(Q13),1,0),0),IF(ISERROR(Q13),0,IF(Q35=Q13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q8_test(doc) -> [{userdata,[{""}]}];
not_equal_q8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q19_test(doc) -> [{userdata,[{""}]}];
not_equal_q19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q30_test(doc) -> [{userdata,[{""}]}];
not_equal_q30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q41_test(doc) -> [{userdata,[{""}]}];
not_equal_q41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q52_test(doc) -> [{userdata,[{""}]}];
not_equal_q52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q30),IF(ISERROR(Q8),IF(ERROR.TYPE(Q30)=ERROR.TYPE(Q8),1,0),0),IF(ISERROR(Q8),0,IF(Q30=Q8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q30),IF(ISERROR(Q8),IF(ERROR.TYPE(Q30)=ERROR.TYPE(Q8),1,0),0),IF(ISERROR(Q8),0,IF(Q30=Q8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q63_test(doc) -> [{userdata,[{""}]}];
not_equal_q63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q41),IF(ISERROR(Q19),IF(ERROR.TYPE(Q41)=ERROR.TYPE(Q19),1,0),0),IF(ISERROR(Q19),0,IF(Q41=Q19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q41),IF(ISERROR(Q19),IF(ERROR.TYPE(Q41)=ERROR.TYPE(Q19),1,0),0),IF(ISERROR(Q19),0,IF(Q41=Q19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q3_test(doc) -> [{userdata,[{""}]}];
not_equal_q3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q14_test(doc) -> [{userdata,[{""}]}];
not_equal_q14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q25_test(doc) -> [{userdata,[{""}]}];
not_equal_q25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q36_test(doc) -> [{userdata,[{""}]}];
not_equal_q36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q47_test(doc) -> [{userdata,[{""}]}];
not_equal_q47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q25),IF(ISERROR(Q3),IF(ERROR.TYPE(Q25)=ERROR.TYPE(Q3),1,0),0),IF(ISERROR(Q3),0,IF(Q25=Q3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q25),IF(ISERROR(Q3),IF(ERROR.TYPE(Q25)=ERROR.TYPE(Q3),1,0),0),IF(ISERROR(Q3),0,IF(Q25=Q3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q58_test(doc) -> [{userdata,[{""}]}];
not_equal_q58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q36),IF(ISERROR(Q14),IF(ERROR.TYPE(Q36)=ERROR.TYPE(Q14),1,0),0),IF(ISERROR(Q14),0,IF(Q36=Q14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q36),IF(ISERROR(Q14),IF(ERROR.TYPE(Q36)=ERROR.TYPE(Q14),1,0),0),IF(ISERROR(Q14),0,IF(Q36=Q14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q9_test(doc) -> [{userdata,[{""}]}];
not_equal_q9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q20_test(doc) -> [{userdata,[{""}]}];
not_equal_q20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q31_test(doc) -> [{userdata,[{""}]}];
not_equal_q31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q42_test(doc) -> [{userdata,[{""}]}];
not_equal_q42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q53_test(doc) -> [{userdata,[{""}]}];
not_equal_q53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q31),IF(ISERROR(Q9),IF(ERROR.TYPE(Q31)=ERROR.TYPE(Q9),1,0),0),IF(ISERROR(Q9),0,IF(Q31=Q9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q31),IF(ISERROR(Q9),IF(ERROR.TYPE(Q31)=ERROR.TYPE(Q9),1,0),0),IF(ISERROR(Q9),0,IF(Q31=Q9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q64_test(doc) -> [{userdata,[{""}]}];
not_equal_q64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q42),IF(ISERROR(Q20),IF(ERROR.TYPE(Q42)=ERROR.TYPE(Q20),1,0),0),IF(ISERROR(Q20),0,IF(Q42=Q20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q42),IF(ISERROR(Q20),IF(ERROR.TYPE(Q42)=ERROR.TYPE(Q20),1,0),0),IF(ISERROR(Q20),0,IF(Q42=Q20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q4_test(doc) -> [{userdata,[{""}]}];
not_equal_q4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q15_test(doc) -> [{userdata,[{""}]}];
not_equal_q15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q26_test(doc) -> [{userdata,[{""}]}];
not_equal_q26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q37_test(doc) -> [{userdata,[{""}]}];
not_equal_q37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q48_test(doc) -> [{userdata,[{""}]}];
not_equal_q48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q26),IF(ISERROR(Q4),IF(ERROR.TYPE(Q26)=ERROR.TYPE(Q4),1,0),0),IF(ISERROR(Q4),0,IF(Q26=Q4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q26),IF(ISERROR(Q4),IF(ERROR.TYPE(Q26)=ERROR.TYPE(Q4),1,0),0),IF(ISERROR(Q4),0,IF(Q26=Q4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q59_test(doc) -> [{userdata,[{""}]}];
not_equal_q59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q37),IF(ISERROR(Q15),IF(ERROR.TYPE(Q37)=ERROR.TYPE(Q15),1,0),0),IF(ISERROR(Q15),0,IF(Q37=Q15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q37),IF(ISERROR(Q15),IF(ERROR.TYPE(Q37)=ERROR.TYPE(Q15),1,0),0),IF(ISERROR(Q15),0,IF(Q37=Q15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q10_test(doc) -> [{userdata,[{""}]}];
not_equal_q10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q21_test(doc) -> [{userdata,[{""}]}];
not_equal_q21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>Q$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>Q$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q32_test(doc) -> [{userdata,[{""}]}];
not_equal_q32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q43_test(doc) -> [{userdata,[{""}]}];
not_equal_q43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q54_test(doc) -> [{userdata,[{""}]}];
not_equal_q54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q32),IF(ISERROR(Q10),IF(ERROR.TYPE(Q32)=ERROR.TYPE(Q10),1,0),0),IF(ISERROR(Q10),0,IF(Q32=Q10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q32),IF(ISERROR(Q10),IF(ERROR.TYPE(Q32)=ERROR.TYPE(Q10),1,0),0),IF(ISERROR(Q10),0,IF(Q32=Q10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_q65_test(doc) -> [{userdata,[{""}]}];
not_equal_q65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,16}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,16}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(Q43),IF(ISERROR(Q21),IF(ERROR.TYPE(Q43)=ERROR.TYPE(Q21),1,0),0),IF(ISERROR(Q21),0,IF(Q43=Q21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(Q43),IF(ISERROR(Q21),IF(ERROR.TYPE(Q43)=ERROR.TYPE(Q21),1,0),0),IF(ISERROR(Q21),0,IF(Q43=Q21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g5_test(doc) -> [{userdata,[{""}]}];
not_equal_g5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g16_test(doc) -> [{userdata,[{""}]}];
not_equal_g16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g27_test(doc) -> [{userdata,[{""}]}];
not_equal_g27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g38_test(doc) -> [{userdata,[{""}]}];
not_equal_g38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g49_test(doc) -> [{userdata,[{""}]}];
not_equal_g49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G27),IF(ISERROR(G5),IF(ERROR.TYPE(G27)=ERROR.TYPE(G5),1,0),0),IF(ISERROR(G5),0,IF(G27=G5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G27),IF(ISERROR(G5),IF(ERROR.TYPE(G27)=ERROR.TYPE(G5),1,0),0),IF(ISERROR(G5),0,IF(G27=G5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g60_test(doc) -> [{userdata,[{""}]}];
not_equal_g60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G38),IF(ISERROR(G16),IF(ERROR.TYPE(G38)=ERROR.TYPE(G16),1,0),0),IF(ISERROR(G16),0,IF(G38=G16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G38),IF(ISERROR(G16),IF(ERROR.TYPE(G38)=ERROR.TYPE(G16),1,0),0),IF(ISERROR(G16),0,IF(G38=G16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g11_test(doc) -> [{userdata,[{""}]}];
not_equal_g11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g22_test(doc) -> [{userdata,[{""}]}];
not_equal_g22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g33_test(doc) -> [{userdata,[{""}]}];
not_equal_g33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g44_test(doc) -> [{userdata,[{""}]}];
not_equal_g44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g55_test(doc) -> [{userdata,[{""}]}];
not_equal_g55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G33),IF(ISERROR(G11),IF(ERROR.TYPE(G33)=ERROR.TYPE(G11),1,0),0),IF(ISERROR(G11),0,IF(G33=G11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G33),IF(ISERROR(G11),IF(ERROR.TYPE(G33)=ERROR.TYPE(G11),1,0),0),IF(ISERROR(G11),0,IF(G33=G11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g66_test(doc) -> [{userdata,[{""}]}];
not_equal_g66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G44),IF(ISERROR(G22),IF(ERROR.TYPE(G44)=ERROR.TYPE(G22),1,0),0),IF(ISERROR(G22),0,IF(G44=G22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G44),IF(ISERROR(G22),IF(ERROR.TYPE(G44)=ERROR.TYPE(G22),1,0),0),IF(ISERROR(G22),0,IF(G44=G22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g6_test(doc) -> [{userdata,[{""}]}];
not_equal_g6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g17_test(doc) -> [{userdata,[{""}]}];
not_equal_g17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g28_test(doc) -> [{userdata,[{""}]}];
not_equal_g28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g39_test(doc) -> [{userdata,[{""}]}];
not_equal_g39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g50_test(doc) -> [{userdata,[{""}]}];
not_equal_g50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G28),IF(ISERROR(G6),IF(ERROR.TYPE(G28)=ERROR.TYPE(G6),1,0),0),IF(ISERROR(G6),0,IF(G28=G6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G28),IF(ISERROR(G6),IF(ERROR.TYPE(G28)=ERROR.TYPE(G6),1,0),0),IF(ISERROR(G6),0,IF(G28=G6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g61_test(doc) -> [{userdata,[{""}]}];
not_equal_g61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G39),IF(ISERROR(G17),IF(ERROR.TYPE(G39)=ERROR.TYPE(G17),1,0),0),IF(ISERROR(G17),0,IF(G39=G17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G39),IF(ISERROR(G17),IF(ERROR.TYPE(G39)=ERROR.TYPE(G17),1,0),0),IF(ISERROR(G17),0,IF(G39=G17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g1_test(doc) -> [{userdata,[{""}]}];
not_equal_g1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g12_test(doc) -> [{userdata,[{""}]}];
not_equal_g12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g34_test(doc) -> [{userdata,[{""}]}];
not_equal_g34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g56_test(doc) -> [{userdata,[{""}]}];
not_equal_g56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G34),IF(ISERROR(G12),IF(ERROR.TYPE(G34)=ERROR.TYPE(G12),1,0),0),IF(ISERROR(G12),0,IF(G34=G12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G34),IF(ISERROR(G12),IF(ERROR.TYPE(G34)=ERROR.TYPE(G12),1,0),0),IF(ISERROR(G12),0,IF(G34=G12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g7_test(doc) -> [{userdata,[{""}]}];
not_equal_g7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g18_test(doc) -> [{userdata,[{""}]}];
not_equal_g18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g29_test(doc) -> [{userdata,[{""}]}];
not_equal_g29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g40_test(doc) -> [{userdata,[{""}]}];
not_equal_g40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g51_test(doc) -> [{userdata,[{""}]}];
not_equal_g51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G29),IF(ISERROR(G7),IF(ERROR.TYPE(G29)=ERROR.TYPE(G7),1,0),0),IF(ISERROR(G7),0,IF(G29=G7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G29),IF(ISERROR(G7),IF(ERROR.TYPE(G29)=ERROR.TYPE(G7),1,0),0),IF(ISERROR(G7),0,IF(G29=G7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g62_test(doc) -> [{userdata,[{""}]}];
not_equal_g62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G40),IF(ISERROR(G18),IF(ERROR.TYPE(G40)=ERROR.TYPE(G18),1,0),0),IF(ISERROR(G18),0,IF(G40=G18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G40),IF(ISERROR(G18),IF(ERROR.TYPE(G40)=ERROR.TYPE(G18),1,0),0),IF(ISERROR(G18),0,IF(G40=G18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g2_test(doc) -> [{userdata,[{""}]}];
not_equal_g2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g13_test(doc) -> [{userdata,[{""}]}];
not_equal_g13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g35_test(doc) -> [{userdata,[{""}]}];
not_equal_g35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g57_test(doc) -> [{userdata,[{""}]}];
not_equal_g57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G35),IF(ISERROR(G13),IF(ERROR.TYPE(G35)=ERROR.TYPE(G13),1,0),0),IF(ISERROR(G13),0,IF(G35=G13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G35),IF(ISERROR(G13),IF(ERROR.TYPE(G35)=ERROR.TYPE(G13),1,0),0),IF(ISERROR(G13),0,IF(G35=G13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g8_test(doc) -> [{userdata,[{""}]}];
not_equal_g8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g19_test(doc) -> [{userdata,[{""}]}];
not_equal_g19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g30_test(doc) -> [{userdata,[{""}]}];
not_equal_g30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g41_test(doc) -> [{userdata,[{""}]}];
not_equal_g41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g52_test(doc) -> [{userdata,[{""}]}];
not_equal_g52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G30),IF(ISERROR(G8),IF(ERROR.TYPE(G30)=ERROR.TYPE(G8),1,0),0),IF(ISERROR(G8),0,IF(G30=G8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G30),IF(ISERROR(G8),IF(ERROR.TYPE(G30)=ERROR.TYPE(G8),1,0),0),IF(ISERROR(G8),0,IF(G30=G8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g63_test(doc) -> [{userdata,[{""}]}];
not_equal_g63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G41),IF(ISERROR(G19),IF(ERROR.TYPE(G41)=ERROR.TYPE(G19),1,0),0),IF(ISERROR(G19),0,IF(G41=G19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G41),IF(ISERROR(G19),IF(ERROR.TYPE(G41)=ERROR.TYPE(G19),1,0),0),IF(ISERROR(G19),0,IF(G41=G19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g3_test(doc) -> [{userdata,[{""}]}];
not_equal_g3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g14_test(doc) -> [{userdata,[{""}]}];
not_equal_g14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g25_test(doc) -> [{userdata,[{""}]}];
not_equal_g25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g36_test(doc) -> [{userdata,[{""}]}];
not_equal_g36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g47_test(doc) -> [{userdata,[{""}]}];
not_equal_g47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G25),IF(ISERROR(G3),IF(ERROR.TYPE(G25)=ERROR.TYPE(G3),1,0),0),IF(ISERROR(G3),0,IF(G25=G3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G25),IF(ISERROR(G3),IF(ERROR.TYPE(G25)=ERROR.TYPE(G3),1,0),0),IF(ISERROR(G3),0,IF(G25=G3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g58_test(doc) -> [{userdata,[{""}]}];
not_equal_g58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G36),IF(ISERROR(G14),IF(ERROR.TYPE(G36)=ERROR.TYPE(G14),1,0),0),IF(ISERROR(G14),0,IF(G36=G14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G36),IF(ISERROR(G14),IF(ERROR.TYPE(G36)=ERROR.TYPE(G14),1,0),0),IF(ISERROR(G14),0,IF(G36=G14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g9_test(doc) -> [{userdata,[{""}]}];
not_equal_g9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g20_test(doc) -> [{userdata,[{""}]}];
not_equal_g20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g31_test(doc) -> [{userdata,[{""}]}];
not_equal_g31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g42_test(doc) -> [{userdata,[{""}]}];
not_equal_g42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g53_test(doc) -> [{userdata,[{""}]}];
not_equal_g53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G31),IF(ISERROR(G9),IF(ERROR.TYPE(G31)=ERROR.TYPE(G9),1,0),0),IF(ISERROR(G9),0,IF(G31=G9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G31),IF(ISERROR(G9),IF(ERROR.TYPE(G31)=ERROR.TYPE(G9),1,0),0),IF(ISERROR(G9),0,IF(G31=G9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g64_test(doc) -> [{userdata,[{""}]}];
not_equal_g64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G42),IF(ISERROR(G20),IF(ERROR.TYPE(G42)=ERROR.TYPE(G20),1,0),0),IF(ISERROR(G20),0,IF(G42=G20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G42),IF(ISERROR(G20),IF(ERROR.TYPE(G42)=ERROR.TYPE(G20),1,0),0),IF(ISERROR(G20),0,IF(G42=G20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g4_test(doc) -> [{userdata,[{""}]}];
not_equal_g4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g15_test(doc) -> [{userdata,[{""}]}];
not_equal_g15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g26_test(doc) -> [{userdata,[{""}]}];
not_equal_g26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g37_test(doc) -> [{userdata,[{""}]}];
not_equal_g37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g48_test(doc) -> [{userdata,[{""}]}];
not_equal_g48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G26),IF(ISERROR(G4),IF(ERROR.TYPE(G26)=ERROR.TYPE(G4),1,0),0),IF(ISERROR(G4),0,IF(G26=G4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G26),IF(ISERROR(G4),IF(ERROR.TYPE(G26)=ERROR.TYPE(G4),1,0),0),IF(ISERROR(G4),0,IF(G26=G4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g59_test(doc) -> [{userdata,[{""}]}];
not_equal_g59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G37),IF(ISERROR(G15),IF(ERROR.TYPE(G37)=ERROR.TYPE(G15),1,0),0),IF(ISERROR(G15),0,IF(G37=G15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G37),IF(ISERROR(G15),IF(ERROR.TYPE(G37)=ERROR.TYPE(G15),1,0),0),IF(ISERROR(G15),0,IF(G37=G15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g10_test(doc) -> [{userdata,[{""}]}];
not_equal_g10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g21_test(doc) -> [{userdata,[{""}]}];
not_equal_g21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>G$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>G$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g32_test(doc) -> [{userdata,[{""}]}];
not_equal_g32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g43_test(doc) -> [{userdata,[{""}]}];
not_equal_g43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g54_test(doc) -> [{userdata,[{""}]}];
not_equal_g54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G32),IF(ISERROR(G10),IF(ERROR.TYPE(G32)=ERROR.TYPE(G10),1,0),0),IF(ISERROR(G10),0,IF(G32=G10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G32),IF(ISERROR(G10),IF(ERROR.TYPE(G32)=ERROR.TYPE(G10),1,0),0),IF(ISERROR(G10),0,IF(G32=G10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_g65_test(doc) -> [{userdata,[{""}]}];
not_equal_g65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,6}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,6}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(G43),IF(ISERROR(G21),IF(ERROR.TYPE(G43)=ERROR.TYPE(G21),1,0),0),IF(ISERROR(G21),0,IF(G43=G21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(G43),IF(ISERROR(G21),IF(ERROR.TYPE(G43)=ERROR.TYPE(G21),1,0),0),IF(ISERROR(G21),0,IF(G43=G21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r5_test(doc) -> [{userdata,[{""}]}];
not_equal_r5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r16_test(doc) -> [{userdata,[{""}]}];
not_equal_r16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r27_test(doc) -> [{userdata,[{""}]}];
not_equal_r27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r38_test(doc) -> [{userdata,[{""}]}];
not_equal_r38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r49_test(doc) -> [{userdata,[{""}]}];
not_equal_r49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R27),IF(ISERROR(R5),IF(ERROR.TYPE(R27)=ERROR.TYPE(R5),1,0),0),IF(ISERROR(R5),0,IF(R27=R5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R27),IF(ISERROR(R5),IF(ERROR.TYPE(R27)=ERROR.TYPE(R5),1,0),0),IF(ISERROR(R5),0,IF(R27=R5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r60_test(doc) -> [{userdata,[{""}]}];
not_equal_r60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R38),IF(ISERROR(R16),IF(ERROR.TYPE(R38)=ERROR.TYPE(R16),1,0),0),IF(ISERROR(R16),0,IF(R38=R16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R38),IF(ISERROR(R16),IF(ERROR.TYPE(R38)=ERROR.TYPE(R16),1,0),0),IF(ISERROR(R16),0,IF(R38=R16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r11_test(doc) -> [{userdata,[{""}]}];
not_equal_r11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r22_test(doc) -> [{userdata,[{""}]}];
not_equal_r22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r33_test(doc) -> [{userdata,[{""}]}];
not_equal_r33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r44_test(doc) -> [{userdata,[{""}]}];
not_equal_r44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r55_test(doc) -> [{userdata,[{""}]}];
not_equal_r55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R33),IF(ISERROR(R11),IF(ERROR.TYPE(R33)=ERROR.TYPE(R11),1,0),0),IF(ISERROR(R11),0,IF(R33=R11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R33),IF(ISERROR(R11),IF(ERROR.TYPE(R33)=ERROR.TYPE(R11),1,0),0),IF(ISERROR(R11),0,IF(R33=R11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r66_test(doc) -> [{userdata,[{""}]}];
not_equal_r66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R44),IF(ISERROR(R22),IF(ERROR.TYPE(R44)=ERROR.TYPE(R22),1,0),0),IF(ISERROR(R22),0,IF(R44=R22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R44),IF(ISERROR(R22),IF(ERROR.TYPE(R44)=ERROR.TYPE(R22),1,0),0),IF(ISERROR(R22),0,IF(R44=R22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r6_test(doc) -> [{userdata,[{""}]}];
not_equal_r6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r17_test(doc) -> [{userdata,[{""}]}];
not_equal_r17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r28_test(doc) -> [{userdata,[{""}]}];
not_equal_r28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r39_test(doc) -> [{userdata,[{""}]}];
not_equal_r39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r50_test(doc) -> [{userdata,[{""}]}];
not_equal_r50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R28),IF(ISERROR(R6),IF(ERROR.TYPE(R28)=ERROR.TYPE(R6),1,0),0),IF(ISERROR(R6),0,IF(R28=R6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R28),IF(ISERROR(R6),IF(ERROR.TYPE(R28)=ERROR.TYPE(R6),1,0),0),IF(ISERROR(R6),0,IF(R28=R6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r61_test(doc) -> [{userdata,[{""}]}];
not_equal_r61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R39),IF(ISERROR(R17),IF(ERROR.TYPE(R39)=ERROR.TYPE(R17),1,0),0),IF(ISERROR(R17),0,IF(R39=R17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R39),IF(ISERROR(R17),IF(ERROR.TYPE(R39)=ERROR.TYPE(R17),1,0),0),IF(ISERROR(R17),0,IF(R39=R17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r1_test(doc) -> [{userdata,[{""}]}];
not_equal_r1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Integer"}]),
      test_util:expected2(Msg, {string,"Integer"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r12_test(doc) -> [{userdata,[{""}]}];
not_equal_r12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r34_test(doc) -> [{userdata,[{""}]}];
not_equal_r34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r56_test(doc) -> [{userdata,[{""}]}];
not_equal_r56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R34),IF(ISERROR(R12),IF(ERROR.TYPE(R34)=ERROR.TYPE(R12),1,0),0),IF(ISERROR(R12),0,IF(R34=R12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R34),IF(ISERROR(R12),IF(ERROR.TYPE(R34)=ERROR.TYPE(R12),1,0),0),IF(ISERROR(R12),0,IF(R34=R12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r7_test(doc) -> [{userdata,[{""}]}];
not_equal_r7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r18_test(doc) -> [{userdata,[{""}]}];
not_equal_r18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r29_test(doc) -> [{userdata,[{""}]}];
not_equal_r29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r40_test(doc) -> [{userdata,[{""}]}];
not_equal_r40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r51_test(doc) -> [{userdata,[{""}]}];
not_equal_r51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R29),IF(ISERROR(R7),IF(ERROR.TYPE(R29)=ERROR.TYPE(R7),1,0),0),IF(ISERROR(R7),0,IF(R29=R7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R29),IF(ISERROR(R7),IF(ERROR.TYPE(R29)=ERROR.TYPE(R7),1,0),0),IF(ISERROR(R7),0,IF(R29=R7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r62_test(doc) -> [{userdata,[{""}]}];
not_equal_r62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R40),IF(ISERROR(R18),IF(ERROR.TYPE(R40)=ERROR.TYPE(R18),1,0),0),IF(ISERROR(R18),0,IF(R40=R18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R40),IF(ISERROR(R18),IF(ERROR.TYPE(R40)=ERROR.TYPE(R18),1,0),0),IF(ISERROR(R18),0,IF(R40=R18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r2_test(doc) -> [{userdata,[{""}]}];
not_equal_r2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"1999/02/01 00:00:00"}]),
      test_util:expected2(Msg, {string,"1999/02/01 00:00:00"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r13_test(doc) -> [{userdata,[{""}]}];
not_equal_r13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r35_test(doc) -> [{userdata,[{""}]}];
not_equal_r35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r57_test(doc) -> [{userdata,[{""}]}];
not_equal_r57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R35),IF(ISERROR(R13),IF(ERROR.TYPE(R35)=ERROR.TYPE(R13),1,0),0),IF(ISERROR(R13),0,IF(R35=R13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R35),IF(ISERROR(R13),IF(ERROR.TYPE(R35)=ERROR.TYPE(R13),1,0),0),IF(ISERROR(R13),0,IF(R35=R13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r8_test(doc) -> [{userdata,[{""}]}];
not_equal_r8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r19_test(doc) -> [{userdata,[{""}]}];
not_equal_r19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r30_test(doc) -> [{userdata,[{""}]}];
not_equal_r30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r41_test(doc) -> [{userdata,[{""}]}];
not_equal_r41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r52_test(doc) -> [{userdata,[{""}]}];
not_equal_r52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R30),IF(ISERROR(R8),IF(ERROR.TYPE(R30)=ERROR.TYPE(R8),1,0),0),IF(ISERROR(R8),0,IF(R30=R8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R30),IF(ISERROR(R8),IF(ERROR.TYPE(R30)=ERROR.TYPE(R8),1,0),0),IF(ISERROR(R8),0,IF(R30=R8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r63_test(doc) -> [{userdata,[{""}]}];
not_equal_r63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R41),IF(ISERROR(R19),IF(ERROR.TYPE(R41)=ERROR.TYPE(R19),1,0),0),IF(ISERROR(R19),0,IF(R41=R19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R41),IF(ISERROR(R19),IF(ERROR.TYPE(R41)=ERROR.TYPE(R19),1,0),0),IF(ISERROR(R19),0,IF(R41=R19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r3_test(doc) -> [{userdata,[{""}]}];
not_equal_r3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r14_test(doc) -> [{userdata,[{""}]}];
not_equal_r14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r25_test(doc) -> [{userdata,[{""}]}];
not_equal_r25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r36_test(doc) -> [{userdata,[{""}]}];
not_equal_r36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r47_test(doc) -> [{userdata,[{""}]}];
not_equal_r47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R25),IF(ISERROR(R3),IF(ERROR.TYPE(R25)=ERROR.TYPE(R3),1,0),0),IF(ISERROR(R3),0,IF(R25=R3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R25),IF(ISERROR(R3),IF(ERROR.TYPE(R25)=ERROR.TYPE(R3),1,0),0),IF(ISERROR(R3),0,IF(R25=R3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r58_test(doc) -> [{userdata,[{""}]}];
not_equal_r58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R36),IF(ISERROR(R14),IF(ERROR.TYPE(R36)=ERROR.TYPE(R14),1,0),0),IF(ISERROR(R14),0,IF(R36=R14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R36),IF(ISERROR(R14),IF(ERROR.TYPE(R36)=ERROR.TYPE(R14),1,0),0),IF(ISERROR(R14),0,IF(R36=R14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r9_test(doc) -> [{userdata,[{""}]}];
not_equal_r9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r20_test(doc) -> [{userdata,[{""}]}];
not_equal_r20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r31_test(doc) -> [{userdata,[{""}]}];
not_equal_r31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r42_test(doc) -> [{userdata,[{""}]}];
not_equal_r42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r53_test(doc) -> [{userdata,[{""}]}];
not_equal_r53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R31),IF(ISERROR(R9),IF(ERROR.TYPE(R31)=ERROR.TYPE(R9),1,0),0),IF(ISERROR(R9),0,IF(R31=R9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R31),IF(ISERROR(R9),IF(ERROR.TYPE(R31)=ERROR.TYPE(R9),1,0),0),IF(ISERROR(R9),0,IF(R31=R9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r64_test(doc) -> [{userdata,[{""}]}];
not_equal_r64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R42),IF(ISERROR(R20),IF(ERROR.TYPE(R42)=ERROR.TYPE(R20),1,0),0),IF(ISERROR(R20),0,IF(R42=R20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R42),IF(ISERROR(R20),IF(ERROR.TYPE(R42)=ERROR.TYPE(R20),1,0),0),IF(ISERROR(R20),0,IF(R42=R20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r4_test(doc) -> [{userdata,[{""}]}];
not_equal_r4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r15_test(doc) -> [{userdata,[{""}]}];
not_equal_r15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r26_test(doc) -> [{userdata,[{""}]}];
not_equal_r26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r37_test(doc) -> [{userdata,[{""}]}];
not_equal_r37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r48_test(doc) -> [{userdata,[{""}]}];
not_equal_r48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R26),IF(ISERROR(R4),IF(ERROR.TYPE(R26)=ERROR.TYPE(R4),1,0),0),IF(ISERROR(R4),0,IF(R26=R4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R26),IF(ISERROR(R4),IF(ERROR.TYPE(R26)=ERROR.TYPE(R4),1,0),0),IF(ISERROR(R4),0,IF(R26=R4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r59_test(doc) -> [{userdata,[{""}]}];
not_equal_r59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R37),IF(ISERROR(R15),IF(ERROR.TYPE(R37)=ERROR.TYPE(R15),1,0),0),IF(ISERROR(R15),0,IF(R37=R15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R37),IF(ISERROR(R15),IF(ERROR.TYPE(R37)=ERROR.TYPE(R15),1,0),0),IF(ISERROR(R15),0,IF(R37=R15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r10_test(doc) -> [{userdata,[{""}]}];
not_equal_r10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r21_test(doc) -> [{userdata,[{""}]}];
not_equal_r21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>R$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>R$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r32_test(doc) -> [{userdata,[{""}]}];
not_equal_r32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r43_test(doc) -> [{userdata,[{""}]}];
not_equal_r43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r54_test(doc) -> [{userdata,[{""}]}];
not_equal_r54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R32),IF(ISERROR(R10),IF(ERROR.TYPE(R32)=ERROR.TYPE(R10),1,0),0),IF(ISERROR(R10),0,IF(R32=R10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R32),IF(ISERROR(R10),IF(ERROR.TYPE(R32)=ERROR.TYPE(R10),1,0),0),IF(ISERROR(R10),0,IF(R32=R10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_r65_test(doc) -> [{userdata,[{""}]}];
not_equal_r65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,17}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,17}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(R43),IF(ISERROR(R21),IF(ERROR.TYPE(R43)=ERROR.TYPE(R21),1,0),0),IF(ISERROR(R21),0,IF(R43=R21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(R43),IF(ISERROR(R21),IF(ERROR.TYPE(R43)=ERROR.TYPE(R21),1,0),0),IF(ISERROR(R21),0,IF(R43=R21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h5_test(doc) -> [{userdata,[{""}]}];
not_equal_h5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h16_test(doc) -> [{userdata,[{""}]}];
not_equal_h16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h27_test(doc) -> [{userdata,[{""}]}];
not_equal_h27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h38_test(doc) -> [{userdata,[{""}]}];
not_equal_h38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h49_test(doc) -> [{userdata,[{""}]}];
not_equal_h49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H27),IF(ISERROR(H5),IF(ERROR.TYPE(H27)=ERROR.TYPE(H5),1,0),0),IF(ISERROR(H5),0,IF(H27=H5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H27),IF(ISERROR(H5),IF(ERROR.TYPE(H27)=ERROR.TYPE(H5),1,0),0),IF(ISERROR(H5),0,IF(H27=H5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h60_test(doc) -> [{userdata,[{""}]}];
not_equal_h60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H38),IF(ISERROR(H16),IF(ERROR.TYPE(H38)=ERROR.TYPE(H16),1,0),0),IF(ISERROR(H16),0,IF(H38=H16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H38),IF(ISERROR(H16),IF(ERROR.TYPE(H38)=ERROR.TYPE(H16),1,0),0),IF(ISERROR(H16),0,IF(H38=H16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h11_test(doc) -> [{userdata,[{""}]}];
not_equal_h11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h22_test(doc) -> [{userdata,[{""}]}];
not_equal_h22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h33_test(doc) -> [{userdata,[{""}]}];
not_equal_h33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h44_test(doc) -> [{userdata,[{""}]}];
not_equal_h44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h55_test(doc) -> [{userdata,[{""}]}];
not_equal_h55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H33),IF(ISERROR(H11),IF(ERROR.TYPE(H33)=ERROR.TYPE(H11),1,0),0),IF(ISERROR(H11),0,IF(H33=H11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H33),IF(ISERROR(H11),IF(ERROR.TYPE(H33)=ERROR.TYPE(H11),1,0),0),IF(ISERROR(H11),0,IF(H33=H11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h66_test(doc) -> [{userdata,[{""}]}];
not_equal_h66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H44),IF(ISERROR(H22),IF(ERROR.TYPE(H44)=ERROR.TYPE(H22),1,0),0),IF(ISERROR(H22),0,IF(H44=H22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H44),IF(ISERROR(H22),IF(ERROR.TYPE(H44)=ERROR.TYPE(H22),1,0),0),IF(ISERROR(H22),0,IF(H44=H22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h6_test(doc) -> [{userdata,[{""}]}];
not_equal_h6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h17_test(doc) -> [{userdata,[{""}]}];
not_equal_h17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h28_test(doc) -> [{userdata,[{""}]}];
not_equal_h28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h39_test(doc) -> [{userdata,[{""}]}];
not_equal_h39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h50_test(doc) -> [{userdata,[{""}]}];
not_equal_h50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H28),IF(ISERROR(H6),IF(ERROR.TYPE(H28)=ERROR.TYPE(H6),1,0),0),IF(ISERROR(H6),0,IF(H28=H6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H28),IF(ISERROR(H6),IF(ERROR.TYPE(H28)=ERROR.TYPE(H6),1,0),0),IF(ISERROR(H6),0,IF(H28=H6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h61_test(doc) -> [{userdata,[{""}]}];
not_equal_h61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H39),IF(ISERROR(H17),IF(ERROR.TYPE(H39)=ERROR.TYPE(H17),1,0),0),IF(ISERROR(H17),0,IF(H39=H17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H39),IF(ISERROR(H17),IF(ERROR.TYPE(H39)=ERROR.TYPE(H17),1,0),0),IF(ISERROR(H17),0,IF(H39=H17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h1_test(doc) -> [{userdata,[{""}]}];
not_equal_h1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h12_test(doc) -> [{userdata,[{""}]}];
not_equal_h12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h34_test(doc) -> [{userdata,[{""}]}];
not_equal_h34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h56_test(doc) -> [{userdata,[{""}]}];
not_equal_h56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H34),IF(ISERROR(H12),IF(ERROR.TYPE(H34)=ERROR.TYPE(H12),1,0),0),IF(ISERROR(H12),0,IF(H34=H12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H34),IF(ISERROR(H12),IF(ERROR.TYPE(H34)=ERROR.TYPE(H12),1,0),0),IF(ISERROR(H12),0,IF(H34=H12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h7_test(doc) -> [{userdata,[{""}]}];
not_equal_h7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h18_test(doc) -> [{userdata,[{""}]}];
not_equal_h18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h29_test(doc) -> [{userdata,[{""}]}];
not_equal_h29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h40_test(doc) -> [{userdata,[{""}]}];
not_equal_h40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h51_test(doc) -> [{userdata,[{""}]}];
not_equal_h51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H29),IF(ISERROR(H7),IF(ERROR.TYPE(H29)=ERROR.TYPE(H7),1,0),0),IF(ISERROR(H7),0,IF(H29=H7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H29),IF(ISERROR(H7),IF(ERROR.TYPE(H29)=ERROR.TYPE(H7),1,0),0),IF(ISERROR(H7),0,IF(H29=H7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h62_test(doc) -> [{userdata,[{""}]}];
not_equal_h62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H40),IF(ISERROR(H18),IF(ERROR.TYPE(H40)=ERROR.TYPE(H18),1,0),0),IF(ISERROR(H18),0,IF(H40=H18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H40),IF(ISERROR(H18),IF(ERROR.TYPE(H40)=ERROR.TYPE(H18),1,0),0),IF(ISERROR(H18),0,IF(H40=H18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h2_test(doc) -> [{userdata,[{""}]}];
not_equal_h2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h13_test(doc) -> [{userdata,[{""}]}];
not_equal_h13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h35_test(doc) -> [{userdata,[{""}]}];
not_equal_h35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h57_test(doc) -> [{userdata,[{""}]}];
not_equal_h57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H35),IF(ISERROR(H13),IF(ERROR.TYPE(H35)=ERROR.TYPE(H13),1,0),0),IF(ISERROR(H13),0,IF(H35=H13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H35),IF(ISERROR(H13),IF(ERROR.TYPE(H35)=ERROR.TYPE(H13),1,0),0),IF(ISERROR(H13),0,IF(H35=H13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h8_test(doc) -> [{userdata,[{""}]}];
not_equal_h8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h19_test(doc) -> [{userdata,[{""}]}];
not_equal_h19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h30_test(doc) -> [{userdata,[{""}]}];
not_equal_h30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h41_test(doc) -> [{userdata,[{""}]}];
not_equal_h41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h52_test(doc) -> [{userdata,[{""}]}];
not_equal_h52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H30),IF(ISERROR(H8),IF(ERROR.TYPE(H30)=ERROR.TYPE(H8),1,0),0),IF(ISERROR(H8),0,IF(H30=H8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H30),IF(ISERROR(H8),IF(ERROR.TYPE(H30)=ERROR.TYPE(H8),1,0),0),IF(ISERROR(H8),0,IF(H30=H8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h63_test(doc) -> [{userdata,[{""}]}];
not_equal_h63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H41),IF(ISERROR(H19),IF(ERROR.TYPE(H41)=ERROR.TYPE(H19),1,0),0),IF(ISERROR(H19),0,IF(H41=H19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H41),IF(ISERROR(H19),IF(ERROR.TYPE(H41)=ERROR.TYPE(H19),1,0),0),IF(ISERROR(H19),0,IF(H41=H19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h3_test(doc) -> [{userdata,[{""}]}];
not_equal_h3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h14_test(doc) -> [{userdata,[{""}]}];
not_equal_h14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h25_test(doc) -> [{userdata,[{""}]}];
not_equal_h25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h36_test(doc) -> [{userdata,[{""}]}];
not_equal_h36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h47_test(doc) -> [{userdata,[{""}]}];
not_equal_h47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H25),IF(ISERROR(H3),IF(ERROR.TYPE(H25)=ERROR.TYPE(H3),1,0),0),IF(ISERROR(H3),0,IF(H25=H3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H25),IF(ISERROR(H3),IF(ERROR.TYPE(H25)=ERROR.TYPE(H3),1,0),0),IF(ISERROR(H3),0,IF(H25=H3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h58_test(doc) -> [{userdata,[{""}]}];
not_equal_h58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H36),IF(ISERROR(H14),IF(ERROR.TYPE(H36)=ERROR.TYPE(H14),1,0),0),IF(ISERROR(H14),0,IF(H36=H14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H36),IF(ISERROR(H14),IF(ERROR.TYPE(H36)=ERROR.TYPE(H14),1,0),0),IF(ISERROR(H14),0,IF(H36=H14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h9_test(doc) -> [{userdata,[{""}]}];
not_equal_h9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h20_test(doc) -> [{userdata,[{""}]}];
not_equal_h20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h31_test(doc) -> [{userdata,[{""}]}];
not_equal_h31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h42_test(doc) -> [{userdata,[{""}]}];
not_equal_h42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h53_test(doc) -> [{userdata,[{""}]}];
not_equal_h53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H31),IF(ISERROR(H9),IF(ERROR.TYPE(H31)=ERROR.TYPE(H9),1,0),0),IF(ISERROR(H9),0,IF(H31=H9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H31),IF(ISERROR(H9),IF(ERROR.TYPE(H31)=ERROR.TYPE(H9),1,0),0),IF(ISERROR(H9),0,IF(H31=H9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h64_test(doc) -> [{userdata,[{""}]}];
not_equal_h64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H42),IF(ISERROR(H20),IF(ERROR.TYPE(H42)=ERROR.TYPE(H20),1,0),0),IF(ISERROR(H20),0,IF(H42=H20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H42),IF(ISERROR(H20),IF(ERROR.TYPE(H42)=ERROR.TYPE(H20),1,0),0),IF(ISERROR(H20),0,IF(H42=H20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h4_test(doc) -> [{userdata,[{""}]}];
not_equal_h4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h15_test(doc) -> [{userdata,[{""}]}];
not_equal_h15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h26_test(doc) -> [{userdata,[{""}]}];
not_equal_h26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h37_test(doc) -> [{userdata,[{""}]}];
not_equal_h37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h48_test(doc) -> [{userdata,[{""}]}];
not_equal_h48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H26),IF(ISERROR(H4),IF(ERROR.TYPE(H26)=ERROR.TYPE(H4),1,0),0),IF(ISERROR(H4),0,IF(H26=H4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H26),IF(ISERROR(H4),IF(ERROR.TYPE(H26)=ERROR.TYPE(H4),1,0),0),IF(ISERROR(H4),0,IF(H26=H4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h59_test(doc) -> [{userdata,[{""}]}];
not_equal_h59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H37),IF(ISERROR(H15),IF(ERROR.TYPE(H37)=ERROR.TYPE(H15),1,0),0),IF(ISERROR(H15),0,IF(H37=H15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H37),IF(ISERROR(H15),IF(ERROR.TYPE(H37)=ERROR.TYPE(H15),1,0),0),IF(ISERROR(H15),0,IF(H37=H15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h10_test(doc) -> [{userdata,[{""}]}];
not_equal_h10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h21_test(doc) -> [{userdata,[{""}]}];
not_equal_h21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>H$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>H$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h32_test(doc) -> [{userdata,[{""}]}];
not_equal_h32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h43_test(doc) -> [{userdata,[{""}]}];
not_equal_h43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h54_test(doc) -> [{userdata,[{""}]}];
not_equal_h54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H32),IF(ISERROR(H10),IF(ERROR.TYPE(H32)=ERROR.TYPE(H10),1,0),0),IF(ISERROR(H10),0,IF(H32=H10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H32),IF(ISERROR(H10),IF(ERROR.TYPE(H32)=ERROR.TYPE(H10),1,0),0),IF(ISERROR(H10),0,IF(H32=H10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_h65_test(doc) -> [{userdata,[{""}]}];
not_equal_h65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,7}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,7}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(H43),IF(ISERROR(H21),IF(ERROR.TYPE(H43)=ERROR.TYPE(H21),1,0),0),IF(ISERROR(H21),0,IF(H43=H21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(H43),IF(ISERROR(H21),IF(ERROR.TYPE(H43)=ERROR.TYPE(H21),1,0),0),IF(ISERROR(H21),0,IF(H43=H21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s5_test(doc) -> [{userdata,[{""}]}];
not_equal_s5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s16_test(doc) -> [{userdata,[{""}]}];
not_equal_s16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s27_test(doc) -> [{userdata,[{""}]}];
not_equal_s27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s38_test(doc) -> [{userdata,[{""}]}];
not_equal_s38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s49_test(doc) -> [{userdata,[{""}]}];
not_equal_s49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S27),IF(ISERROR(S5),IF(ERROR.TYPE(S27)=ERROR.TYPE(S5),1,0),0),IF(ISERROR(S5),0,IF(S27=S5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S27),IF(ISERROR(S5),IF(ERROR.TYPE(S27)=ERROR.TYPE(S5),1,0),0),IF(ISERROR(S5),0,IF(S27=S5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s60_test(doc) -> [{userdata,[{""}]}];
not_equal_s60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S38),IF(ISERROR(S16),IF(ERROR.TYPE(S38)=ERROR.TYPE(S16),1,0),0),IF(ISERROR(S16),0,IF(S38=S16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S38),IF(ISERROR(S16),IF(ERROR.TYPE(S38)=ERROR.TYPE(S16),1,0),0),IF(ISERROR(S16),0,IF(S38=S16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s11_test(doc) -> [{userdata,[{""}]}];
not_equal_s11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s22_test(doc) -> [{userdata,[{""}]}];
not_equal_s22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s33_test(doc) -> [{userdata,[{""}]}];
not_equal_s33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s44_test(doc) -> [{userdata,[{""}]}];
not_equal_s44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s55_test(doc) -> [{userdata,[{""}]}];
not_equal_s55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S33),IF(ISERROR(S11),IF(ERROR.TYPE(S33)=ERROR.TYPE(S11),1,0),0),IF(ISERROR(S11),0,IF(S33=S11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S33),IF(ISERROR(S11),IF(ERROR.TYPE(S33)=ERROR.TYPE(S11),1,0),0),IF(ISERROR(S11),0,IF(S33=S11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s66_test(doc) -> [{userdata,[{""}]}];
not_equal_s66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S44),IF(ISERROR(S22),IF(ERROR.TYPE(S44)=ERROR.TYPE(S22),1,0),0),IF(ISERROR(S22),0,IF(S44=S22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S44),IF(ISERROR(S22),IF(ERROR.TYPE(S44)=ERROR.TYPE(S22),1,0),0),IF(ISERROR(S22),0,IF(S44=S22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s6_test(doc) -> [{userdata,[{""}]}];
not_equal_s6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s17_test(doc) -> [{userdata,[{""}]}];
not_equal_s17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s28_test(doc) -> [{userdata,[{""}]}];
not_equal_s28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s39_test(doc) -> [{userdata,[{""}]}];
not_equal_s39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s50_test(doc) -> [{userdata,[{""}]}];
not_equal_s50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S28),IF(ISERROR(S6),IF(ERROR.TYPE(S28)=ERROR.TYPE(S6),1,0),0),IF(ISERROR(S6),0,IF(S28=S6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S28),IF(ISERROR(S6),IF(ERROR.TYPE(S28)=ERROR.TYPE(S6),1,0),0),IF(ISERROR(S6),0,IF(S28=S6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s61_test(doc) -> [{userdata,[{""}]}];
not_equal_s61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S39),IF(ISERROR(S17),IF(ERROR.TYPE(S39)=ERROR.TYPE(S17),1,0),0),IF(ISERROR(S17),0,IF(S39=S17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S39),IF(ISERROR(S17),IF(ERROR.TYPE(S39)=ERROR.TYPE(S17),1,0),0),IF(ISERROR(S17),0,IF(S39=S17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s1_test(doc) -> [{userdata,[{""}]}];
not_equal_s1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Integer"}]),
      test_util:expected2(Msg, {string,"Integer"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s12_test(doc) -> [{userdata,[{""}]}];
not_equal_s12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s34_test(doc) -> [{userdata,[{""}]}];
not_equal_s34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s56_test(doc) -> [{userdata,[{""}]}];
not_equal_s56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S34),IF(ISERROR(S12),IF(ERROR.TYPE(S34)=ERROR.TYPE(S12),1,0),0),IF(ISERROR(S12),0,IF(S34=S12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S34),IF(ISERROR(S12),IF(ERROR.TYPE(S34)=ERROR.TYPE(S12),1,0),0),IF(ISERROR(S12),0,IF(S34=S12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s7_test(doc) -> [{userdata,[{""}]}];
not_equal_s7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s18_test(doc) -> [{userdata,[{""}]}];
not_equal_s18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s29_test(doc) -> [{userdata,[{""}]}];
not_equal_s29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s40_test(doc) -> [{userdata,[{""}]}];
not_equal_s40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s51_test(doc) -> [{userdata,[{""}]}];
not_equal_s51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S29),IF(ISERROR(S7),IF(ERROR.TYPE(S29)=ERROR.TYPE(S7),1,0),0),IF(ISERROR(S7),0,IF(S29=S7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S29),IF(ISERROR(S7),IF(ERROR.TYPE(S29)=ERROR.TYPE(S7),1,0),0),IF(ISERROR(S7),0,IF(S29=S7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s62_test(doc) -> [{userdata,[{""}]}];
not_equal_s62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S40),IF(ISERROR(S18),IF(ERROR.TYPE(S40)=ERROR.TYPE(S18),1,0),0),IF(ISERROR(S18),0,IF(S40=S18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S40),IF(ISERROR(S18),IF(ERROR.TYPE(S40)=ERROR.TYPE(S18),1,0),0),IF(ISERROR(S18),0,IF(S40=S18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s2_test(doc) -> [{userdata,[{""}]}];
not_equal_s2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"1999/02/02 00:00:00"}]),
      test_util:expected2(Msg, {string,"1999/02/02 00:00:00"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s13_test(doc) -> [{userdata,[{""}]}];
not_equal_s13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s35_test(doc) -> [{userdata,[{""}]}];
not_equal_s35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s57_test(doc) -> [{userdata,[{""}]}];
not_equal_s57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S35),IF(ISERROR(S13),IF(ERROR.TYPE(S35)=ERROR.TYPE(S13),1,0),0),IF(ISERROR(S13),0,IF(S35=S13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S35),IF(ISERROR(S13),IF(ERROR.TYPE(S35)=ERROR.TYPE(S13),1,0),0),IF(ISERROR(S13),0,IF(S35=S13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s8_test(doc) -> [{userdata,[{""}]}];
not_equal_s8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s19_test(doc) -> [{userdata,[{""}]}];
not_equal_s19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s30_test(doc) -> [{userdata,[{""}]}];
not_equal_s30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s41_test(doc) -> [{userdata,[{""}]}];
not_equal_s41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s52_test(doc) -> [{userdata,[{""}]}];
not_equal_s52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S30),IF(ISERROR(S8),IF(ERROR.TYPE(S30)=ERROR.TYPE(S8),1,0),0),IF(ISERROR(S8),0,IF(S30=S8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S30),IF(ISERROR(S8),IF(ERROR.TYPE(S30)=ERROR.TYPE(S8),1,0),0),IF(ISERROR(S8),0,IF(S30=S8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s63_test(doc) -> [{userdata,[{""}]}];
not_equal_s63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S41),IF(ISERROR(S19),IF(ERROR.TYPE(S41)=ERROR.TYPE(S19),1,0),0),IF(ISERROR(S19),0,IF(S41=S19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S41),IF(ISERROR(S19),IF(ERROR.TYPE(S41)=ERROR.TYPE(S19),1,0),0),IF(ISERROR(S19),0,IF(S41=S19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s3_test(doc) -> [{userdata,[{""}]}];
not_equal_s3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s14_test(doc) -> [{userdata,[{""}]}];
not_equal_s14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s25_test(doc) -> [{userdata,[{""}]}];
not_equal_s25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s36_test(doc) -> [{userdata,[{""}]}];
not_equal_s36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s47_test(doc) -> [{userdata,[{""}]}];
not_equal_s47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S25),IF(ISERROR(S3),IF(ERROR.TYPE(S25)=ERROR.TYPE(S3),1,0),0),IF(ISERROR(S3),0,IF(S25=S3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S25),IF(ISERROR(S3),IF(ERROR.TYPE(S25)=ERROR.TYPE(S3),1,0),0),IF(ISERROR(S3),0,IF(S25=S3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s58_test(doc) -> [{userdata,[{""}]}];
not_equal_s58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S36),IF(ISERROR(S14),IF(ERROR.TYPE(S36)=ERROR.TYPE(S14),1,0),0),IF(ISERROR(S14),0,IF(S36=S14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S36),IF(ISERROR(S14),IF(ERROR.TYPE(S36)=ERROR.TYPE(S14),1,0),0),IF(ISERROR(S14),0,IF(S36=S14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s9_test(doc) -> [{userdata,[{""}]}];
not_equal_s9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s20_test(doc) -> [{userdata,[{""}]}];
not_equal_s20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s31_test(doc) -> [{userdata,[{""}]}];
not_equal_s31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s42_test(doc) -> [{userdata,[{""}]}];
not_equal_s42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s53_test(doc) -> [{userdata,[{""}]}];
not_equal_s53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S31),IF(ISERROR(S9),IF(ERROR.TYPE(S31)=ERROR.TYPE(S9),1,0),0),IF(ISERROR(S9),0,IF(S31=S9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S31),IF(ISERROR(S9),IF(ERROR.TYPE(S31)=ERROR.TYPE(S9),1,0),0),IF(ISERROR(S9),0,IF(S31=S9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s64_test(doc) -> [{userdata,[{""}]}];
not_equal_s64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S42),IF(ISERROR(S20),IF(ERROR.TYPE(S42)=ERROR.TYPE(S20),1,0),0),IF(ISERROR(S20),0,IF(S42=S20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S42),IF(ISERROR(S20),IF(ERROR.TYPE(S42)=ERROR.TYPE(S20),1,0),0),IF(ISERROR(S20),0,IF(S42=S20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s4_test(doc) -> [{userdata,[{""}]}];
not_equal_s4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s15_test(doc) -> [{userdata,[{""}]}];
not_equal_s15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s26_test(doc) -> [{userdata,[{""}]}];
not_equal_s26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s37_test(doc) -> [{userdata,[{""}]}];
not_equal_s37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s48_test(doc) -> [{userdata,[{""}]}];
not_equal_s48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S26),IF(ISERROR(S4),IF(ERROR.TYPE(S26)=ERROR.TYPE(S4),1,0),0),IF(ISERROR(S4),0,IF(S26=S4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S26),IF(ISERROR(S4),IF(ERROR.TYPE(S26)=ERROR.TYPE(S4),1,0),0),IF(ISERROR(S4),0,IF(S26=S4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s59_test(doc) -> [{userdata,[{""}]}];
not_equal_s59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S37),IF(ISERROR(S15),IF(ERROR.TYPE(S37)=ERROR.TYPE(S15),1,0),0),IF(ISERROR(S15),0,IF(S37=S15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S37),IF(ISERROR(S15),IF(ERROR.TYPE(S37)=ERROR.TYPE(S15),1,0),0),IF(ISERROR(S15),0,IF(S37=S15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s10_test(doc) -> [{userdata,[{""}]}];
not_equal_s10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s21_test(doc) -> [{userdata,[{""}]}];
not_equal_s21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>S$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>S$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s32_test(doc) -> [{userdata,[{""}]}];
not_equal_s32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s43_test(doc) -> [{userdata,[{""}]}];
not_equal_s43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s54_test(doc) -> [{userdata,[{""}]}];
not_equal_s54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S32),IF(ISERROR(S10),IF(ERROR.TYPE(S32)=ERROR.TYPE(S10),1,0),0),IF(ISERROR(S10),0,IF(S32=S10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S32),IF(ISERROR(S10),IF(ERROR.TYPE(S32)=ERROR.TYPE(S10),1,0),0),IF(ISERROR(S10),0,IF(S32=S10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_s65_test(doc) -> [{userdata,[{""}]}];
not_equal_s65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,18}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,18}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(S43),IF(ISERROR(S21),IF(ERROR.TYPE(S43)=ERROR.TYPE(S21),1,0),0),IF(ISERROR(S21),0,IF(S43=S21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(S43),IF(ISERROR(S21),IF(ERROR.TYPE(S43)=ERROR.TYPE(S21),1,0),0),IF(ISERROR(S21),0,IF(S43=S21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i5_test(doc) -> [{userdata,[{""}]}];
not_equal_i5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i16_test(doc) -> [{userdata,[{""}]}];
not_equal_i16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i27_test(doc) -> [{userdata,[{""}]}];
not_equal_i27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i38_test(doc) -> [{userdata,[{""}]}];
not_equal_i38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i49_test(doc) -> [{userdata,[{""}]}];
not_equal_i49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I27),IF(ISERROR(I5),IF(ERROR.TYPE(I27)=ERROR.TYPE(I5),1,0),0),IF(ISERROR(I5),0,IF(I27=I5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I27),IF(ISERROR(I5),IF(ERROR.TYPE(I27)=ERROR.TYPE(I5),1,0),0),IF(ISERROR(I5),0,IF(I27=I5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i60_test(doc) -> [{userdata,[{""}]}];
not_equal_i60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I38),IF(ISERROR(I16),IF(ERROR.TYPE(I38)=ERROR.TYPE(I16),1,0),0),IF(ISERROR(I16),0,IF(I38=I16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I38),IF(ISERROR(I16),IF(ERROR.TYPE(I38)=ERROR.TYPE(I16),1,0),0),IF(ISERROR(I16),0,IF(I38=I16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i11_test(doc) -> [{userdata,[{""}]}];
not_equal_i11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i22_test(doc) -> [{userdata,[{""}]}];
not_equal_i22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i33_test(doc) -> [{userdata,[{""}]}];
not_equal_i33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i44_test(doc) -> [{userdata,[{""}]}];
not_equal_i44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i55_test(doc) -> [{userdata,[{""}]}];
not_equal_i55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I33),IF(ISERROR(I11),IF(ERROR.TYPE(I33)=ERROR.TYPE(I11),1,0),0),IF(ISERROR(I11),0,IF(I33=I11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I33),IF(ISERROR(I11),IF(ERROR.TYPE(I33)=ERROR.TYPE(I11),1,0),0),IF(ISERROR(I11),0,IF(I33=I11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i66_test(doc) -> [{userdata,[{""}]}];
not_equal_i66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I44),IF(ISERROR(I22),IF(ERROR.TYPE(I44)=ERROR.TYPE(I22),1,0),0),IF(ISERROR(I22),0,IF(I44=I22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I44),IF(ISERROR(I22),IF(ERROR.TYPE(I44)=ERROR.TYPE(I22),1,0),0),IF(ISERROR(I22),0,IF(I44=I22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i6_test(doc) -> [{userdata,[{""}]}];
not_equal_i6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i17_test(doc) -> [{userdata,[{""}]}];
not_equal_i17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i28_test(doc) -> [{userdata,[{""}]}];
not_equal_i28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i39_test(doc) -> [{userdata,[{""}]}];
not_equal_i39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i50_test(doc) -> [{userdata,[{""}]}];
not_equal_i50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I28),IF(ISERROR(I6),IF(ERROR.TYPE(I28)=ERROR.TYPE(I6),1,0),0),IF(ISERROR(I6),0,IF(I28=I6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I28),IF(ISERROR(I6),IF(ERROR.TYPE(I28)=ERROR.TYPE(I6),1,0),0),IF(ISERROR(I6),0,IF(I28=I6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i61_test(doc) -> [{userdata,[{""}]}];
not_equal_i61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I39),IF(ISERROR(I17),IF(ERROR.TYPE(I39)=ERROR.TYPE(I17),1,0),0),IF(ISERROR(I17),0,IF(I39=I17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I39),IF(ISERROR(I17),IF(ERROR.TYPE(I39)=ERROR.TYPE(I17),1,0),0),IF(ISERROR(I17),0,IF(I39=I17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i1_test(doc) -> [{userdata,[{""}]}];
not_equal_i1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i12_test(doc) -> [{userdata,[{""}]}];
not_equal_i12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i34_test(doc) -> [{userdata,[{""}]}];
not_equal_i34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i56_test(doc) -> [{userdata,[{""}]}];
not_equal_i56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I34),IF(ISERROR(I12),IF(ERROR.TYPE(I34)=ERROR.TYPE(I12),1,0),0),IF(ISERROR(I12),0,IF(I34=I12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I34),IF(ISERROR(I12),IF(ERROR.TYPE(I34)=ERROR.TYPE(I12),1,0),0),IF(ISERROR(I12),0,IF(I34=I12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i7_test(doc) -> [{userdata,[{""}]}];
not_equal_i7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i18_test(doc) -> [{userdata,[{""}]}];
not_equal_i18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i29_test(doc) -> [{userdata,[{""}]}];
not_equal_i29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i40_test(doc) -> [{userdata,[{""}]}];
not_equal_i40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i51_test(doc) -> [{userdata,[{""}]}];
not_equal_i51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I29),IF(ISERROR(I7),IF(ERROR.TYPE(I29)=ERROR.TYPE(I7),1,0),0),IF(ISERROR(I7),0,IF(I29=I7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I29),IF(ISERROR(I7),IF(ERROR.TYPE(I29)=ERROR.TYPE(I7),1,0),0),IF(ISERROR(I7),0,IF(I29=I7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i62_test(doc) -> [{userdata,[{""}]}];
not_equal_i62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I40),IF(ISERROR(I18),IF(ERROR.TYPE(I40)=ERROR.TYPE(I18),1,0),0),IF(ISERROR(I18),0,IF(I40=I18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I40),IF(ISERROR(I18),IF(ERROR.TYPE(I40)=ERROR.TYPE(I18),1,0),0),IF(ISERROR(I18),0,IF(I40=I18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i2_test(doc) -> [{userdata,[{""}]}];
not_equal_i2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i13_test(doc) -> [{userdata,[{""}]}];
not_equal_i13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i35_test(doc) -> [{userdata,[{""}]}];
not_equal_i35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i57_test(doc) -> [{userdata,[{""}]}];
not_equal_i57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I35),IF(ISERROR(I13),IF(ERROR.TYPE(I35)=ERROR.TYPE(I13),1,0),0),IF(ISERROR(I13),0,IF(I35=I13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I35),IF(ISERROR(I13),IF(ERROR.TYPE(I35)=ERROR.TYPE(I13),1,0),0),IF(ISERROR(I13),0,IF(I35=I13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i8_test(doc) -> [{userdata,[{""}]}];
not_equal_i8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i19_test(doc) -> [{userdata,[{""}]}];
not_equal_i19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i30_test(doc) -> [{userdata,[{""}]}];
not_equal_i30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i41_test(doc) -> [{userdata,[{""}]}];
not_equal_i41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i52_test(doc) -> [{userdata,[{""}]}];
not_equal_i52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I30),IF(ISERROR(I8),IF(ERROR.TYPE(I30)=ERROR.TYPE(I8),1,0),0),IF(ISERROR(I8),0,IF(I30=I8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I30),IF(ISERROR(I8),IF(ERROR.TYPE(I30)=ERROR.TYPE(I8),1,0),0),IF(ISERROR(I8),0,IF(I30=I8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i63_test(doc) -> [{userdata,[{""}]}];
not_equal_i63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I41),IF(ISERROR(I19),IF(ERROR.TYPE(I41)=ERROR.TYPE(I19),1,0),0),IF(ISERROR(I19),0,IF(I41=I19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I41),IF(ISERROR(I19),IF(ERROR.TYPE(I41)=ERROR.TYPE(I19),1,0),0),IF(ISERROR(I19),0,IF(I41=I19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i3_test(doc) -> [{userdata,[{""}]}];
not_equal_i3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i14_test(doc) -> [{userdata,[{""}]}];
not_equal_i14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i25_test(doc) -> [{userdata,[{""}]}];
not_equal_i25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i36_test(doc) -> [{userdata,[{""}]}];
not_equal_i36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i47_test(doc) -> [{userdata,[{""}]}];
not_equal_i47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I25),IF(ISERROR(I3),IF(ERROR.TYPE(I25)=ERROR.TYPE(I3),1,0),0),IF(ISERROR(I3),0,IF(I25=I3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I25),IF(ISERROR(I3),IF(ERROR.TYPE(I25)=ERROR.TYPE(I3),1,0),0),IF(ISERROR(I3),0,IF(I25=I3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i58_test(doc) -> [{userdata,[{""}]}];
not_equal_i58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I36),IF(ISERROR(I14),IF(ERROR.TYPE(I36)=ERROR.TYPE(I14),1,0),0),IF(ISERROR(I14),0,IF(I36=I14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I36),IF(ISERROR(I14),IF(ERROR.TYPE(I36)=ERROR.TYPE(I14),1,0),0),IF(ISERROR(I14),0,IF(I36=I14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i9_test(doc) -> [{userdata,[{""}]}];
not_equal_i9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i20_test(doc) -> [{userdata,[{""}]}];
not_equal_i20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i31_test(doc) -> [{userdata,[{""}]}];
not_equal_i31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i42_test(doc) -> [{userdata,[{""}]}];
not_equal_i42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i53_test(doc) -> [{userdata,[{""}]}];
not_equal_i53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I31),IF(ISERROR(I9),IF(ERROR.TYPE(I31)=ERROR.TYPE(I9),1,0),0),IF(ISERROR(I9),0,IF(I31=I9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I31),IF(ISERROR(I9),IF(ERROR.TYPE(I31)=ERROR.TYPE(I9),1,0),0),IF(ISERROR(I9),0,IF(I31=I9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i64_test(doc) -> [{userdata,[{""}]}];
not_equal_i64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I42),IF(ISERROR(I20),IF(ERROR.TYPE(I42)=ERROR.TYPE(I20),1,0),0),IF(ISERROR(I20),0,IF(I42=I20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I42),IF(ISERROR(I20),IF(ERROR.TYPE(I42)=ERROR.TYPE(I20),1,0),0),IF(ISERROR(I20),0,IF(I42=I20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i4_test(doc) -> [{userdata,[{""}]}];
not_equal_i4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i15_test(doc) -> [{userdata,[{""}]}];
not_equal_i15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i26_test(doc) -> [{userdata,[{""}]}];
not_equal_i26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i37_test(doc) -> [{userdata,[{""}]}];
not_equal_i37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i48_test(doc) -> [{userdata,[{""}]}];
not_equal_i48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I26),IF(ISERROR(I4),IF(ERROR.TYPE(I26)=ERROR.TYPE(I4),1,0),0),IF(ISERROR(I4),0,IF(I26=I4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I26),IF(ISERROR(I4),IF(ERROR.TYPE(I26)=ERROR.TYPE(I4),1,0),0),IF(ISERROR(I4),0,IF(I26=I4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i59_test(doc) -> [{userdata,[{""}]}];
not_equal_i59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I37),IF(ISERROR(I15),IF(ERROR.TYPE(I37)=ERROR.TYPE(I15),1,0),0),IF(ISERROR(I15),0,IF(I37=I15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I37),IF(ISERROR(I15),IF(ERROR.TYPE(I37)=ERROR.TYPE(I15),1,0),0),IF(ISERROR(I15),0,IF(I37=I15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i10_test(doc) -> [{userdata,[{""}]}];
not_equal_i10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i21_test(doc) -> [{userdata,[{""}]}];
not_equal_i21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>I$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>I$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i32_test(doc) -> [{userdata,[{""}]}];
not_equal_i32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i43_test(doc) -> [{userdata,[{""}]}];
not_equal_i43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i54_test(doc) -> [{userdata,[{""}]}];
not_equal_i54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I32),IF(ISERROR(I10),IF(ERROR.TYPE(I32)=ERROR.TYPE(I10),1,0),0),IF(ISERROR(I10),0,IF(I32=I10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I32),IF(ISERROR(I10),IF(ERROR.TYPE(I32)=ERROR.TYPE(I10),1,0),0),IF(ISERROR(I10),0,IF(I32=I10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_i65_test(doc) -> [{userdata,[{""}]}];
not_equal_i65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,8}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,8}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(I43),IF(ISERROR(I21),IF(ERROR.TYPE(I43)=ERROR.TYPE(I21),1,0),0),IF(ISERROR(I21),0,IF(I43=I21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(I43),IF(ISERROR(I21),IF(ERROR.TYPE(I43)=ERROR.TYPE(I21),1,0),0),IF(ISERROR(I21),0,IF(I43=I21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t5_test(doc) -> [{userdata,[{""}]}];
not_equal_t5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t16_test(doc) -> [{userdata,[{""}]}];
not_equal_t16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t27_test(doc) -> [{userdata,[{""}]}];
not_equal_t27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t38_test(doc) -> [{userdata,[{""}]}];
not_equal_t38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t49_test(doc) -> [{userdata,[{""}]}];
not_equal_t49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T27),IF(ISERROR(T5),IF(ERROR.TYPE(T27)=ERROR.TYPE(T5),1,0),0),IF(ISERROR(T5),0,IF(T27=T5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T27),IF(ISERROR(T5),IF(ERROR.TYPE(T27)=ERROR.TYPE(T5),1,0),0),IF(ISERROR(T5),0,IF(T27=T5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t60_test(doc) -> [{userdata,[{""}]}];
not_equal_t60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T38),IF(ISERROR(T16),IF(ERROR.TYPE(T38)=ERROR.TYPE(T16),1,0),0),IF(ISERROR(T16),0,IF(T38=T16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T38),IF(ISERROR(T16),IF(ERROR.TYPE(T38)=ERROR.TYPE(T16),1,0),0),IF(ISERROR(T16),0,IF(T38=T16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t11_test(doc) -> [{userdata,[{""}]}];
not_equal_t11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t22_test(doc) -> [{userdata,[{""}]}];
not_equal_t22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t33_test(doc) -> [{userdata,[{""}]}];
not_equal_t33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t44_test(doc) -> [{userdata,[{""}]}];
not_equal_t44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t55_test(doc) -> [{userdata,[{""}]}];
not_equal_t55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T33),IF(ISERROR(T11),IF(ERROR.TYPE(T33)=ERROR.TYPE(T11),1,0),0),IF(ISERROR(T11),0,IF(T33=T11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T33),IF(ISERROR(T11),IF(ERROR.TYPE(T33)=ERROR.TYPE(T11),1,0),0),IF(ISERROR(T11),0,IF(T33=T11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t66_test(doc) -> [{userdata,[{""}]}];
not_equal_t66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T44),IF(ISERROR(T22),IF(ERROR.TYPE(T44)=ERROR.TYPE(T22),1,0),0),IF(ISERROR(T22),0,IF(T44=T22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T44),IF(ISERROR(T22),IF(ERROR.TYPE(T44)=ERROR.TYPE(T22),1,0),0),IF(ISERROR(T22),0,IF(T44=T22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t6_test(doc) -> [{userdata,[{""}]}];
not_equal_t6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t17_test(doc) -> [{userdata,[{""}]}];
not_equal_t17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t28_test(doc) -> [{userdata,[{""}]}];
not_equal_t28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t39_test(doc) -> [{userdata,[{""}]}];
not_equal_t39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t50_test(doc) -> [{userdata,[{""}]}];
not_equal_t50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T28),IF(ISERROR(T6),IF(ERROR.TYPE(T28)=ERROR.TYPE(T6),1,0),0),IF(ISERROR(T6),0,IF(T28=T6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T28),IF(ISERROR(T6),IF(ERROR.TYPE(T28)=ERROR.TYPE(T6),1,0),0),IF(ISERROR(T6),0,IF(T28=T6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t61_test(doc) -> [{userdata,[{""}]}];
not_equal_t61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T39),IF(ISERROR(T17),IF(ERROR.TYPE(T39)=ERROR.TYPE(T17),1,0),0),IF(ISERROR(T17),0,IF(T39=T17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T39),IF(ISERROR(T17),IF(ERROR.TYPE(T39)=ERROR.TYPE(T17),1,0),0),IF(ISERROR(T17),0,IF(T39=T17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t1_test(doc) -> [{userdata,[{""}]}];
not_equal_t1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Zero"}]),
      test_util:expected2(Msg, {string,"Zero"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t12_test(doc) -> [{userdata,[{""}]}];
not_equal_t12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t34_test(doc) -> [{userdata,[{""}]}];
not_equal_t34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t56_test(doc) -> [{userdata,[{""}]}];
not_equal_t56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T34),IF(ISERROR(T12),IF(ERROR.TYPE(T34)=ERROR.TYPE(T12),1,0),0),IF(ISERROR(T12),0,IF(T34=T12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T34),IF(ISERROR(T12),IF(ERROR.TYPE(T34)=ERROR.TYPE(T12),1,0),0),IF(ISERROR(T12),0,IF(T34=T12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t7_test(doc) -> [{userdata,[{""}]}];
not_equal_t7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t18_test(doc) -> [{userdata,[{""}]}];
not_equal_t18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t29_test(doc) -> [{userdata,[{""}]}];
not_equal_t29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t40_test(doc) -> [{userdata,[{""}]}];
not_equal_t40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t51_test(doc) -> [{userdata,[{""}]}];
not_equal_t51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T29),IF(ISERROR(T7),IF(ERROR.TYPE(T29)=ERROR.TYPE(T7),1,0),0),IF(ISERROR(T7),0,IF(T29=T7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T29),IF(ISERROR(T7),IF(ERROR.TYPE(T29)=ERROR.TYPE(T7),1,0),0),IF(ISERROR(T7),0,IF(T29=T7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t62_test(doc) -> [{userdata,[{""}]}];
not_equal_t62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T40),IF(ISERROR(T18),IF(ERROR.TYPE(T40)=ERROR.TYPE(T18),1,0),0),IF(ISERROR(T18),0,IF(T40=T18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T40),IF(ISERROR(T18),IF(ERROR.TYPE(T40)=ERROR.TYPE(T18),1,0),0),IF(ISERROR(T18),0,IF(T40=T18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t2_test(doc) -> [{userdata,[{""}]}];
not_equal_t2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,0.0}]),
      test_util:expected2(Msg, {number,0.0})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t13_test(doc) -> [{userdata,[{""}]}];
not_equal_t13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t35_test(doc) -> [{userdata,[{""}]}];
not_equal_t35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t57_test(doc) -> [{userdata,[{""}]}];
not_equal_t57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T35),IF(ISERROR(T13),IF(ERROR.TYPE(T35)=ERROR.TYPE(T13),1,0),0),IF(ISERROR(T13),0,IF(T35=T13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T35),IF(ISERROR(T13),IF(ERROR.TYPE(T35)=ERROR.TYPE(T13),1,0),0),IF(ISERROR(T13),0,IF(T35=T13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t8_test(doc) -> [{userdata,[{""}]}];
not_equal_t8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t19_test(doc) -> [{userdata,[{""}]}];
not_equal_t19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t30_test(doc) -> [{userdata,[{""}]}];
not_equal_t30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t41_test(doc) -> [{userdata,[{""}]}];
not_equal_t41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t52_test(doc) -> [{userdata,[{""}]}];
not_equal_t52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T30),IF(ISERROR(T8),IF(ERROR.TYPE(T30)=ERROR.TYPE(T8),1,0),0),IF(ISERROR(T8),0,IF(T30=T8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T30),IF(ISERROR(T8),IF(ERROR.TYPE(T30)=ERROR.TYPE(T8),1,0),0),IF(ISERROR(T8),0,IF(T30=T8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t63_test(doc) -> [{userdata,[{""}]}];
not_equal_t63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T41),IF(ISERROR(T19),IF(ERROR.TYPE(T41)=ERROR.TYPE(T19),1,0),0),IF(ISERROR(T19),0,IF(T41=T19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T41),IF(ISERROR(T19),IF(ERROR.TYPE(T41)=ERROR.TYPE(T19),1,0),0),IF(ISERROR(T19),0,IF(T41=T19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t3_test(doc) -> [{userdata,[{""}]}];
not_equal_t3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t14_test(doc) -> [{userdata,[{""}]}];
not_equal_t14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t25_test(doc) -> [{userdata,[{""}]}];
not_equal_t25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t36_test(doc) -> [{userdata,[{""}]}];
not_equal_t36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t47_test(doc) -> [{userdata,[{""}]}];
not_equal_t47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T25),IF(ISERROR(T3),IF(ERROR.TYPE(T25)=ERROR.TYPE(T3),1,0),0),IF(ISERROR(T3),0,IF(T25=T3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T25),IF(ISERROR(T3),IF(ERROR.TYPE(T25)=ERROR.TYPE(T3),1,0),0),IF(ISERROR(T3),0,IF(T25=T3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t58_test(doc) -> [{userdata,[{""}]}];
not_equal_t58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T36),IF(ISERROR(T14),IF(ERROR.TYPE(T36)=ERROR.TYPE(T14),1,0),0),IF(ISERROR(T14),0,IF(T36=T14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T36),IF(ISERROR(T14),IF(ERROR.TYPE(T36)=ERROR.TYPE(T14),1,0),0),IF(ISERROR(T14),0,IF(T36=T14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t9_test(doc) -> [{userdata,[{""}]}];
not_equal_t9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t20_test(doc) -> [{userdata,[{""}]}];
not_equal_t20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t31_test(doc) -> [{userdata,[{""}]}];
not_equal_t31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t42_test(doc) -> [{userdata,[{""}]}];
not_equal_t42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t53_test(doc) -> [{userdata,[{""}]}];
not_equal_t53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T31),IF(ISERROR(T9),IF(ERROR.TYPE(T31)=ERROR.TYPE(T9),1,0),0),IF(ISERROR(T9),0,IF(T31=T9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T31),IF(ISERROR(T9),IF(ERROR.TYPE(T31)=ERROR.TYPE(T9),1,0),0),IF(ISERROR(T9),0,IF(T31=T9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t64_test(doc) -> [{userdata,[{""}]}];
not_equal_t64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T42),IF(ISERROR(T20),IF(ERROR.TYPE(T42)=ERROR.TYPE(T20),1,0),0),IF(ISERROR(T20),0,IF(T42=T20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T42),IF(ISERROR(T20),IF(ERROR.TYPE(T42)=ERROR.TYPE(T20),1,0),0),IF(ISERROR(T20),0,IF(T42=T20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t4_test(doc) -> [{userdata,[{""}]}];
not_equal_t4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t15_test(doc) -> [{userdata,[{""}]}];
not_equal_t15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t26_test(doc) -> [{userdata,[{""}]}];
not_equal_t26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t37_test(doc) -> [{userdata,[{""}]}];
not_equal_t37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t48_test(doc) -> [{userdata,[{""}]}];
not_equal_t48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T26),IF(ISERROR(T4),IF(ERROR.TYPE(T26)=ERROR.TYPE(T4),1,0),0),IF(ISERROR(T4),0,IF(T26=T4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T26),IF(ISERROR(T4),IF(ERROR.TYPE(T26)=ERROR.TYPE(T4),1,0),0),IF(ISERROR(T4),0,IF(T26=T4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t59_test(doc) -> [{userdata,[{""}]}];
not_equal_t59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T37),IF(ISERROR(T15),IF(ERROR.TYPE(T37)=ERROR.TYPE(T15),1,0),0),IF(ISERROR(T15),0,IF(T37=T15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T37),IF(ISERROR(T15),IF(ERROR.TYPE(T37)=ERROR.TYPE(T15),1,0),0),IF(ISERROR(T15),0,IF(T37=T15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t10_test(doc) -> [{userdata,[{""}]}];
not_equal_t10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t21_test(doc) -> [{userdata,[{""}]}];
not_equal_t21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>T$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>T$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t32_test(doc) -> [{userdata,[{""}]}];
not_equal_t32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t43_test(doc) -> [{userdata,[{""}]}];
not_equal_t43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t54_test(doc) -> [{userdata,[{""}]}];
not_equal_t54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T32),IF(ISERROR(T10),IF(ERROR.TYPE(T32)=ERROR.TYPE(T10),1,0),0),IF(ISERROR(T10),0,IF(T32=T10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T32),IF(ISERROR(T10),IF(ERROR.TYPE(T32)=ERROR.TYPE(T10),1,0),0),IF(ISERROR(T10),0,IF(T32=T10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_t65_test(doc) -> [{userdata,[{""}]}];
not_equal_t65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,19}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,19}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(T43),IF(ISERROR(T21),IF(ERROR.TYPE(T43)=ERROR.TYPE(T21),1,0),0),IF(ISERROR(T21),0,IF(T43=T21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(T43),IF(ISERROR(T21),IF(ERROR.TYPE(T43)=ERROR.TYPE(T21),1,0),0),IF(ISERROR(T21),0,IF(T43=T21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j5_test(doc) -> [{userdata,[{""}]}];
not_equal_j5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j16_test(doc) -> [{userdata,[{""}]}];
not_equal_j16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j27_test(doc) -> [{userdata,[{""}]}];
not_equal_j27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j38_test(doc) -> [{userdata,[{""}]}];
not_equal_j38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j49_test(doc) -> [{userdata,[{""}]}];
not_equal_j49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J27),IF(ISERROR(J5),IF(ERROR.TYPE(J27)=ERROR.TYPE(J5),1,0),0),IF(ISERROR(J5),0,IF(J27=J5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J27),IF(ISERROR(J5),IF(ERROR.TYPE(J27)=ERROR.TYPE(J5),1,0),0),IF(ISERROR(J5),0,IF(J27=J5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j60_test(doc) -> [{userdata,[{""}]}];
not_equal_j60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J38),IF(ISERROR(J16),IF(ERROR.TYPE(J38)=ERROR.TYPE(J16),1,0),0),IF(ISERROR(J16),0,IF(J38=J16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J38),IF(ISERROR(J16),IF(ERROR.TYPE(J38)=ERROR.TYPE(J16),1,0),0),IF(ISERROR(J16),0,IF(J38=J16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j11_test(doc) -> [{userdata,[{""}]}];
not_equal_j11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j22_test(doc) -> [{userdata,[{""}]}];
not_equal_j22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j33_test(doc) -> [{userdata,[{""}]}];
not_equal_j33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j44_test(doc) -> [{userdata,[{""}]}];
not_equal_j44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j55_test(doc) -> [{userdata,[{""}]}];
not_equal_j55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J33),IF(ISERROR(J11),IF(ERROR.TYPE(J33)=ERROR.TYPE(J11),1,0),0),IF(ISERROR(J11),0,IF(J33=J11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J33),IF(ISERROR(J11),IF(ERROR.TYPE(J33)=ERROR.TYPE(J11),1,0),0),IF(ISERROR(J11),0,IF(J33=J11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j66_test(doc) -> [{userdata,[{""}]}];
not_equal_j66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J44),IF(ISERROR(J22),IF(ERROR.TYPE(J44)=ERROR.TYPE(J22),1,0),0),IF(ISERROR(J22),0,IF(J44=J22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J44),IF(ISERROR(J22),IF(ERROR.TYPE(J44)=ERROR.TYPE(J22),1,0),0),IF(ISERROR(J22),0,IF(J44=J22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j6_test(doc) -> [{userdata,[{""}]}];
not_equal_j6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j17_test(doc) -> [{userdata,[{""}]}];
not_equal_j17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j28_test(doc) -> [{userdata,[{""}]}];
not_equal_j28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j39_test(doc) -> [{userdata,[{""}]}];
not_equal_j39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j50_test(doc) -> [{userdata,[{""}]}];
not_equal_j50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J28),IF(ISERROR(J6),IF(ERROR.TYPE(J28)=ERROR.TYPE(J6),1,0),0),IF(ISERROR(J6),0,IF(J28=J6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J28),IF(ISERROR(J6),IF(ERROR.TYPE(J28)=ERROR.TYPE(J6),1,0),0),IF(ISERROR(J6),0,IF(J28=J6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j61_test(doc) -> [{userdata,[{""}]}];
not_equal_j61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J39),IF(ISERROR(J17),IF(ERROR.TYPE(J39)=ERROR.TYPE(J17),1,0),0),IF(ISERROR(J17),0,IF(J39=J17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J39),IF(ISERROR(J17),IF(ERROR.TYPE(J39)=ERROR.TYPE(J17),1,0),0),IF(ISERROR(J17),0,IF(J39=J17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j1_test(doc) -> [{userdata,[{""}]}];
not_equal_j1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Error"}]),
      test_util:expected2(Msg, {string,"Error"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j12_test(doc) -> [{userdata,[{""}]}];
not_equal_j12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j34_test(doc) -> [{userdata,[{""}]}];
not_equal_j34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j56_test(doc) -> [{userdata,[{""}]}];
not_equal_j56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J34),IF(ISERROR(J12),IF(ERROR.TYPE(J34)=ERROR.TYPE(J12),1,0),0),IF(ISERROR(J12),0,IF(J34=J12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J34),IF(ISERROR(J12),IF(ERROR.TYPE(J34)=ERROR.TYPE(J12),1,0),0),IF(ISERROR(J12),0,IF(J34=J12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j7_test(doc) -> [{userdata,[{""}]}];
not_equal_j7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j18_test(doc) -> [{userdata,[{""}]}];
not_equal_j18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j29_test(doc) -> [{userdata,[{""}]}];
not_equal_j29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j40_test(doc) -> [{userdata,[{""}]}];
not_equal_j40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j51_test(doc) -> [{userdata,[{""}]}];
not_equal_j51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J29),IF(ISERROR(J7),IF(ERROR.TYPE(J29)=ERROR.TYPE(J7),1,0),0),IF(ISERROR(J7),0,IF(J29=J7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J29),IF(ISERROR(J7),IF(ERROR.TYPE(J29)=ERROR.TYPE(J7),1,0),0),IF(ISERROR(J7),0,IF(J29=J7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j62_test(doc) -> [{userdata,[{""}]}];
not_equal_j62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J40),IF(ISERROR(J18),IF(ERROR.TYPE(J40)=ERROR.TYPE(J18),1,0),0),IF(ISERROR(J18),0,IF(J40=J18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J40),IF(ISERROR(J18),IF(ERROR.TYPE(J40)=ERROR.TYPE(J18),1,0),0),IF(ISERROR(J18),0,IF(J40=J18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j2_test(doc) -> [{userdata,[{""}]}];
not_equal_j2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j13_test(doc) -> [{userdata,[{""}]}];
not_equal_j13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j35_test(doc) -> [{userdata,[{""}]}];
not_equal_j35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j57_test(doc) -> [{userdata,[{""}]}];
not_equal_j57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J35),IF(ISERROR(J13),IF(ERROR.TYPE(J35)=ERROR.TYPE(J13),1,0),0),IF(ISERROR(J13),0,IF(J35=J13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J35),IF(ISERROR(J13),IF(ERROR.TYPE(J35)=ERROR.TYPE(J13),1,0),0),IF(ISERROR(J13),0,IF(J35=J13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j8_test(doc) -> [{userdata,[{""}]}];
not_equal_j8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j19_test(doc) -> [{userdata,[{""}]}];
not_equal_j19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j30_test(doc) -> [{userdata,[{""}]}];
not_equal_j30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j41_test(doc) -> [{userdata,[{""}]}];
not_equal_j41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j52_test(doc) -> [{userdata,[{""}]}];
not_equal_j52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J30),IF(ISERROR(J8),IF(ERROR.TYPE(J30)=ERROR.TYPE(J8),1,0),0),IF(ISERROR(J8),0,IF(J30=J8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J30),IF(ISERROR(J8),IF(ERROR.TYPE(J30)=ERROR.TYPE(J8),1,0),0),IF(ISERROR(J8),0,IF(J30=J8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j63_test(doc) -> [{userdata,[{""}]}];
not_equal_j63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J41),IF(ISERROR(J19),IF(ERROR.TYPE(J41)=ERROR.TYPE(J19),1,0),0),IF(ISERROR(J19),0,IF(J41=J19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J41),IF(ISERROR(J19),IF(ERROR.TYPE(J41)=ERROR.TYPE(J19),1,0),0),IF(ISERROR(J19),0,IF(J41=J19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j3_test(doc) -> [{userdata,[{""}]}];
not_equal_j3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j14_test(doc) -> [{userdata,[{""}]}];
not_equal_j14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j25_test(doc) -> [{userdata,[{""}]}];
not_equal_j25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j36_test(doc) -> [{userdata,[{""}]}];
not_equal_j36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j47_test(doc) -> [{userdata,[{""}]}];
not_equal_j47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J25),IF(ISERROR(J3),IF(ERROR.TYPE(J25)=ERROR.TYPE(J3),1,0),0),IF(ISERROR(J3),0,IF(J25=J3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J25),IF(ISERROR(J3),IF(ERROR.TYPE(J25)=ERROR.TYPE(J3),1,0),0),IF(ISERROR(J3),0,IF(J25=J3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j58_test(doc) -> [{userdata,[{""}]}];
not_equal_j58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J36),IF(ISERROR(J14),IF(ERROR.TYPE(J36)=ERROR.TYPE(J14),1,0),0),IF(ISERROR(J14),0,IF(J36=J14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J36),IF(ISERROR(J14),IF(ERROR.TYPE(J36)=ERROR.TYPE(J14),1,0),0),IF(ISERROR(J14),0,IF(J36=J14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j9_test(doc) -> [{userdata,[{""}]}];
not_equal_j9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j20_test(doc) -> [{userdata,[{""}]}];
not_equal_j20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j31_test(doc) -> [{userdata,[{""}]}];
not_equal_j31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j42_test(doc) -> [{userdata,[{""}]}];
not_equal_j42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j53_test(doc) -> [{userdata,[{""}]}];
not_equal_j53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J31),IF(ISERROR(J9),IF(ERROR.TYPE(J31)=ERROR.TYPE(J9),1,0),0),IF(ISERROR(J9),0,IF(J31=J9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J31),IF(ISERROR(J9),IF(ERROR.TYPE(J31)=ERROR.TYPE(J9),1,0),0),IF(ISERROR(J9),0,IF(J31=J9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j64_test(doc) -> [{userdata,[{""}]}];
not_equal_j64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J42),IF(ISERROR(J20),IF(ERROR.TYPE(J42)=ERROR.TYPE(J20),1,0),0),IF(ISERROR(J20),0,IF(J42=J20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J42),IF(ISERROR(J20),IF(ERROR.TYPE(J42)=ERROR.TYPE(J20),1,0),0),IF(ISERROR(J20),0,IF(J42=J20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j4_test(doc) -> [{userdata,[{""}]}];
not_equal_j4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j15_test(doc) -> [{userdata,[{""}]}];
not_equal_j15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j26_test(doc) -> [{userdata,[{""}]}];
not_equal_j26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j37_test(doc) -> [{userdata,[{""}]}];
not_equal_j37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j48_test(doc) -> [{userdata,[{""}]}];
not_equal_j48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J26),IF(ISERROR(J4),IF(ERROR.TYPE(J26)=ERROR.TYPE(J4),1,0),0),IF(ISERROR(J4),0,IF(J26=J4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J26),IF(ISERROR(J4),IF(ERROR.TYPE(J26)=ERROR.TYPE(J4),1,0),0),IF(ISERROR(J4),0,IF(J26=J4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j59_test(doc) -> [{userdata,[{""}]}];
not_equal_j59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J37),IF(ISERROR(J15),IF(ERROR.TYPE(J37)=ERROR.TYPE(J15),1,0),0),IF(ISERROR(J15),0,IF(J37=J15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J37),IF(ISERROR(J15),IF(ERROR.TYPE(J37)=ERROR.TYPE(J15),1,0),0),IF(ISERROR(J15),0,IF(J37=J15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j10_test(doc) -> [{userdata,[{""}]}];
not_equal_j10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j21_test(doc) -> [{userdata,[{""}]}];
not_equal_j21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>J$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>J$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j32_test(doc) -> [{userdata,[{""}]}];
not_equal_j32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j43_test(doc) -> [{userdata,[{""}]}];
not_equal_j43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j54_test(doc) -> [{userdata,[{""}]}];
not_equal_j54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J32),IF(ISERROR(J10),IF(ERROR.TYPE(J32)=ERROR.TYPE(J10),1,0),0),IF(ISERROR(J10),0,IF(J32=J10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J32),IF(ISERROR(J10),IF(ERROR.TYPE(J32)=ERROR.TYPE(J10),1,0),0),IF(ISERROR(J10),0,IF(J32=J10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_j65_test(doc) -> [{userdata,[{""}]}];
not_equal_j65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,9}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,9}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(J43),IF(ISERROR(J21),IF(ERROR.TYPE(J43)=ERROR.TYPE(J21),1,0),0),IF(ISERROR(J21),0,IF(J43=J21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(J43),IF(ISERROR(J21),IF(ERROR.TYPE(J43)=ERROR.TYPE(J21),1,0),0),IF(ISERROR(J21),0,IF(J43=J21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u5_test(doc) -> [{userdata,[{""}]}];
not_equal_u5_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",4,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",4,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B5<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B5<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u16_test(doc) -> [{userdata,[{""}]}];
not_equal_u16_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",15,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",15,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B16<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B16<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u27_test(doc) -> [{userdata,[{""}]}];
not_equal_u27_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",26,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",26,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u38_test(doc) -> [{userdata,[{""}]}];
not_equal_u38_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",37,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",37,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u49_test(doc) -> [{userdata,[{""}]}];
not_equal_u49_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",48,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",48,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U27),IF(ISERROR(U5),IF(ERROR.TYPE(U27)=ERROR.TYPE(U5),1,0),0),IF(ISERROR(U5),0,IF(U27=U5,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U27),IF(ISERROR(U5),IF(ERROR.TYPE(U27)=ERROR.TYPE(U5),1,0),0),IF(ISERROR(U5),0,IF(U27=U5,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u60_test(doc) -> [{userdata,[{""}]}];
not_equal_u60_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",59,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",59,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U38),IF(ISERROR(U16),IF(ERROR.TYPE(U38)=ERROR.TYPE(U16),1,0),0),IF(ISERROR(U16),0,IF(U38=U16,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U38),IF(ISERROR(U16),IF(ERROR.TYPE(U38)=ERROR.TYPE(U16),1,0),0),IF(ISERROR(U16),0,IF(U38=U16,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u11_test(doc) -> [{userdata,[{""}]}];
not_equal_u11_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",10,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",10,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B11<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B11<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u22_test(doc) -> [{userdata,[{""}]}];
not_equal_u22_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",21,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",21,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B22<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B22<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u33_test(doc) -> [{userdata,[{""}]}];
not_equal_u33_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",32,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",32,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826265}]),
      test_util:expected2(Msg, {number,-2146826265})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u44_test(doc) -> [{userdata,[{""}]}];
not_equal_u44_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",43,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",43,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u55_test(doc) -> [{userdata,[{""}]}];
not_equal_u55_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",54,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",54,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U33),IF(ISERROR(U11),IF(ERROR.TYPE(U33)=ERROR.TYPE(U11),1,0),0),IF(ISERROR(U11),0,IF(U33=U11,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U33),IF(ISERROR(U11),IF(ERROR.TYPE(U33)=ERROR.TYPE(U11),1,0),0),IF(ISERROR(U11),0,IF(U33=U11,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u66_test(doc) -> [{userdata,[{""}]}];
not_equal_u66_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",65,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",65,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U44),IF(ISERROR(U22),IF(ERROR.TYPE(U44)=ERROR.TYPE(U22),1,0),0),IF(ISERROR(U22),0,IF(U44=U22,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U44),IF(ISERROR(U22),IF(ERROR.TYPE(U44)=ERROR.TYPE(U22),1,0),0),IF(ISERROR(U22),0,IF(U44=U22,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u6_test(doc) -> [{userdata,[{""}]}];
not_equal_u6_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",5,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",5,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B6<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B6<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u17_test(doc) -> [{userdata,[{""}]}];
not_equal_u17_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",16,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",16,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B17<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B17<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u28_test(doc) -> [{userdata,[{""}]}];
not_equal_u28_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",27,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",27,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826281}]),
      test_util:expected2(Msg, {number,-2146826281})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u39_test(doc) -> [{userdata,[{""}]}];
not_equal_u39_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",38,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",38,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u50_test(doc) -> [{userdata,[{""}]}];
not_equal_u50_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",49,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",49,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U28),IF(ISERROR(U6),IF(ERROR.TYPE(U28)=ERROR.TYPE(U6),1,0),0),IF(ISERROR(U6),0,IF(U28=U6,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U28),IF(ISERROR(U6),IF(ERROR.TYPE(U28)=ERROR.TYPE(U6),1,0),0),IF(ISERROR(U6),0,IF(U28=U6,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u61_test(doc) -> [{userdata,[{""}]}];
not_equal_u61_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",60,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",60,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U39),IF(ISERROR(U17),IF(ERROR.TYPE(U39)=ERROR.TYPE(U17),1,0),0),IF(ISERROR(U17),0,IF(U39=U17,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U39),IF(ISERROR(U17),IF(ERROR.TYPE(U39)=ERROR.TYPE(U17),1,0),0),IF(ISERROR(U17),0,IF(U39=U17,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u1_test(doc) -> [{userdata,[{""}]}];
not_equal_u1_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",0,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",0,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{string,"Float"}]),
      test_util:expected2(Msg, {string,"Float"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u12_test(doc) -> [{userdata,[{""}]}];
not_equal_u12_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",11,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",11,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B12<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B12<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u34_test(doc) -> [{userdata,[{""}]}];
not_equal_u34_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",33,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",33,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826273}]),
      test_util:expected2(Msg, {number,-2146826273})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u56_test(doc) -> [{userdata,[{""}]}];
not_equal_u56_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",55,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",55,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U34),IF(ISERROR(U12),IF(ERROR.TYPE(U34)=ERROR.TYPE(U12),1,0),0),IF(ISERROR(U12),0,IF(U34=U12,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U34),IF(ISERROR(U12),IF(ERROR.TYPE(U34)=ERROR.TYPE(U12),1,0),0),IF(ISERROR(U12),0,IF(U34=U12,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u7_test(doc) -> [{userdata,[{""}]}];
not_equal_u7_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",6,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",6,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B7<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B7<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u18_test(doc) -> [{userdata,[{""}]}];
not_equal_u18_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",17,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",17,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B18<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B18<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u29_test(doc) -> [{userdata,[{""}]}];
not_equal_u29_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",28,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",28,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826246}]),
      test_util:expected2(Msg, {number,-2146826246})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u40_test(doc) -> [{userdata,[{""}]}];
not_equal_u40_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",39,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",39,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u51_test(doc) -> [{userdata,[{""}]}];
not_equal_u51_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",50,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",50,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U29),IF(ISERROR(U7),IF(ERROR.TYPE(U29)=ERROR.TYPE(U7),1,0),0),IF(ISERROR(U7),0,IF(U29=U7,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U29),IF(ISERROR(U7),IF(ERROR.TYPE(U29)=ERROR.TYPE(U7),1,0),0),IF(ISERROR(U7),0,IF(U29=U7,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u62_test(doc) -> [{userdata,[{""}]}];
not_equal_u62_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",61,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",61,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U40),IF(ISERROR(U18),IF(ERROR.TYPE(U40)=ERROR.TYPE(U18),1,0),0),IF(ISERROR(U18),0,IF(U40=U18,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U40),IF(ISERROR(U18),IF(ERROR.TYPE(U40)=ERROR.TYPE(U18),1,0),0),IF(ISERROR(U18),0,IF(U40=U18,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u2_test(doc) -> [{userdata,[{""}]}];
not_equal_u2_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",1,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",1,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,3.1415}]),
      test_util:expected2(Msg, {number,3.1415})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u13_test(doc) -> [{userdata,[{""}]}];
not_equal_u13_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",12,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",12,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B13<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B13<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u35_test(doc) -> [{userdata,[{""}]}];
not_equal_u35_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",34,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",34,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u57_test(doc) -> [{userdata,[{""}]}];
not_equal_u57_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",56,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",56,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U35),IF(ISERROR(U13),IF(ERROR.TYPE(U35)=ERROR.TYPE(U13),1,0),0),IF(ISERROR(U13),0,IF(U35=U13,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U35),IF(ISERROR(U13),IF(ERROR.TYPE(U35)=ERROR.TYPE(U13),1,0),0),IF(ISERROR(U13),0,IF(U35=U13,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u8_test(doc) -> [{userdata,[{""}]}];
not_equal_u8_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",7,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",7,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B8<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B8<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u19_test(doc) -> [{userdata,[{""}]}];
not_equal_u19_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",18,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",18,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B19<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B19<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u30_test(doc) -> [{userdata,[{""}]}];
not_equal_u30_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",29,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",29,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826259}]),
      test_util:expected2(Msg, {number,-2146826259})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u41_test(doc) -> [{userdata,[{""}]}];
not_equal_u41_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",40,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",40,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u52_test(doc) -> [{userdata,[{""}]}];
not_equal_u52_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",51,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",51,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U30),IF(ISERROR(U8),IF(ERROR.TYPE(U30)=ERROR.TYPE(U8),1,0),0),IF(ISERROR(U8),0,IF(U30=U8,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U30),IF(ISERROR(U8),IF(ERROR.TYPE(U30)=ERROR.TYPE(U8),1,0),0),IF(ISERROR(U8),0,IF(U30=U8,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u63_test(doc) -> [{userdata,[{""}]}];
not_equal_u63_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",62,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",62,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U41),IF(ISERROR(U19),IF(ERROR.TYPE(U41)=ERROR.TYPE(U19),1,0),0),IF(ISERROR(U19),0,IF(U41=U19,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U41),IF(ISERROR(U19),IF(ERROR.TYPE(U41)=ERROR.TYPE(U19),1,0),0),IF(ISERROR(U19),0,IF(U41=U19,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u3_test(doc) -> [{userdata,[{""}]}];
not_equal_u3_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",2,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",2,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B3<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B3<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u14_test(doc) -> [{userdata,[{""}]}];
not_equal_u14_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",13,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",13,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B14<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B14<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u25_test(doc) -> [{userdata,[{""}]}];
not_equal_u25_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",24,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",24,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u36_test(doc) -> [{userdata,[{""}]}];
not_equal_u36_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",35,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",35,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u47_test(doc) -> [{userdata,[{""}]}];
not_equal_u47_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",46,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",46,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U25),IF(ISERROR(U3),IF(ERROR.TYPE(U25)=ERROR.TYPE(U3),1,0),0),IF(ISERROR(U3),0,IF(U25=U3,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U25),IF(ISERROR(U3),IF(ERROR.TYPE(U25)=ERROR.TYPE(U3),1,0),0),IF(ISERROR(U3),0,IF(U25=U3,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u58_test(doc) -> [{userdata,[{""}]}];
not_equal_u58_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",57,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",57,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U36),IF(ISERROR(U14),IF(ERROR.TYPE(U36)=ERROR.TYPE(U14),1,0),0),IF(ISERROR(U14),0,IF(U36=U14,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U36),IF(ISERROR(U14),IF(ERROR.TYPE(U36)=ERROR.TYPE(U14),1,0),0),IF(ISERROR(U14),0,IF(U36=U14,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u9_test(doc) -> [{userdata,[{""}]}];
not_equal_u9_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",8,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",8,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B9<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B9<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u20_test(doc) -> [{userdata,[{""}]}];
not_equal_u20_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",19,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",19,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B20<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B20<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u31_test(doc) -> [{userdata,[{""}]}];
not_equal_u31_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",30,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",30,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826288}]),
      test_util:expected2(Msg, {number,-2146826288})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u42_test(doc) -> [{userdata,[{""}]}];
not_equal_u42_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",41,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",41,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u53_test(doc) -> [{userdata,[{""}]}];
not_equal_u53_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",52,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",52,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U31),IF(ISERROR(U9),IF(ERROR.TYPE(U31)=ERROR.TYPE(U9),1,0),0),IF(ISERROR(U9),0,IF(U31=U9,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U31),IF(ISERROR(U9),IF(ERROR.TYPE(U31)=ERROR.TYPE(U9),1,0),0),IF(ISERROR(U9),0,IF(U31=U9,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u64_test(doc) -> [{userdata,[{""}]}];
not_equal_u64_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",63,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",63,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U42),IF(ISERROR(U20),IF(ERROR.TYPE(U42)=ERROR.TYPE(U20),1,0),0),IF(ISERROR(U20),0,IF(U42=U20,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U42),IF(ISERROR(U20),IF(ERROR.TYPE(U42)=ERROR.TYPE(U20),1,0),0),IF(ISERROR(U20),0,IF(U42=U20,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u4_test(doc) -> [{userdata,[{""}]}];
not_equal_u4_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",3,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",3,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B4<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B4<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u15_test(doc) -> [{userdata,[{""}]}];
not_equal_u15_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",14,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",14,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B15<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B15<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u26_test(doc) -> [{userdata,[{""}]}];
not_equal_u26_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",25,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",25,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u37_test(doc) -> [{userdata,[{""}]}];
not_equal_u37_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",36,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",36,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,true}]),
      test_util:expected2(Msg, {boolean,true})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u48_test(doc) -> [{userdata,[{""}]}];
not_equal_u48_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",47,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",47,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U26),IF(ISERROR(U4),IF(ERROR.TYPE(U26)=ERROR.TYPE(U4),1,0),0),IF(ISERROR(U4),0,IF(U26=U4,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U26),IF(ISERROR(U4),IF(ERROR.TYPE(U26)=ERROR.TYPE(U4),1,0),0),IF(ISERROR(U4),0,IF(U26=U4,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u59_test(doc) -> [{userdata,[{""}]}];
not_equal_u59_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",58,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",58,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U37),IF(ISERROR(U15),IF(ERROR.TYPE(U37)=ERROR.TYPE(U15),1,0),0),IF(ISERROR(U15),0,IF(U37=U15,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U37),IF(ISERROR(U15),IF(ERROR.TYPE(U37)=ERROR.TYPE(U15),1,0),0),IF(ISERROR(U15),0,IF(U37=U15,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u10_test(doc) -> [{userdata,[{""}]}];
not_equal_u10_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",9,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",9,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B10<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B10<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u21_test(doc) -> [{userdata,[{""}]}];
not_equal_u21_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",20,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",20,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=($B21<>U$2)"}]),
      test_util:expected2(Msg, {formula,"=($B21<>U$2)"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u32_test(doc) -> [{userdata,[{""}]}];
not_equal_u32_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",31,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",31,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{number,-2146826252}]),
      test_util:expected2(Msg, {number,-2146826252})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u43_test(doc) -> [{userdata,[{""}]}];
not_equal_u43_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",42,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",42,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{boolean,false}]),
      test_util:expected2(Msg, {boolean,false})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u54_test(doc) -> [{userdata,[{""}]}];
not_equal_u54_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",53,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",53,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U32),IF(ISERROR(U10),IF(ERROR.TYPE(U32)=ERROR.TYPE(U10),1,0),0),IF(ISERROR(U10),0,IF(U32=U10,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U32),IF(ISERROR(U10),IF(ERROR.TYPE(U32)=ERROR.TYPE(U10),1,0),0),IF(ISERROR(U10),0,IF(U32=U10,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
not_equal_u65_test(doc) -> [{userdata,[{""}]}];
not_equal_u65_test(Config) -> 
  {value,{_,Pid}}=lists:keysearch(?MODULE,1,Config),
  io:format("in test case Pid is ~p MODULE is ~p~n Key is ~p",[Pid,?MODULE,{"NOT_EQUAL",64,20}]),
  Pid ! {msg,self(),?MODULE,{"NOT_EQUAL",64,20}},
  receive
    Msg -> 
      io:format("Expected is :~p~nGot is      :~p~n",[Msg,{formula,"=IF(ISERROR(U43),IF(ISERROR(U21),IF(ERROR.TYPE(U43)=ERROR.TYPE(U21),1,0),0),IF(ISERROR(U21),0,IF(U43=U21,1,0)))"}]),
      test_util:expected2(Msg, {formula,"=IF(ISERROR(U43),IF(ISERROR(U21),IF(ERROR.TYPE(U43)=ERROR.TYPE(U21),1,0),0),IF(ISERROR(U21),0,IF(U43=U21,1,0)))"})
  after
    500 -> io:format("timed out in test case!~n"),
            exit("die in flames!")
  end.
  
all() -> 
    [not_equal_k5_test,
   not_equal_k16_test,
   not_equal_k27_test,
   not_equal_k38_test,
   not_equal_k49_test,
   not_equal_k60_test,
   not_equal_k11_test,
   not_equal_k22_test,
   not_equal_k33_test,
   not_equal_k44_test,
   not_equal_k55_test,
   not_equal_k66_test,
   not_equal_k6_test,
   not_equal_k17_test,
   not_equal_k28_test,
   not_equal_k39_test,
   not_equal_k50_test,
   not_equal_k61_test,
   not_equal_k1_test,
   not_equal_k12_test,
   not_equal_k34_test,
   not_equal_k56_test,
   not_equal_k7_test,
   not_equal_k18_test,
   not_equal_k29_test,
   not_equal_k40_test,
   not_equal_k51_test,
   not_equal_k62_test,
   not_equal_k2_test,
   not_equal_k13_test,
   not_equal_k35_test,
   not_equal_k57_test,
   not_equal_k8_test,
   not_equal_k19_test,
   not_equal_k30_test,
   not_equal_k41_test,
   not_equal_k52_test,
   not_equal_k63_test,
   not_equal_k3_test,
   not_equal_k14_test,
   not_equal_k25_test,
   not_equal_k36_test,
   not_equal_k47_test,
   not_equal_k58_test,
   not_equal_k9_test,
   not_equal_k20_test,
   not_equal_k31_test,
   not_equal_k42_test,
   not_equal_k53_test,
   not_equal_k64_test,
   not_equal_k4_test,
   not_equal_k15_test,
   not_equal_k26_test,
   not_equal_k37_test,
   not_equal_k48_test,
   not_equal_k59_test,
   not_equal_k10_test,
   not_equal_k21_test,
   not_equal_k32_test,
   not_equal_k43_test,
   not_equal_k54_test,
   not_equal_k65_test,
   not_equal_v5_test,
   not_equal_v16_test,
   not_equal_v27_test,
   not_equal_v38_test,
   not_equal_v49_test,
   not_equal_v60_test,
   not_equal_v11_test,
   not_equal_v22_test,
   not_equal_v33_test,
   not_equal_v44_test,
   not_equal_v55_test,
   not_equal_v66_test,
   not_equal_v6_test,
   not_equal_v17_test,
   not_equal_v28_test,
   not_equal_v39_test,
   not_equal_v50_test,
   not_equal_v61_test,
   not_equal_v1_test,
   not_equal_v12_test,
   not_equal_v34_test,
   not_equal_v56_test,
   not_equal_v7_test,
   not_equal_v18_test,
   not_equal_v29_test,
   not_equal_v40_test,
   not_equal_v51_test,
   not_equal_v62_test,
   not_equal_v2_test,
   not_equal_v13_test,
   not_equal_v35_test,
   not_equal_v57_test,
   not_equal_v8_test,
   not_equal_v19_test,
   not_equal_v30_test,
   not_equal_v41_test,
   not_equal_v52_test,
   not_equal_v63_test,
   not_equal_v3_test,
   not_equal_v14_test,
   not_equal_v25_test,
   not_equal_v36_test,
   not_equal_v47_test,
   not_equal_v58_test,
   not_equal_v9_test,
   not_equal_v20_test,
   not_equal_v31_test,
   not_equal_v42_test,
   not_equal_v53_test,
   not_equal_v64_test,
   not_equal_v4_test,
   not_equal_v15_test,
   not_equal_v26_test,
   not_equal_v37_test,
   not_equal_v48_test,
   not_equal_v59_test,
   not_equal_v10_test,
   not_equal_v21_test,
   not_equal_v32_test,
   not_equal_v43_test,
   not_equal_v54_test,
   not_equal_v65_test,
   not_equal_a5_test,
   not_equal_a16_test,
   not_equal_a27_test,
   not_equal_a38_test,
   not_equal_a11_test,
   not_equal_a22_test,
   not_equal_a33_test,
   not_equal_a44_test,
   not_equal_a6_test,
   not_equal_a17_test,
   not_equal_a28_test,
   not_equal_a39_test,
   not_equal_a1_test,
   not_equal_a12_test,
   not_equal_a34_test,
   not_equal_a7_test,
   not_equal_a18_test,
   not_equal_a29_test,
   not_equal_a40_test,
   not_equal_a2_test,
   not_equal_a13_test,
   not_equal_a35_test,
   not_equal_a8_test,
   not_equal_a19_test,
   not_equal_a30_test,
   not_equal_a41_test,
   not_equal_a3_test,
   not_equal_a14_test,
   not_equal_a25_test,
   not_equal_a36_test,
   not_equal_a47_test,
   not_equal_a9_test,
   not_equal_a20_test,
   not_equal_a31_test,
   not_equal_a42_test,
   not_equal_a4_test,
   not_equal_a15_test,
   not_equal_a26_test,
   not_equal_a37_test,
   not_equal_a48_test,
   not_equal_a10_test,
   not_equal_a21_test,
   not_equal_a32_test,
   not_equal_a43_test,
   not_equal_l5_test,
   not_equal_l16_test,
   not_equal_l27_test,
   not_equal_l38_test,
   not_equal_l49_test,
   not_equal_l60_test,
   not_equal_l11_test,
   not_equal_l22_test,
   not_equal_l33_test,
   not_equal_l44_test,
   not_equal_l55_test,
   not_equal_l66_test,
   not_equal_l6_test,
   not_equal_l17_test,
   not_equal_l28_test,
   not_equal_l39_test,
   not_equal_l50_test,
   not_equal_l61_test,
   not_equal_l1_test,
   not_equal_l12_test,
   not_equal_l34_test,
   not_equal_l56_test,
   not_equal_l7_test,
   not_equal_l18_test,
   not_equal_l29_test,
   not_equal_l40_test,
   not_equal_l51_test,
   not_equal_l62_test,
   not_equal_l2_test,
   not_equal_l13_test,
   not_equal_l35_test,
   not_equal_l57_test,
   not_equal_l8_test,
   not_equal_l19_test,
   not_equal_l30_test,
   not_equal_l41_test,
   not_equal_l52_test,
   not_equal_l63_test,
   not_equal_l3_test,
   not_equal_l14_test,
   not_equal_l25_test,
   not_equal_l36_test,
   not_equal_l47_test,
   not_equal_l58_test,
   not_equal_l9_test,
   not_equal_l20_test,
   not_equal_l31_test,
   not_equal_l42_test,
   not_equal_l53_test,
   not_equal_l64_test,
   not_equal_l4_test,
   not_equal_l15_test,
   not_equal_l26_test,
   not_equal_l37_test,
   not_equal_l48_test,
   not_equal_l59_test,
   not_equal_l10_test,
   not_equal_l21_test,
   not_equal_l32_test,
   not_equal_l43_test,
   not_equal_l54_test,
   not_equal_l65_test,
   not_equal_b5_test,
   not_equal_b16_test,
   not_equal_b11_test,
   not_equal_b22_test,
   not_equal_b6_test,
   not_equal_b17_test,
   not_equal_b1_test,
   not_equal_b12_test,
   not_equal_b7_test,
   not_equal_b18_test,
   not_equal_b13_test,
   not_equal_b8_test,
   not_equal_b19_test,
   not_equal_b14_test,
   not_equal_b9_test,
   not_equal_b20_test,
   not_equal_b4_test,
   not_equal_b15_test,
   not_equal_b10_test,
   not_equal_b21_test,
   not_equal_m5_test,
   not_equal_m16_test,
   not_equal_m27_test,
   not_equal_m38_test,
   not_equal_m49_test,
   not_equal_m60_test,
   not_equal_m11_test,
   not_equal_m22_test,
   not_equal_m33_test,
   not_equal_m44_test,
   not_equal_m55_test,
   not_equal_m66_test,
   not_equal_m6_test,
   not_equal_m17_test,
   not_equal_m28_test,
   not_equal_m39_test,
   not_equal_m50_test,
   not_equal_m61_test,
   not_equal_m1_test,
   not_equal_m12_test,
   not_equal_m34_test,
   not_equal_m56_test,
   not_equal_m7_test,
   not_equal_m18_test,
   not_equal_m29_test,
   not_equal_m40_test,
   not_equal_m51_test,
   not_equal_m62_test,
   not_equal_m2_test,
   not_equal_m13_test,
   not_equal_m35_test,
   not_equal_m57_test,
   not_equal_m8_test,
   not_equal_m19_test,
   not_equal_m30_test,
   not_equal_m41_test,
   not_equal_m52_test,
   not_equal_m63_test,
   not_equal_m3_test,
   not_equal_m14_test,
   not_equal_m25_test,
   not_equal_m36_test,
   not_equal_m47_test,
   not_equal_m58_test,
   not_equal_m9_test,
   not_equal_m20_test,
   not_equal_m31_test,
   not_equal_m42_test,
   not_equal_m53_test,
   not_equal_m64_test,
   not_equal_m4_test,
   not_equal_m15_test,
   not_equal_m26_test,
   not_equal_m37_test,
   not_equal_m48_test,
   not_equal_m59_test,
   not_equal_m10_test,
   not_equal_m21_test,
   not_equal_m32_test,
   not_equal_m43_test,
   not_equal_m54_test,
   not_equal_m65_test,
   not_equal_c5_test,
   not_equal_c16_test,
   not_equal_c27_test,
   not_equal_c38_test,
   not_equal_c49_test,
   not_equal_c60_test,
   not_equal_c11_test,
   not_equal_c22_test,
   not_equal_c33_test,
   not_equal_c44_test,
   not_equal_c55_test,
   not_equal_c66_test,
   not_equal_c6_test,
   not_equal_c17_test,
   not_equal_c28_test,
   not_equal_c39_test,
   not_equal_c50_test,
   not_equal_c61_test,
   not_equal_c1_test,
   not_equal_c12_test,
   not_equal_c34_test,
   not_equal_c56_test,
   not_equal_c7_test,
   not_equal_c18_test,
   not_equal_c29_test,
   not_equal_c40_test,
   not_equal_c51_test,
   not_equal_c62_test,
   not_equal_c13_test,
   not_equal_c35_test,
   not_equal_c57_test,
   not_equal_c8_test,
   not_equal_c19_test,
   not_equal_c30_test,
   not_equal_c41_test,
   not_equal_c52_test,
   not_equal_c63_test,
   not_equal_c3_test,
   not_equal_c14_test,
   not_equal_c25_test,
   not_equal_c36_test,
   not_equal_c47_test,
   not_equal_c58_test,
   not_equal_c9_test,
   not_equal_c20_test,
   not_equal_c31_test,
   not_equal_c42_test,
   not_equal_c53_test,
   not_equal_c64_test,
   not_equal_c4_test,
   not_equal_c15_test,
   not_equal_c26_test,
   not_equal_c37_test,
   not_equal_c48_test,
   not_equal_c59_test,
   not_equal_c10_test,
   not_equal_c21_test,
   not_equal_c32_test,
   not_equal_c43_test,
   not_equal_c54_test,
   not_equal_c65_test,
   not_equal_n5_test,
   not_equal_n16_test,
   not_equal_n27_test,
   not_equal_n38_test,
   not_equal_n49_test,
   not_equal_n60_test,
   not_equal_n11_test,
   not_equal_n22_test,
   not_equal_n33_test,
   not_equal_n44_test,
   not_equal_n55_test,
   not_equal_n66_test,
   not_equal_n6_test,
   not_equal_n17_test,
   not_equal_n28_test,
   not_equal_n39_test,
   not_equal_n50_test,
   not_equal_n61_test,
   not_equal_n1_test,
   not_equal_n12_test,
   not_equal_n34_test,
   not_equal_n56_test,
   not_equal_n7_test,
   not_equal_n18_test,
   not_equal_n29_test,
   not_equal_n40_test,
   not_equal_n51_test,
   not_equal_n62_test,
   not_equal_n2_test,
   not_equal_n13_test,
   not_equal_n35_test,
   not_equal_n57_test,
   not_equal_n8_test,
   not_equal_n19_test,
   not_equal_n30_test,
   not_equal_n41_test,
   not_equal_n52_test,
   not_equal_n63_test,
   not_equal_n3_test,
   not_equal_n14_test,
   not_equal_n25_test,
   not_equal_n36_test,
   not_equal_n47_test,
   not_equal_n58_test,
   not_equal_n9_test,
   not_equal_n20_test,
   not_equal_n31_test,
   not_equal_n42_test,
   not_equal_n53_test,
   not_equal_n64_test,
   not_equal_n4_test,
   not_equal_n15_test,
   not_equal_n26_test,
   not_equal_n37_test,
   not_equal_n48_test,
   not_equal_n59_test,
   not_equal_n10_test,
   not_equal_n21_test,
   not_equal_n32_test,
   not_equal_n43_test,
   not_equal_n54_test,
   not_equal_n65_test,
   not_equal_d5_test,
   not_equal_d16_test,
   not_equal_d27_test,
   not_equal_d38_test,
   not_equal_d49_test,
   not_equal_d60_test,
   not_equal_d11_test,
   not_equal_d22_test,
   not_equal_d33_test,
   not_equal_d44_test,
   not_equal_d55_test,
   not_equal_d66_test,
   not_equal_d6_test,
   not_equal_d17_test,
   not_equal_d28_test,
   not_equal_d39_test,
   not_equal_d50_test,
   not_equal_d61_test,
   not_equal_d1_test,
   not_equal_d12_test,
   not_equal_d34_test,
   not_equal_d56_test,
   not_equal_d7_test,
   not_equal_d18_test,
   not_equal_d29_test,
   not_equal_d40_test,
   not_equal_d51_test,
   not_equal_d62_test,
   not_equal_d2_test,
   not_equal_d13_test,
   not_equal_d35_test,
   not_equal_d57_test,
   not_equal_d8_test,
   not_equal_d19_test,
   not_equal_d30_test,
   not_equal_d41_test,
   not_equal_d52_test,
   not_equal_d63_test,
   not_equal_d3_test,
   not_equal_d14_test,
   not_equal_d25_test,
   not_equal_d36_test,
   not_equal_d47_test,
   not_equal_d58_test,
   not_equal_d9_test,
   not_equal_d20_test,
   not_equal_d31_test,
   not_equal_d42_test,
   not_equal_d53_test,
   not_equal_d64_test,
   not_equal_d4_test,
   not_equal_d15_test,
   not_equal_d26_test,
   not_equal_d37_test,
   not_equal_d48_test,
   not_equal_d59_test,
   not_equal_d10_test,
   not_equal_d21_test,
   not_equal_d32_test,
   not_equal_d43_test,
   not_equal_d54_test,
   not_equal_d65_test,
   not_equal_o5_test,
   not_equal_o16_test,
   not_equal_o27_test,
   not_equal_o38_test,
   not_equal_o49_test,
   not_equal_o60_test,
   not_equal_o11_test,
   not_equal_o22_test,
   not_equal_o33_test,
   not_equal_o44_test,
   not_equal_o55_test,
   not_equal_o66_test,
   not_equal_o6_test,
   not_equal_o17_test,
   not_equal_o28_test,
   not_equal_o39_test,
   not_equal_o50_test,
   not_equal_o61_test,
   not_equal_o1_test,
   not_equal_o12_test,
   not_equal_o34_test,
   not_equal_o56_test,
   not_equal_o7_test,
   not_equal_o18_test,
   not_equal_o29_test,
   not_equal_o40_test,
   not_equal_o51_test,
   not_equal_o62_test,
   not_equal_o2_test,
   not_equal_o13_test,
   not_equal_o35_test,
   not_equal_o57_test,
   not_equal_o8_test,
   not_equal_o19_test,
   not_equal_o30_test,
   not_equal_o41_test,
   not_equal_o52_test,
   not_equal_o63_test,
   not_equal_o3_test,
   not_equal_o14_test,
   not_equal_o25_test,
   not_equal_o36_test,
   not_equal_o47_test,
   not_equal_o58_test,
   not_equal_o9_test,
   not_equal_o20_test,
   not_equal_o31_test,
   not_equal_o42_test,
   not_equal_o53_test,
   not_equal_o64_test,
   not_equal_o4_test,
   not_equal_o15_test,
   not_equal_o26_test,
   not_equal_o37_test,
   not_equal_o48_test,
   not_equal_o59_test,
   not_equal_o10_test,
   not_equal_o21_test,
   not_equal_o32_test,
   not_equal_o43_test,
   not_equal_o54_test,
   not_equal_o65_test,
   not_equal_e5_test,
   not_equal_e16_test,
   not_equal_e27_test,
   not_equal_e38_test,
   not_equal_e49_test,
   not_equal_e60_test,
   not_equal_e11_test,
   not_equal_e22_test,
   not_equal_e33_test,
   not_equal_e44_test,
   not_equal_e55_test,
   not_equal_e66_test,
   not_equal_e6_test,
   not_equal_e17_test,
   not_equal_e28_test,
   not_equal_e39_test,
   not_equal_e50_test,
   not_equal_e61_test,
   not_equal_e1_test,
   not_equal_e12_test,
   not_equal_e34_test,
   not_equal_e56_test,
   not_equal_e7_test,
   not_equal_e18_test,
   not_equal_e29_test,
   not_equal_e40_test,
   not_equal_e51_test,
   not_equal_e62_test,
   not_equal_e2_test,
   not_equal_e13_test,
   not_equal_e35_test,
   not_equal_e57_test,
   not_equal_e8_test,
   not_equal_e19_test,
   not_equal_e30_test,
   not_equal_e41_test,
   not_equal_e52_test,
   not_equal_e63_test,
   not_equal_e3_test,
   not_equal_e14_test,
   not_equal_e25_test,
   not_equal_e36_test,
   not_equal_e47_test,
   not_equal_e58_test,
   not_equal_e9_test,
   not_equal_e20_test,
   not_equal_e31_test,
   not_equal_e42_test,
   not_equal_e53_test,
   not_equal_e64_test,
   not_equal_e4_test,
   not_equal_e15_test,
   not_equal_e26_test,
   not_equal_e37_test,
   not_equal_e48_test,
   not_equal_e59_test,
   not_equal_e10_test,
   not_equal_e21_test,
   not_equal_e32_test,
   not_equal_e43_test,
   not_equal_e54_test,
   not_equal_e65_test,
   not_equal_p5_test,
   not_equal_p16_test,
   not_equal_p27_test,
   not_equal_p38_test,
   not_equal_p49_test,
   not_equal_p60_test,
   not_equal_p11_test,
   not_equal_p22_test,
   not_equal_p33_test,
   not_equal_p44_test,
   not_equal_p55_test,
   not_equal_p66_test,
   not_equal_p6_test,
   not_equal_p17_test,
   not_equal_p28_test,
   not_equal_p39_test,
   not_equal_p50_test,
   not_equal_p61_test,
   not_equal_p1_test,
   not_equal_p12_test,
   not_equal_p34_test,
   not_equal_p56_test,
   not_equal_p7_test,
   not_equal_p18_test,
   not_equal_p29_test,
   not_equal_p40_test,
   not_equal_p51_test,
   not_equal_p62_test,
   not_equal_p2_test,
   not_equal_p13_test,
   not_equal_p35_test,
   not_equal_p57_test,
   not_equal_p8_test,
   not_equal_p19_test,
   not_equal_p30_test,
   not_equal_p41_test,
   not_equal_p52_test,
   not_equal_p63_test,
   not_equal_p3_test,
   not_equal_p14_test,
   not_equal_p25_test,
   not_equal_p36_test,
   not_equal_p47_test,
   not_equal_p58_test,
   not_equal_p9_test,
   not_equal_p20_test,
   not_equal_p31_test,
   not_equal_p42_test,
   not_equal_p53_test,
   not_equal_p64_test,
   not_equal_p4_test,
   not_equal_p15_test,
   not_equal_p26_test,
   not_equal_p37_test,
   not_equal_p48_test,
   not_equal_p59_test,
   not_equal_p10_test,
   not_equal_p21_test,
   not_equal_p32_test,
   not_equal_p43_test,
   not_equal_p54_test,
   not_equal_p65_test,
   not_equal_f5_test,
   not_equal_f16_test,
   not_equal_f27_test,
   not_equal_f38_test,
   not_equal_f49_test,
   not_equal_f60_test,
   not_equal_f11_test,
   not_equal_f22_test,
   not_equal_f33_test,
   not_equal_f44_test,
   not_equal_f55_test,
   not_equal_f66_test,
   not_equal_f6_test,
   not_equal_f17_test,
   not_equal_f28_test,
   not_equal_f39_test,
   not_equal_f50_test,
   not_equal_f61_test,
   not_equal_f1_test,
   not_equal_f12_test,
   not_equal_f34_test,
   not_equal_f56_test,
   not_equal_f7_test,
   not_equal_f18_test,
   not_equal_f29_test,
   not_equal_f40_test,
   not_equal_f51_test,
   not_equal_f62_test,
   not_equal_f2_test,
   not_equal_f13_test,
   not_equal_f35_test,
   not_equal_f57_test,
   not_equal_f8_test,
   not_equal_f19_test,
   not_equal_f30_test,
   not_equal_f41_test,
   not_equal_f52_test,
   not_equal_f63_test,
   not_equal_f3_test,
   not_equal_f14_test,
   not_equal_f25_test,
   not_equal_f36_test,
   not_equal_f47_test,
   not_equal_f58_test,
   not_equal_f9_test,
   not_equal_f20_test,
   not_equal_f31_test,
   not_equal_f42_test,
   not_equal_f53_test,
   not_equal_f64_test,
   not_equal_f4_test,
   not_equal_f15_test,
   not_equal_f26_test,
   not_equal_f37_test,
   not_equal_f48_test,
   not_equal_f59_test,
   not_equal_f10_test,
   not_equal_f21_test,
   not_equal_f32_test,
   not_equal_f43_test,
   not_equal_f54_test,
   not_equal_f65_test,
   not_equal_q5_test,
   not_equal_q16_test,
   not_equal_q27_test,
   not_equal_q38_test,
   not_equal_q49_test,
   not_equal_q60_test,
   not_equal_q11_test,
   not_equal_q22_test,
   not_equal_q33_test,
   not_equal_q44_test,
   not_equal_q55_test,
   not_equal_q66_test,
   not_equal_q6_test,
   not_equal_q17_test,
   not_equal_q28_test,
   not_equal_q39_test,
   not_equal_q50_test,
   not_equal_q61_test,
   not_equal_q1_test,
   not_equal_q12_test,
   not_equal_q34_test,
   not_equal_q56_test,
   not_equal_q7_test,
   not_equal_q18_test,
   not_equal_q29_test,
   not_equal_q40_test,
   not_equal_q51_test,
   not_equal_q62_test,
   not_equal_q2_test,
   not_equal_q13_test,
   not_equal_q35_test,
   not_equal_q57_test,
   not_equal_q8_test,
   not_equal_q19_test,
   not_equal_q30_test,
   not_equal_q41_test,
   not_equal_q52_test,
   not_equal_q63_test,
   not_equal_q3_test,
   not_equal_q14_test,
   not_equal_q25_test,
   not_equal_q36_test,
   not_equal_q47_test,
   not_equal_q58_test,
   not_equal_q9_test,
   not_equal_q20_test,
   not_equal_q31_test,
   not_equal_q42_test,
   not_equal_q53_test,
   not_equal_q64_test,
   not_equal_q4_test,
   not_equal_q15_test,
   not_equal_q26_test,
   not_equal_q37_test,
   not_equal_q48_test,
   not_equal_q59_test,
   not_equal_q10_test,
   not_equal_q21_test,
   not_equal_q32_test,
   not_equal_q43_test,
   not_equal_q54_test,
   not_equal_q65_test,
   not_equal_g5_test,
   not_equal_g16_test,
   not_equal_g27_test,
   not_equal_g38_test,
   not_equal_g49_test,
   not_equal_g60_test,
   not_equal_g11_test,
   not_equal_g22_test,
   not_equal_g33_test,
   not_equal_g44_test,
   not_equal_g55_test,
   not_equal_g66_test,
   not_equal_g6_test,
   not_equal_g17_test,
   not_equal_g28_test,
   not_equal_g39_test,
   not_equal_g50_test,
   not_equal_g61_test,
   not_equal_g1_test,
   not_equal_g12_test,
   not_equal_g34_test,
   not_equal_g56_test,
   not_equal_g7_test,
   not_equal_g18_test,
   not_equal_g29_test,
   not_equal_g40_test,
   not_equal_g51_test,
   not_equal_g62_test,
   not_equal_g2_test,
   not_equal_g13_test,
   not_equal_g35_test,
   not_equal_g57_test,
   not_equal_g8_test,
   not_equal_g19_test,
   not_equal_g30_test,
   not_equal_g41_test,
   not_equal_g52_test,
   not_equal_g63_test,
   not_equal_g3_test,
   not_equal_g14_test,
   not_equal_g25_test,
   not_equal_g36_test,
   not_equal_g47_test,
   not_equal_g58_test,
   not_equal_g9_test,
   not_equal_g20_test,
   not_equal_g31_test,
   not_equal_g42_test,
   not_equal_g53_test,
   not_equal_g64_test,
   not_equal_g4_test,
   not_equal_g15_test,
   not_equal_g26_test,
   not_equal_g37_test,
   not_equal_g48_test,
   not_equal_g59_test,
   not_equal_g10_test,
   not_equal_g21_test,
   not_equal_g32_test,
   not_equal_g43_test,
   not_equal_g54_test,
   not_equal_g65_test,
   not_equal_r5_test,
   not_equal_r16_test,
   not_equal_r27_test,
   not_equal_r38_test,
   not_equal_r49_test,
   not_equal_r60_test,
   not_equal_r11_test,
   not_equal_r22_test,
   not_equal_r33_test,
   not_equal_r44_test,
   not_equal_r55_test,
   not_equal_r66_test,
   not_equal_r6_test,
   not_equal_r17_test,
   not_equal_r28_test,
   not_equal_r39_test,
   not_equal_r50_test,
   not_equal_r61_test,
   not_equal_r1_test,
   not_equal_r12_test,
   not_equal_r34_test,
   not_equal_r56_test,
   not_equal_r7_test,
   not_equal_r18_test,
   not_equal_r29_test,
   not_equal_r40_test,
   not_equal_r51_test,
   not_equal_r62_test,
   not_equal_r2_test,
   not_equal_r13_test,
   not_equal_r35_test,
   not_equal_r57_test,
   not_equal_r8_test,
   not_equal_r19_test,
   not_equal_r30_test,
   not_equal_r41_test,
   not_equal_r52_test,
   not_equal_r63_test,
   not_equal_r3_test,
   not_equal_r14_test,
   not_equal_r25_test,
   not_equal_r36_test,
   not_equal_r47_test,
   not_equal_r58_test,
   not_equal_r9_test,
   not_equal_r20_test,
   not_equal_r31_test,
   not_equal_r42_test,
   not_equal_r53_test,
   not_equal_r64_test,
   not_equal_r4_test,
   not_equal_r15_test,
   not_equal_r26_test,
   not_equal_r37_test,
   not_equal_r48_test,
   not_equal_r59_test,
   not_equal_r10_test,
   not_equal_r21_test,
   not_equal_r32_test,
   not_equal_r43_test,
   not_equal_r54_test,
   not_equal_r65_test,
   not_equal_h5_test,
   not_equal_h16_test,
   not_equal_h27_test,
   not_equal_h38_test,
   not_equal_h49_test,
   not_equal_h60_test,
   not_equal_h11_test,
   not_equal_h22_test,
   not_equal_h33_test,
   not_equal_h44_test,
   not_equal_h55_test,
   not_equal_h66_test,
   not_equal_h6_test,
   not_equal_h17_test,
   not_equal_h28_test,
   not_equal_h39_test,
   not_equal_h50_test,
   not_equal_h61_test,
   not_equal_h1_test,
   not_equal_h12_test,
   not_equal_h34_test,
   not_equal_h56_test,
   not_equal_h7_test,
   not_equal_h18_test,
   not_equal_h29_test,
   not_equal_h40_test,
   not_equal_h51_test,
   not_equal_h62_test,
   not_equal_h2_test,
   not_equal_h13_test,
   not_equal_h35_test,
   not_equal_h57_test,
   not_equal_h8_test,
   not_equal_h19_test,
   not_equal_h30_test,
   not_equal_h41_test,
   not_equal_h52_test,
   not_equal_h63_test,
   not_equal_h3_test,
   not_equal_h14_test,
   not_equal_h25_test,
   not_equal_h36_test,
   not_equal_h47_test,
   not_equal_h58_test,
   not_equal_h9_test,
   not_equal_h20_test,
   not_equal_h31_test,
   not_equal_h42_test,
   not_equal_h53_test,
   not_equal_h64_test,
   not_equal_h4_test,
   not_equal_h15_test,
   not_equal_h26_test,
   not_equal_h37_test,
   not_equal_h48_test,
   not_equal_h59_test,
   not_equal_h10_test,
   not_equal_h21_test,
   not_equal_h32_test,
   not_equal_h43_test,
   not_equal_h54_test,
   not_equal_h65_test,
   not_equal_s5_test,
   not_equal_s16_test,
   not_equal_s27_test,
   not_equal_s38_test,
   not_equal_s49_test,
   not_equal_s60_test,
   not_equal_s11_test,
   not_equal_s22_test,
   not_equal_s33_test,
   not_equal_s44_test,
   not_equal_s55_test,
   not_equal_s66_test,
   not_equal_s6_test,
   not_equal_s17_test,
   not_equal_s28_test,
   not_equal_s39_test,
   not_equal_s50_test,
   not_equal_s61_test,
   not_equal_s1_test,
   not_equal_s12_test,
   not_equal_s34_test,
   not_equal_s56_test,
   not_equal_s7_test,
   not_equal_s18_test,
   not_equal_s29_test,
   not_equal_s40_test,
   not_equal_s51_test,
   not_equal_s62_test,
   not_equal_s2_test,
   not_equal_s13_test,
   not_equal_s35_test,
   not_equal_s57_test,
   not_equal_s8_test,
   not_equal_s19_test,
   not_equal_s30_test,
   not_equal_s41_test,
   not_equal_s52_test,
   not_equal_s63_test,
   not_equal_s3_test,
   not_equal_s14_test,
   not_equal_s25_test,
   not_equal_s36_test,
   not_equal_s47_test,
   not_equal_s58_test,
   not_equal_s9_test,
   not_equal_s20_test,
   not_equal_s31_test,
   not_equal_s42_test,
   not_equal_s53_test,
   not_equal_s64_test,
   not_equal_s4_test,
   not_equal_s15_test,
   not_equal_s26_test,
   not_equal_s37_test,
   not_equal_s48_test,
   not_equal_s59_test,
   not_equal_s10_test,
   not_equal_s21_test,
   not_equal_s32_test,
   not_equal_s43_test,
   not_equal_s54_test,
   not_equal_s65_test,
   not_equal_i5_test,
   not_equal_i16_test,
   not_equal_i27_test,
   not_equal_i38_test,
   not_equal_i49_test,
   not_equal_i60_test,
   not_equal_i11_test,
   not_equal_i22_test,
   not_equal_i33_test,
   not_equal_i44_test,
   not_equal_i55_test,
   not_equal_i66_test,
   not_equal_i6_test,
   not_equal_i17_test,
   not_equal_i28_test,
   not_equal_i39_test,
   not_equal_i50_test,
   not_equal_i61_test,
   not_equal_i1_test,
   not_equal_i12_test,
   not_equal_i34_test,
   not_equal_i56_test,
   not_equal_i7_test,
   not_equal_i18_test,
   not_equal_i29_test,
   not_equal_i40_test,
   not_equal_i51_test,
   not_equal_i62_test,
   not_equal_i2_test,
   not_equal_i13_test,
   not_equal_i35_test,
   not_equal_i57_test,
   not_equal_i8_test,
   not_equal_i19_test,
   not_equal_i30_test,
   not_equal_i41_test,
   not_equal_i52_test,
   not_equal_i63_test,
   not_equal_i3_test,
   not_equal_i14_test,
   not_equal_i25_test,
   not_equal_i36_test,
   not_equal_i47_test,
   not_equal_i58_test,
   not_equal_i9_test,
   not_equal_i20_test,
   not_equal_i31_test,
   not_equal_i42_test,
   not_equal_i53_test,
   not_equal_i64_test,
   not_equal_i4_test,
   not_equal_i15_test,
   not_equal_i26_test,
   not_equal_i37_test,
   not_equal_i48_test,
   not_equal_i59_test,
   not_equal_i10_test,
   not_equal_i21_test,
   not_equal_i32_test,
   not_equal_i43_test,
   not_equal_i54_test,
   not_equal_i65_test,
   not_equal_t5_test,
   not_equal_t16_test,
   not_equal_t27_test,
   not_equal_t38_test,
   not_equal_t49_test,
   not_equal_t60_test,
   not_equal_t11_test,
   not_equal_t22_test,
   not_equal_t33_test,
   not_equal_t44_test,
   not_equal_t55_test,
   not_equal_t66_test,
   not_equal_t6_test,
   not_equal_t17_test,
   not_equal_t28_test,
   not_equal_t39_test,
   not_equal_t50_test,
   not_equal_t61_test,
   not_equal_t1_test,
   not_equal_t12_test,
   not_equal_t34_test,
   not_equal_t56_test,
   not_equal_t7_test,
   not_equal_t18_test,
   not_equal_t29_test,
   not_equal_t40_test,
   not_equal_t51_test,
   not_equal_t62_test,
   not_equal_t2_test,
   not_equal_t13_test,
   not_equal_t35_test,
   not_equal_t57_test,
   not_equal_t8_test,
   not_equal_t19_test,
   not_equal_t30_test,
   not_equal_t41_test,
   not_equal_t52_test,
   not_equal_t63_test,
   not_equal_t3_test,
   not_equal_t14_test,
   not_equal_t25_test,
   not_equal_t36_test,
   not_equal_t47_test,
   not_equal_t58_test,
   not_equal_t9_test,
   not_equal_t20_test,
   not_equal_t31_test,
   not_equal_t42_test,
   not_equal_t53_test,
   not_equal_t64_test,
   not_equal_t4_test,
   not_equal_t15_test,
   not_equal_t26_test,
   not_equal_t37_test,
   not_equal_t48_test,
   not_equal_t59_test,
   not_equal_t10_test,
   not_equal_t21_test,
   not_equal_t32_test,
   not_equal_t43_test,
   not_equal_t54_test,
   not_equal_t65_test,
   not_equal_j5_test,
   not_equal_j16_test,
   not_equal_j27_test,
   not_equal_j38_test,
   not_equal_j49_test,
   not_equal_j60_test,
   not_equal_j11_test,
   not_equal_j22_test,
   not_equal_j33_test,
   not_equal_j44_test,
   not_equal_j55_test,
   not_equal_j66_test,
   not_equal_j6_test,
   not_equal_j17_test,
   not_equal_j28_test,
   not_equal_j39_test,
   not_equal_j50_test,
   not_equal_j61_test,
   not_equal_j1_test,
   not_equal_j12_test,
   not_equal_j34_test,
   not_equal_j56_test,
   not_equal_j7_test,
   not_equal_j18_test,
   not_equal_j29_test,
   not_equal_j40_test,
   not_equal_j51_test,
   not_equal_j62_test,
   not_equal_j2_test,
   not_equal_j13_test,
   not_equal_j35_test,
   not_equal_j57_test,
   not_equal_j8_test,
   not_equal_j19_test,
   not_equal_j30_test,
   not_equal_j41_test,
   not_equal_j52_test,
   not_equal_j63_test,
   not_equal_j3_test,
   not_equal_j14_test,
   not_equal_j25_test,
   not_equal_j36_test,
   not_equal_j47_test,
   not_equal_j58_test,
   not_equal_j9_test,
   not_equal_j20_test,
   not_equal_j31_test,
   not_equal_j42_test,
   not_equal_j53_test,
   not_equal_j64_test,
   not_equal_j4_test,
   not_equal_j15_test,
   not_equal_j26_test,
   not_equal_j37_test,
   not_equal_j48_test,
   not_equal_j59_test,
   not_equal_j10_test,
   not_equal_j21_test,
   not_equal_j32_test,
   not_equal_j43_test,
   not_equal_j54_test,
   not_equal_j65_test,
   not_equal_u5_test,
   not_equal_u16_test,
   not_equal_u27_test,
   not_equal_u38_test,
   not_equal_u49_test,
   not_equal_u60_test,
   not_equal_u11_test,
   not_equal_u22_test,
   not_equal_u33_test,
   not_equal_u44_test,
   not_equal_u55_test,
   not_equal_u66_test,
   not_equal_u6_test,
   not_equal_u17_test,
   not_equal_u28_test,
   not_equal_u39_test,
   not_equal_u50_test,
   not_equal_u61_test,
   not_equal_u1_test,
   not_equal_u12_test,
   not_equal_u34_test,
   not_equal_u56_test,
   not_equal_u7_test,
   not_equal_u18_test,
   not_equal_u29_test,
   not_equal_u40_test,
   not_equal_u51_test,
   not_equal_u62_test,
   not_equal_u2_test,
   not_equal_u13_test,
   not_equal_u35_test,
   not_equal_u57_test,
   not_equal_u8_test,
   not_equal_u19_test,
   not_equal_u30_test,
   not_equal_u41_test,
   not_equal_u52_test,
   not_equal_u63_test,
   not_equal_u3_test,
   not_equal_u14_test,
   not_equal_u25_test,
   not_equal_u36_test,
   not_equal_u47_test,
   not_equal_u58_test,
   not_equal_u9_test,
   not_equal_u20_test,
   not_equal_u31_test,
   not_equal_u42_test,
   not_equal_u53_test,
   not_equal_u64_test,
   not_equal_u4_test,
   not_equal_u15_test,
   not_equal_u26_test,
   not_equal_u37_test,
   not_equal_u48_test,
   not_equal_u59_test,
   not_equal_u10_test,
   not_equal_u21_test,
   not_equal_u32_test,
   not_equal_u43_test,
   not_equal_u54_test,
   not_equal_u65_test
    ].
  
